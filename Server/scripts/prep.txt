

uint[]CityPids={(1),(2),(3),(20),(60),
	(1),(2),(3),(4),(5),(6),
	(7),(8),(9),(10),(11),(12),
	(40),
	(41),
	(42),
	(13),(14),(15),(16),
	(17),(25),(18),
	(19),(20),
	(21),(22),(23),(24)};

bool LocIsCity(uint locPid)
{
	for(uint i=0,j=CityPids.length();i<j;i++)
	{
		if(CityPids[i]==locPid)return true;
	}
	return false;
}

uint[]MaskedPids={(8)};
bool LocIsMasked(uint locPid)
{
	for(uint i=0,j=MaskedPids.length();i<j;i++)
	{
		if(MaskedPids[i]==locPid)return true;
	}
	return false;
}

uint[]HiddenPids={(7)};

bool LocIsHidden(uint locPid)
{
	for(uint i=0,j=HiddenPids.length();i<j;i++)
	{
		if(HiddenPids[i]==locPid)return true;
	}
	return false;
}

import void InjureCritter(Critter&cr,uint dmg,uint dmgType,uint8 dir,uint attackerId)from"combat";

import void ChangeStatus(Critter&cr,uint16 status,uint8 value,bool set)from"critter_status";
import void ChangeCritterSpeed(Critter&cr)from"speed";
import void UseDrug(Critter&cr,Item&drug)from"drugs";    

void ProccessFirstAidSkill(Critter&cr,Critter&targetCr)
{
	if(targetCr.Stat[(72)]<=0){cr.Say((11),"Это уже не поможет.");return;}
	
	bool isPlayer=cr.IsPlayer();
	
	int sk=cr.Skill[(206)];
	uint8 mode=0;
	uint16 activePid=cr.GetSlotProto((1),mode).ProtoId;  
	
	if(activePid!=(47))
	{
		cr.Say((11),"Вам нужны медицинские препараты, аптечка или аптечка военфельдшера для применения этого навыка.");
		return;
	}
	
	bool[]isHaveItem={false,false,false};
	
	uint16 statusFlag=cr.StatBase[(146)];     
	
	uint8[]drugIndexs={0,0,0};
	
	Item@activeHand=cr.GetItem(0,(1));
	if(@activeHand==null||activeHand.GetType()!=(8)){cr.Say((11),"Техническая ошибка, итема нет. Обратитесь к геиммастеру.");return;}
	Item@[]drugs;
	activeHand.GetItems(-1,drugs);
	
	uint16 firstAidFlag=activeHand.Val4;
	if((((statusFlag)&((0x010)))!=0)){cr.Say((11),"Здесь нужен врач.");return;}
	
	if(!FindItemInCont(drugs,drugIndexs,isHaveItem,firstAidFlag,true)){cr.Say((11),"Аптечка пуста");return;}     
	
	cr.Say((11),""+drugIndexs[0]+" "+drugIndexs[1]+" "+drugIndexs[2]);  
	
	bool isBandaged=(targetCr.GetTimeEvents((41),null,null,null)>0);
	
	if(targetCr.Stat[(72)]<targetCr.Stat[(7)])
	{   
		
		if(drugs[drugIndexs[1]].GetProtoId()==(40)){ItemStimpackUse(cr,drugs[drugIndexs[1]]);cr.Say((11),"Упарываемся.");}
		else if(drugs[drugIndexs[1]].GetProtoId()==(273)){ItemPowderUse(cr,drugs[drugIndexs[1]]);}
		
		if(isBandaged)
		{
			cr.Say((11),"Персонаж и так уже забинтован.");
			targetCr.Say((11),"Вы уже забинтованы. Ждите.");
			
		}
		
		if(isHaveItem[0])
		{
			uint16 drugProtoId=drugs[drugIndexs[0]].GetProtoId();
			if(drugProtoId==(125))
			{
				
				int16 hpCurrent=cr.StatBase[(72)];
				uint16 hpMax=(cr.StatBase[(7)]+cr.StatBase[(0)]*4+cr.StatBase[(2)]*8);
				uint8 chance=targetCr.Stat[(0)]*3+targetCr.Stat[(2)]*4+targetCr.Stat[(13)]*10*((hpMax*0.01)*(hpCurrent*0.01));
				chance=(((chance)>(95))?(95):(((chance)<(0))?(0):(chance)));
				if(Random(1,100-(targetCr.Stat[(6)]*Random(1,3)))>chance)
				{
					ChangeStatus(cr,(0x008),0,true);
				}
			}else if(Random(0,100)>95)ChangeStatus(cr,(0x008),0,true);
			
			drugs[drugIndexs[0]].GetCount()>1?drugs[drugIndexs[0]].SetCount(drugs[drugIndexs[0]].GetCount()-1):DeleteItem(drugs[drugIndexs[0]]);
			
		}else if(Random(100-((targetCr.Stat[(6)]*2)+targetCr.Stat[(13)]*5),100)>95)ChangeStatus(cr,(0x008),0,true);   
		
		if(activePid==(428))
		{
			cr.DeleteItem((428),1);
		}
		
		if(isHaveItem[2])
		{
			
			int mod=11-cr.Stat[(6)];
			mod=(((mod)>(10))?(10):(((mod)<(1))?(1):(mod)));
			int heal=Random(sk/mod,sk);
			if(heal<1)heal=1;
			
			int curHp=targetCr.Stat[(72)];
			int maxHp=targetCr.Stat[(7)];
			if(curHp+heal>maxHp)heal=maxHp-curHp; 
			
			int16 aidTime=80+(heal*10)-(targetCr.Stat[(13)]*3)-targetCr.Stat[(2)]+Random(-10,10);
			if(aidTime<0)aidTime=0;
			
			targetCr.AddTimeEvent("cte_Heal",aidTime,(41),heal);   
			
			cr.Say((11),"Наложил бинты."); 
			
			if(isPlayer)
			{
				GameVar@firstAidCount=::GetUnicumVar((2012),cr.Id,targetCr.Id);
				if(firstAidCount<10)
				{
					cr.StatBase[(76)]+=heal;
				}
				firstAidCount+=1;
				
				cr.TimeoutBase[(230)]=(__FullSecond+((15)*__TimeMultiplier));
				cr.AddScore((9),1);
			}
		}else{cr.Say((11),"В аптечке нет бинтов.");}
	}else{cr.Say((11),"Не нуждается в лечении.");}
}

void ProccessDoctorSkill(Critter&cr,Critter&targetCr)
{
	int uninjured=0;
	int sk=cr.Skill[(207)];
	uint8 mode=0;
	Item@activeHand=cr.GetItem(0,(1));
	if(@activeHand==null||activeHand.GetType()!=(8)){cr.Say((11),"Ошибка. Неверный итем. Обратитесь к геиммастеру.");return;}
	uint16 activePid=activeHand.GetProtoId();
	
	if(activePid!=(91))
	{
		cr.Say((11),"Вам нужен докторский чемоданчик для применения этого навыка.");
		return;
	}                           
	
	cr.RunClientScript("client_screen_doc@showScreen",cr.Id,targetCr.Id,activeHand.Id,"",null);
}

bool FindItemInCont(Item@[]&drugs,uint8[]&drugIndexs,bool[]&isHaveItem,uint16 flag,bool isFirstAid)
{
	uint8 drugsLength=drugs.length();
	if(drugsLength>0)
	{
		for(uint8 i=0;i<drugsLength;i++)
		{
			
			uint16 drugProtoId=drugs[i].GetProtoId();
			
			if(isFirstAid)
			{ 
				
				if(drugProtoId==(125))
				{
					if(!(((flag)&((0x2)))!=0)){drugIndexs[0]=i;isHaveItem[0]=true;}
					else if(!isHaveItem[0]){drugIndexs[0]=i;isHaveItem[0]=true;}
				}
				else if(drugProtoId==(2))
				{
					if((((flag)&((0x2)))!=0)){drugIndexs[0]=i;isHaveItem[0]=true;}
					else if(!isHaveItem[0]){drugIndexs[0]=i;isHaveItem[0]=true;}
				}
				
				else if(drugProtoId==(273))
				{
					if(!(((flag)&((0x4)))!=0)){drugIndexs[1]=i;isHaveItem[1]=true;}
					else if(!isHaveItem[1]){drugIndexs[1]=i;isHaveItem[1]=true;}
				}
				else if(drugProtoId==(40))
				{
					if((((flag)&((0x4)))!=0)){drugIndexs[1]=i;isHaveItem[1]=true;}
					else if(!isHaveItem[1]){drugIndexs[1]=i;isHaveItem[1]=true;}
				}
				
				else if(drugProtoId==(572))
				{
					if(!(((flag)&((0x8)))!=0)){drugIndexs[2]=i;isHaveItem[2]=true;}
					else if(!isHaveItem[2]){drugIndexs[2]=i;isHaveItem[2]=true;}
				}
				else if(drugProtoId==(4))
				{
					if((((flag)&((0x8)))!=0)){drugIndexs[2]=i;isHaveItem[2]=true;}
					else if(!isHaveItem[2]){drugIndexs[2]=i;isHaveItem[2]=true;}
				}                                         
				
			}else
			{
				if(drugProtoId==(125))
				{
					if(!(((flag)&((0x2)))!=0)){drugIndexs[0]=i;isHaveItem[0]=true;}
					else if(!isHaveItem[0]){drugIndexs[0]=i;isHaveItem[0]=true;}
					
					if(!(((flag)&((0x20)))!=0)){drugIndexs[4]=i;isHaveItem[4]=true;}
					else if(!isHaveItem[4]){drugIndexs[4]=i;isHaveItem[4]=true;}
				}
				else if(drugProtoId==(2))
				{
					if((((flag)&((0x2)))!=0)){drugIndexs[0]=i;isHaveItem[0]=true;}
					else if(!isHaveItem[0]){drugIndexs[0]=i;isHaveItem[0]=true;}
				}
				
				else if(drugProtoId==(75))
				{
					if(!(((flag)&((0x4)))!=0)){drugIndexs[1]=i;isHaveItem[1]=true;}
					else if(!isHaveItem[1]){drugIndexs[1]=i;isHaveItem[1]=true;}
				}
				else if(drugProtoId==(1))
				{
					if((((flag)&((0x4)))!=0)){drugIndexs[1]=i;isHaveItem[1]=true;}
					else if(!isHaveItem[1]){drugIndexs[1]=i;isHaveItem[1]=true;}
				}
				
				else if(drugProtoId==(297))
				{
					if(!(((flag)&((0x8)))!=0)){drugIndexs[2]=i;isHaveItem[2]=true;}
					else if(!isHaveItem[2]){drugIndexs[2]=i;isHaveItem[2]=true;}
				}
				else if(drugProtoId==(5))
				{
					if((((flag)&((0x8)))!=0)){drugIndexs[2]=i;isHaveItem[2]=true;}
					else if(!isHaveItem[2]){drugIndexs[2]=i;isHaveItem[2]=true;}
				}
				
				else if(drugProtoId==(922))
				{
					if(!(((flag)&((0x10)))!=0)){drugIndexs[3]=i;isHaveItem[3]=true;}
					else if(!isHaveItem[3]){drugIndexs[3]=i;isHaveItem[3]=true;}
				}
				else if(drugProtoId==(6))
				{
					if((((flag)&((0x10)))!=0)){drugIndexs[3]=i;isHaveItem[3]=true;}
					else if(!isHaveItem[3]){drugIndexs[3]=i;isHaveItem[3]=true;}
				}     
				
				else if(drugProtoId==(7))
				{
					if((((flag)&((0x20)))!=0)){drugIndexs[4]=i;isHaveItem[4]=true;}
					else if(!isHaveItem[4]){drugIndexs[4]=i;isHaveItem[4]=true;}
				}
				
				else if(drugProtoId==(921))
				{
					drugIndexs[5]=i;isHaveItem[5]=true;
				}  
				
			} 
			
			Log("no "+i+" pid "+drugProtoId+" index "+drugIndexs[i]+" isHave "+isHaveItem[i]);
		}
		return true;
	}
	return false;
} 

bool ItemStimpackUse(Critter&cr,Item&item)
{
	int16 hpCurrent=cr.StatBase[(72)];
	uint16 hpMax=(cr.StatBase[(7)]+cr.StatBase[(0)]*4+cr.StatBase[(2)]*8);
	uint8 hpHealRate=cr.Stat[(13)];
	
	if(hpCurrent==hpMax){cr.Say((11),"Ваше здоровье маскимально.");return true;}
	
	float healMod=(hpMax*0.01)*(hpCurrent*0.01);
	if(healMod==0)healMod=1;
	uint16 healAdd=(hpHealRate*4)*(healMod);
	healAdd=(((healAdd)>(hpHealRate*(cr.Stat[(2)]+cr.Stat[(0)])*0.8))?(hpHealRate*(cr.Stat[(2)]+cr.Stat[(0)])*0.8):(((healAdd)<(1))?(1):(healAdd)));
	hpCurrent+healAdd>hpMax?cr.StatBase[(72)]=hpMax:cr.StatBase[(72)]+=healAdd; 
	
	if(hpCurrent>=(hpMax*0.75))
	{
		ChangeStatus(cr,(0x001),healAdd*0.5,false);
	}
	
	item.GetCount()>1?item.SetCount(item.GetCount()-1):DeleteItem(item);
	
	uint8 overdose=(cr.StatBase[(148)]&0x4);
	
	cr.Say((11),"before "+cr.Stat[(148)]);
	
	if(overdose<=(cr.Stat[(2)]+cr.Stat[(0)])/2.5)
	{
		overdose++;
		overdose=(((overdose)>(7))?(7):(((overdose)<(0))?(0):(overdose)));
		cr.StatBase[(148)]|=overdose;
	}else
	{
		if(Random(0,95)>cr.Stat[(6)]*10)
		{
			cr.ToDead(Random(0,1)>0?(102):(103),null);
			cr.Say((11),"Вы умерли от передозировки.");
			return true;
		}else
		{
			cr.ToKnockout((((Random(0,1)==1))?(82):(83)),(((Random(0,1)==1))?(86):(87)),(((Random(0,1)==1))?(88):(89)),200-(cr.Stat[(2)]*cr.Stat[(13)]*2),cr.HexX,cr.HexY);
			cr.Say((11),"У Вас передозировка.");
		}
	}
	
	cr.Say((11),"after "+cr.StatBase[(148)]);
	
	ChangeCritterSpeed(cr);
	
	cr.Say((11),"Вы восстановили "+healAdd+" жизней");
	return true;
}

bool ItemPowderUse(Critter&cr,Item&item)
{
	uint8 overdose=((cr.StatBase[(148)]>>4)&0x4);
	
	cr.Say((11),"before "+cr.Stat[(148)]);
	
	if(overdose<=((cr.Stat[(2)]*2)+(cr.Stat[(0)]*2)/5))
	{
		overdose++;
		overdose=(((overdose)>(7))?(7):(((overdose)<(0))?(0):(overdose)));
		(cr.StatBase[(148)]<<4)|=overdose;
	}else
	{
		if(Random(0,95)>cr.Stat[(6)]*10)
		{
			cr.ToDead(Random(0,1)>0?(102):(103),null);
			cr.Say((11),"Вы умерли от передозировки.");
			return true;
		}else
		{
			cr.ToKnockout((((Random(0,1)==1))?(82):(83)),(((Random(0,1)==1))?(86):(87)),(((Random(0,1)==1))?(88):(89)),200-(cr.Stat[(2)]*cr.Stat[(13)]*2),cr.HexX,cr.HexY);
			cr.Say((11),"У Вас передозировка.");
		}
	}
	
	cr.Say((11),"after "+cr.StatBase[(148)]);
	UseDrug(cr,item);
	return true;
}

uint cte_Heal(Critter&cr,int identifier,uint&rate)
{
	cr.StatBase[(72)]+=rate;
	cr.Say((11),"Вылечено жизней: "+rate);
	
	uint8 rnd=Random(1,rate*0.05);
	rate-=(rate>rate-rnd?rate-rnd:1);
	
	int16 aidTime=80+(rate*10)-(cr.Stat[(13)]*3)-cr.Stat[(2)]+Random(-10,10);
	if(aidTime<0)aidTime=0;
	
	ChangeCritterSpeed(cr);
	
	bool repeat;
	
	if(cr.StatBase[(7)]<=cr.StatBase[(72)]||rate<=1)
	{
		repeat=false;
	}
	return repeat?aidTime:0;
	
}

void unsafe_doc(Critter&cr,int damage,int targetId,int docbagId,string@message,int[]@p4)
{
	Critter@target=GetCritter(targetId);
	if(@target==null)return;
	
	uint8[]drugIndexs={0,0,0,0,0,0};
	bool[]isHaveItem={false,false,false,false,false,false};   
	
	uint16 statusFlag=target.StatBase[(146)];  
	
	Item@activeHand=cr.GetItem(0,(1));
	if(@activeHand==null||activeHand.GetType()!=(8)){cr.Say((11),"Техническая ошибка, итема нет. Обратитесь к геиммастеру.");return;}
	Item@[]drugs;
	activeHand.GetItems(-1,drugs);
	
	uint16 flag=activeHand.Val4;
	
	if(!FindItemInCont(drugs,drugIndexs,isHaveItem,flag,false)){cr.Say((11),"Сумка доктора пуста");return;}
	
	if(damage==(507))
	{
		if(!isHaveItem[5]||!isHaveItem[3]){cr.Say((11),"У Вас нет ниток или иглы.");return;}
		if((((target.StatBase[(146)])&((0x040)))!=0)||(((target.StatBase[(146)])&((0x010)))!=0))
		{
			if(isHaveItem[1])
			{
				uint8 skillMod=(drugs[drugIndexs[1]].GetProtoId()==(75)?60:20);
				
				if(Random(1,95-(target.Stat[(6)]*1.5))>(((target.Skill[(207)]-skillMod)>(95))?(95):(((target.Skill[(207)]-skillMod)<(0))?(0):(target.Skill[(207)]-skillMod))))
				{
					cr.Say((11),"Для Вас это оказалось слишком сложно.");
					cr.TimeoutBase[(231)]=(__FullSecond+((30)*__TimeMultiplier));
					return;
				}
				
				if(isHaveItem[4])
				{
					target.Say((11),"have 4");
					uint16 drugPid=drugs[drugIndexs[4]].GetProtoId();
					
					if(drugPid==(125))
					{
						uint8 boozeNeeded=target.Stat[(2)];
						uint8 boozeHave=drugs[drugIndexs[4]].GetCount();
						int8 damageValue=boozeHave-boozeNeeded;
						
						target.Say((11),""+boozeNeeded+" "+boozeHave+" "+damageValue);
						
						if(damageValue<0)
						{
							InjureCritter(target,((((damageValue)>0)?(damageValue):-(damageValue))*(40+Random(0,5)))*((target.Stat[(2)]+target.Stat[(0)])*0.01),(1),target.Dir,0);
						} 
						
						for(uint8 i=0;i<boozeNeeded;i++)
						{
							if(@drugs[drugIndexs[4]]!=null)
							{
								UseDrug(target,drugs[drugIndexs[4]]);
								drugs[drugIndexs[4]].GetCount()>1?drugs[drugIndexs[4]].SetCount(drugs[drugIndexs[4]].GetCount()-1):DeleteItem(drugs[drugIndexs[4]]);
								
								target.Say((11)," i = "+i+" booze "+boozeNeeded);
							}else break;
						}
					}
					else if(drugPid==(7))
					{
						drugs[drugIndexs[4]].GetCount()>1?drugs[drugIndexs[4]].SetCount(drugs[drugIndexs[4]].GetCount()-1):DeleteItem(drugs[drugIndexs[4]]);
					}
				}
				else
				{
					InjureCritter(target,400*((target.Stat[(2)]+target.Stat[(0)])*0.01),(1),target.Dir,0);
				}
				
				if(isHaveItem[0]&&(@drugs[drugIndexs[0]]!=null&&drugs[drugIndexs[0]].GetCount()>0))
				{
					uint16 drugProtoId=drugs[drugIndexs[0]].GetProtoId();
					if(drugProtoId==(125))
					{
						
						int16 hpCurrent=target.StatBase[(72)];
						uint16 hpMax=(target.StatBase[(7)]+target.StatBase[(0)]*4+target.StatBase[(2)]*8);
						uint8 chance=target.Stat[(0)]*3+target.Stat[(2)]*4+target.Stat[(13)]*10*((hpMax*0.01)*(hpCurrent*0.01))+((((target.StatBase[(146)])&((0x040)))!=0)?30:0);
						chance=(((chance)>(95))?(95):(((chance)<(0))?(0):(chance)));
						if(Random(1,100-(target.Stat[(6)]*Random(1,3)))>chance)
						{
							ChangeStatus(target,(0x008),0,true);
						}
					}else if(Random(0,100)>95)ChangeStatus(target,(0x008),0,true);
					
					drugs[drugIndexs[0]].GetCount()>1?drugs[drugIndexs[0]].SetCount(drugs[drugIndexs[0]].GetCount()-1):DeleteItem(drugs[drugIndexs[0]]);
					
				}else if(Random(130-((target.Stat[(6)]*2)+target.Stat[(13)]*5),100)>95)ChangeStatus(target,(0x008),0,true);
				
				ChangeStatus(target,(0x040),0,false);
				
				cr.Say((11),"Вы извлекли пули.");
			}else
			{
				cr.Say((11),"Вам потребуются плоскогубцы или зажим для этого.");
				return;
			}
		}else
		{
			cr.Say((11),"Вам не требуются помощь данного вида.");
			return;
		} 
		
		ChangeStatus(target,(0x010),0,false);
		cr.Say((11),"Вы зашили тяжелые раны.");
		return; 
		
	}
	
	uint[]rates;
	uint8 countTimes=target.GetTimeEvents((42),null,null,rates);
	cr.Say((11),""+countTimes);
	if(countTimes>0)
	{
		for(uint8 i=0;i<countTimes;i++)
		{
			cr.Say((5),""+i+" "+rates[i]);
			if(rates[i]==damage)
			{
				cr.Say((11),"Эта часть тела уже лечится.");
				return;
			}
		}
	}
	
	if(target.DamageBase[damage]==0){cr.Say((11),"Эта часть тела не нуждается в лечении.");return;}
	
	cr.Say((11),"id "+drugIndexs[2]+" have "+isHaveItem[2]);
	
	if(!isHaveItem[2]){cr.Say((11),"Требуется шина.");return;}
	
	uint docTime=504-cr.Skill[(207)]-(target.Stat[(2)]*5);
	target.AddTimeEvent("cte_Doc",docTime*3600,(42),damage);
	cr.StatBase[(76)]+=250;
	cr.TimeoutBase[(231)]=(__FullSecond+((30)*__TimeMultiplier));
	cr.AddScore((9),1);
	cr.Say((11),"Вы наложили швы.");
}

uint cte_Doc(Critter&cr,int identifier,uint&rate)
{
	cr.DamageBase[rate]=0;
	cr.Say((11),"Вы чувствуете себя гораздо лучше.");
	uint8 noMove=cr.DamageBase[(506)]>0&&cr.DamageBase[(505)]>0?1:0;
	cr.ModeBase[(539)]=noMove;
	cr.ModeBase[(540)]=noMove;
	
	return 0;
	
}

void unsafe_setDrugsPriority(Critter&cr,int id,int state,int p2,string@message,int[]@p4)
{
	
	Item@item=GetItem(id);
	if(@item==null)
	{
		cr.Say((11),"Не верный итем. Обратитесь к геиммастеру.");
		return;
	} 
	
	if(item.GetProtoId()!=(47)&&item.GetProtoId()!=(91))
	{
		cr.Say((11),"Неверный тип сумки.");
		return;
	}
	if(item.Accessory!=(1))
	{
		cr.Say((11),"Должен быть в инвентаре.");
		return;
	}
	
	item.Val4=state;
}