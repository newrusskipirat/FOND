#include "_macros.fos"
import bool AddAttackPlane( Critter& npc, uint priority, Critter& target ) from "npc_planes";
import uint EraseAttackPlane( Critter& npc, Critter& target ) from "npc_planes";

void _leaders( Critter& cr, bool firstTime )
{
    cr.SetEvent( CRITTER_EVENT_DEAD, "_lowPop" );
    cr.SetEvent( CRITTER_EVENT_RESPAWN, "_hiPop" );
    cr.SetEvent( CRITTER_EVENT_SHOW_CRITTER, "_getOverHere" );
    cr.SetEvent( CRITTER_EVENT_HIDE_CRITTER, "_okGoAway" );
    cr.SetEvent( CRITTER_EVENT_SMTH_ATTACKED, "_dontTouchIt" );
}

void _egg( Critter& cr, bool firstTime )
{
    cr.SetEvent( CRITTER_EVENT_DEAD, "_lowPop2" );
    cr.SetEvent( CRITTER_EVENT_RESPAWN, "_hiPop2" );
}

void _lowPop( Critter& cr, Critter@ killer )
{
    switch( cr.CrType )
    {
    case 25:
    {
        GameVar@ flocent = GetGlobalVar( GVAR_floaterandcentaur_population );
        flocent += 1;
        break;
    }
    case 51:
    {
        GameVar@ deathclaw = GetGlobalVar( GVAR_deathclaw_population );
        deathclaw += 1;
        break;
    }
    case 81:
    {
        GameVar@ firegecko = GetGlobalVar( GVAR_firegecko_population );
        firegecko += 1;
        break;
    }
    case 86:
    {
        GameVar@ alien = GetGlobalVar( GVAR_alien_population );
        alien += 1;
        break;
    }
    default:
        break;
    }
}

void _hiPop( Critter& cr )
{
    switch( cr.CrType )
    {
    case 25:
    {
        GameVar@ flocent = GetGlobalVar( GVAR_floaterandcentaur_population );
        flocent -= 1;
        break;
    }
    case 51:
    {
        GameVar@ deathclaw = GetGlobalVar( GVAR_deathclaw_population );
        deathclaw -= 1;
        break;
    }
    case 81:
    {
        GameVar@ firegecko = GetGlobalVar( GVAR_firegecko_population );
        firegecko -= 1;
        break;
    }
    case 86:
    {
        GameVar@ alien = GetGlobalVar( GVAR_alien_population );
        alien -= 1;
        break;
    }
    default:
        break;
    }
}

void _getOverHere( Critter& cr, Critter& showCr )
{
    if( showCr.IsPlayer() && showCr.Param[ QST_GAMEMODE ] != GAME_ARCADE )
    {
        AddAttackPlane( cr, AI_PLANE_ATTACK_PRIORITY + 1, showCr );
    }
}

void _okGoAway( Critter& cr, Critter& hideCr )
{
    if( hideCr.IsPlayer() && hideCr.Param[ QST_GAMEMODE ] != GAME_ARCADE )
    {
        EraseAttackPlane( cr, hideCr );
    }
}

void _dontTouchIt( Critter& cr, Critter& fromCr, Critter& attacker )
{
    if( fromCr.Stat[ ST_TEAM_ID ] == cr.Stat[ ST_TEAM_ID ] )
    {
        AddAttackPlane( cr, AI_PLANE_ATTACK_PRIORITY + 1, attacker );
    }
}


void _lowPop2( Critter& cr, Critter@ killer )
{
    switch( cr.Stat[ ST_BODY_TYPE ] )
    {
    case BT_DEADCLAW:
    {
        GameVar@ deathclaw = GetGlobalVar( GVAR_deathclaw_population );
        deathclaw += 1;
        break;
    }

    case BT_GECKO:
    {
        GameVar@ firegecko = GetGlobalVar( GVAR_firegecko_population );
        firegecko += 1;
        break;
    }
    case BT_CENTAUR:
    {
        GameVar@ flocent = GetGlobalVar( GVAR_floaterandcentaur_population );
        flocent += 1;
        break;
    }
    case BT_ALIEN:
    {
        GameVar@ alien = GetGlobalVar( GVAR_alien_population );
        alien += 1;
        break;
    }
    default:
        break;
    }
}

void _hiPop2( Critter& cr )
{
    switch( cr.Param[ ST_BODY_TYPE ] )
    {
    case BT_CENTAUR:
    {
        GameVar@ flocent = GetGlobalVar( GVAR_floaterandcentaur_population );
        flocent -= 1;
        break;
    }
    case BT_DEADCLAW:
    {
        GameVar@ deathclaw = GetGlobalVar( GVAR_deathclaw_population );
        deathclaw -= 1;
        break;
    }
    case BT_GECKO:
    {
        GameVar@ firegecko = GetGlobalVar( GVAR_firegecko_population );
        firegecko -= 1;
        break;
    }
    case BT_ALIEN:
    {
        GameVar@ alien = GetGlobalVar( GVAR_alien_population );
        alien -= 1;
        break;
    }
    default:
        break;
    }
}
