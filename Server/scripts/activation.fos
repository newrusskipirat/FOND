#include "_macros.fos"

#define SUPER_ID     ( 999999 )
#define CODE_SIZE    ( 8 )

#define SERVER_ID    ( 12537 )

uint ServerId = SERVER_ID;

bool range( int8& num, int8 min, int8 max )
{
    return num >= min && num <= max;
}

// =================================================
//				Раздел функций генерации кода
// =================================================


void activation_generate_code( uint id, string@ chr_login, string& chr_code )
{
    uint len = chr_login.length();

    chr_code = "";
    chr_code.resize( CODE_SIZE );

    string chr_buffer = "";
    chr_buffer.resize( len );

    int8 tc;
/* old
        for(uint i=0; i<CODE_SIZE; i++)
        {
                tc = login[len-(i%len)-1];
                if(range(tc, 48, 57)) tc-=47;
                else if(range(tc, 65, 90)) tc-=(7+47);
                else if(range(tc, 97, 122)) tc-=(6+7+47);
                else if(range(tc, 192-256, 255-256)) tc-=(69+6+7+47);
                else tc=0;
                tc= (tc/1.27);
                tc = 100-tc;
                tc+=((id*(i+1)*len*5)%100);
                if(tc>100)tc-=100;
                tc = (tc*62)/100;
                if(range(tc, 48-47, 57-47)) tc+=47;
                else if(range(tc, 65-(7+47), 90-(7+47))) tc+=(7+47);
                else if(range(tc, 97-(6+7+47), 122-(6+7+47))) tc+=(6+7+47);
                else if(range(tc, 192-(69+6+7+47), 255-(69+6+7+47))) tc+=(69+6+7+47);
                else tc=48+((i*id)%10);
                code[i]=tc;
        }
 */
/* old2
        for(uint i=0; i<len; i++)
    {
        tc = chr_login[i];
        if(range(tc, 48, 57)) tc-=47;
        else if(range(tc, 65, 90)) tc-=(7+47);
        else if(range(tc, 97, 122)) tc-=(6+7+47);
        else if(range(tc, 192-256, 255-256)) tc-=(69+6+7+47);
        else tc=0;
        tc= (tc/1.27);
        chr_buffer[i]=tc;
    }
    for(uint i=0; i<len; i++)
    {
        tc = chr_buffer[i];
        tc+= chr_code[i%CODE_SIZE];
        tc = tc%100;
        if(i%2==0)tc = 100-tc;
        tc+=((id*(i+1)*len*5)%100);
        tc = tc%100;
        chr_code[i%CODE_SIZE]=tc;
    }
    for(uint i=0; i<len; i++)
    {
        tc = chr_buffer[len-i-1];
        tc+= chr_code[i%CODE_SIZE];
        tc = tc%100;
        if(i%2==0)tc = 100-tc;
        tc+=((id*(i+1)*len*5)%100);
        tc = tc%100;
        chr_code[i%CODE_SIZE]=tc;
    }
    for(uint i=0; i<CODE_SIZE; i++)
    {
        tc = chr_code[i];
        tc = (tc*62)/100;
        if(range(tc, 48-47, 57-47)) tc+=47;
        else if(range(tc, 65-(7+47), 90-(7+47))) tc+=(7+47);
        else if(range(tc, 97-(6+7+47), 122-(6+7+47))) tc+=(6+7+47);
        else if(range(tc, 192-(69+6+7+47), 255-(69+6+7+47))) tc+=(69+6+7+47);
        else tc=48+((i*id*len)%10);
        chr_code[i]=tc;
    }
 */

    for( uint i = 0; i < len; i++ )
    {
        tc = chr_login[ i ];
        if( range( tc, 48, 57 ) )							tc -= 47;
        else if( range( tc, 65, 90 ) )					tc -= ( 7 + 47 );
        else if( range( tc, 97, 122 ) )					tc -= ( 6 + 7 + 47 );
        else if( range( tc, 192 - 256, 255 - 256 ) )	tc -= ( 69 + 6 + 7 + 47 );
        else 												tc = 0;
		
        chr_buffer[ i ] = tc;
    }

/*	for(uint i=0; i<CODE_SIZE; i++)
        {
                chr_code[i]=0;
        }
 */
    for( uint i = 0; i < CODE_SIZE; i++ )
    {
        tc = 0;
        for( uint j = 0; j < len; j++ )
        {
            tc += chr_buffer[ ( i + j ) % len ];
            // tc= tc*(id%5+j);
            tc *= 2 + j;
        }
        tc += ( id * ( i + 1 ) * len * 5 * ( ServerId + 1 ) );
        // tc = (tc)%62;
        if( tc < 0 ) tc += 0x81;
		
        tc = ( tc ) % 62;
        // if(tc==0) tc+=1;
        chr_code[ i ] = tc;
    }

    for( uint i = 0; i < CODE_SIZE; i++ )
    {
        tc = chr_code[ i ];
        // tc = (tc*62)/100;
        if( range( tc, 48 - 47, 57 - 47 ) )									tc += 47;
        else if( range( tc, 65 - ( 7 + 47 ), 90 - ( 7 + 47 ) ) )			tc += ( 7 + 47 );
        else if( range( tc, 97 - ( 6 + 7 + 47 ), 122 - ( 6 + 7 + 47 ) ) )	tc += ( 6 + 7 + 47 );
        // else if(range(tc, 192-(69+6+7+47), 255-(69+6+7+47))) 				tc+=(69+6+7+47);
        else																	tc = 48 + ( ( i * id * len ) % 10 );
        chr_code[ i ] = tc;
    }
}

void activation_get_code( Critter& player, string& code )
{
    uint    id = player.Id;

    string@ login = GetPlayerName( id );

    activation_generate_code( id, login, code );
}

void activation_get_code( Critter& player, uint id, string& code )
{

    string@ login = GetPlayerName( player.Id );

    activation_generate_code( id, login, code );
}

// =================================================
//			Раздел для новой структуры функций активации
// =================================================




// =================================================
//			Раздел для структуры функций активации (старое)
// =================================================

/*
   bool deactivate(Critter& cr)
   {
        int var = act_var_get(cr);

        if(var<0) return false;

        if(!transit_start(cr)) return false;

        if(cr.CountItem(906)==0)
        {
                Item@ hand_item = _CritGetItemHand(cr);
                if(valid(hand_item)) _CritMoveItem(cr,hand_item,SLOT_INV);

                Item@ doc = cr.AddItem(906,1); // 906 - pid документов
                cr.MoveItem(doc.Id,1,SLOT_HAND1);
        }

        if(var) act_var_set(cr, false);

        return true;
   }

   bool deact(Critter& cr)		// Export
   {
        if(!deactivate(cr)) return false;

        if(act_var_get(cr)==ACT_BLOCK)
        {
                cr.Say(SAY_NETMSG, "Ваш персонаж заблокирован.");
        }

        return true;
   }


   bool act(Critter& player)
   {
        int var = act_var_get(player);

        if(var==1 || var==2)
        {
                //player.Say(SAY_NETMSG, "Персонаж уже активирован.");
                return false;
        }
        else if(var==3)
        {
                //player.Say(SAY_NETMSG, "Персонаж заблокирован.");
                return false;
        }

        act_var_set(player, true);

        if(player.CountItem(905)==0) player.AddItem(905,1);

        Map@ modoc = GetMapByPid  ( MAP_Modoc, 0);
        if(valid(modoc) && player.TransitToMap(modoc.Id,0))
        {
                uint zoneX=player.WorldX/__GlobalMapZoneLength;
                uint zoneY=player.WorldY/__GlobalMapZoneLength;
                player.SetFog(zoneX  ,zoneY  ,FOG_NONE);
                player.SetFog(zoneX-1,zoneY-1,FOG_HALF);
                player.SetFog(zoneX  ,zoneY-1,FOG_HALF);
                player.SetFog(zoneX+1,zoneY-1,FOG_HALF);
                player.SetFog(zoneX-1,zoneY  ,FOG_HALF);
                player.SetFog(zoneX+1,zoneY  ,FOG_HALF);
                player.SetFog(zoneX-1,zoneY+1,FOG_HALF);
                player.SetFog(zoneX  ,zoneY+1,FOG_HALF);
                player.SetFog(zoneX+1,zoneY+1,FOG_HALF);
                player.SetKnownLoc(false,LOCATION_Modoc);
                return true;
        }
        else Log("Activation: final transit panic! PlayerId: "+player.Id);

        return false;
   }

 */

// #include "activation_item.fos"

// #include "activation_gm.fos"

// #include "activation_store.fos"
