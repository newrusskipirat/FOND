// Author: TabaK

#include "_macros.fos"
#include "_ltp.fos"
/*import void InjureCritter(Critter& cr, uint dmg, uint dmgType, uint8 dir, uint attackerId) from "combat";*/
import bool IsNotHuman( Critter& cr ) from "handcuffs";
void        _itemInit( Item& item, bool FirstTime )
{
    item.SetEvent( ITEM_EVENT_USE, "_reanimate" );
}

bool _reanimate( Item& item, Critter& cr, Critter@ onCritter, Item@ onItem, Scenery@ onScenery )
{
    if( !valid( onCritter ) || ( IsNotHuman( onCritter ) ) )
    {
        return false;
    }

    if( onCritter.IsLife() && ( !IsNotHuman( onCritter ) ) )
    {
        // InjureCritter(onCritter, 50, 5, 0, cr.Id);
        cr.SayMsg( SAY_NETMSG, TEXTMSG_GAME, 12923 );
        return true;
    }

    if( onCritter.StatBase[ ST_BASE_CRTYPE ] == 115 ) {
        cr.Say( SAY_NETMSG, "Тут уже ничем не помочь." );
        return true;
	}
	
	if( cr.Skill[ SK_DOCTOR ] < 80 && ( !IsNotHuman( onCritter ) ) )
    {
        cr.SayMsg( SAY_NETMSG, TEXTMSG_GAME, 12920 );
        return true;
    }
	if( _CritCountItem( cr, PID_SMALL_ENERGY_CELL ) < 3 && _CritCountItem( cr, PID_MICRO_FUSION_CELL ) < 1 )
	{
        cr.Say( SAY_NETMSG, "Для зарядки дефибриллятора вам потребуется аккумулятор или хотя бы 3 нормальные батарейки." );
        return true;
	}
    if( onCritter.IsDead() && ( !IsNotHuman( onCritter ) ) )
    {
		if( _CritCountItem( cr, PID_SMALL_ENERGY_CELL ) > 2 ) {
			Item@ cell = cr.GetItem( PID_SMALL_ENERGY_CELL, -1 );
			if(valid(cell)) _SubItem( cell, 3); else cr.DeleteItem(PID_DEFIB,1);
		} else if (_CritCountItem( cr, PID_MICRO_FUSION_CELL ) > 0 ) {
			Item@ cell = cr.GetItem( PID_MICRO_FUSION_CELL, -1 );
			if(valid(cell)) _SubItem( cell, 1); else cr.DeleteItem(PID_DEFIB,1);
		} else cr.DeleteItem(PID_DEFIB,1);

		if( !ltp_defib_inited )
			ltp_defib_init();
		uint16 rndTime = 15000 - ( cr.StatBase[ SK_DOCTOR ] * 40 );
        StartProcess( cr, LTP_DEFIB, onCritter.Id, 0, 0, rndTime );
        cr.SayMsg( SAY_EMOTE, TEXTMSG_GAME, 12924 );
        // cr.Say(SAY_EMOTE_ON_HEAD, "Проверяет пульс");
        return true;
        /*
              if(onCritter.Anim2Dead<=ANIM2_DEAD_BURST)
              {
                      if(onCritter.IsPlayer())
                      {
                              GameVar@ act = GetLocalVar(LVAR_activationStatus, onCritter.Id);
                              GameVar@ former = GetLocalVar(LVAR_former_act, onCritter.Id);
                              act=former;
                      }
                              Map@ map=onCritter.GetMap();
                              if(onCritter.Anim2Dead==ANIM2_DEAD_BURST) cr.StatBase[ST_EXPERIENCE]+=300; else cr.StatBase[ST_EXPERIENCE]+=200;

                              if(map.IsHexPassed(onCritter.HexX, onCritter.HexY))
                              {
                                      onCritter.ToLife();
                                      onCritter.ToKnockout(KNOCKOUT_ANIM2_DEFAULT(true), 60, HexX, HexY);
                              }
                              else if (map.IsHexPassed(onCritter.HexX+1, onCritter.HexY))
                              {
                                      onCritter.TransitToHex(onCritter.HexX+1, onCritter.HexY, onCritter.Dir);
                                      onCritter.ToLife();
                              }
                              else if (map.IsHexPassed(onCritter.HexX-1, onCritter.HexY))
                              {
                                      onCritter.TransitToHex(onCritter.HexX-1, onCritter.HexY, onCritter.Dir);
                                      onCritter.ToLife();
                              }
                              else if (map.IsHexPassed(onCritter.HexX, onCritter.HexY+1))
                              {
                                      onCritter.TransitToHex(onCritter.HexX, onCritter.HexY+1, onCritter.Dir);
                                      onCritter.ToLife();
                              }
                              else if (map.IsHexPassed(onCritter.HexX, onCritter.HexY-1))
                              {
                                      onCritter.TransitToHex(onCritter.HexX, onCritter.HexY-1, onCritter.Dir);
                                      onCritter.ToLife();
                              }
                              else if (map.IsHexPassed(onCritter.HexX+1, onCritter.HexY+1))
                              {
                                      onCritter.TransitToHex(onCritter.HexX+1, onCritter.HexY+1, onCritter.Dir);
                                      onCritter.ToLife();
                              }
                              else if (map.IsHexPassed(onCritter.HexX-1, onCritter.HexY-1))
                              {
                                      onCritter.TransitToHex(onCritter.HexX-1, onCritter.HexY-1, onCritter.Dir);
                                      onCritter.ToLife();
                              }
                              cr.SayMsg(SAY_NETMSG,TEXTMSG_GAME,12921);
                              if(onCritter.IsNpc())onCritter.EraseEnemyFromStack(cr.Id);
                              return true;
              }
         */

    }
    return false;
}


// ltp add

bool ltp_defib_inited = false;

void ltp_defib_init()
{
    LTPREG( LTP_DEFIB, process_defib )
    ltp_defib_inited = true;
}

uint process_defib( Critter@ cr, int& param0, int& param1, int& param2 )
{
    LTPROCESSD( LTP_DEFIB )

    Critter @ onCritter = GetCritter( param0 );
    if( @onCritter is null )
        return 0;


    if( onCritter.Anim2Dead <= ANIM2_DEAD_BURST )
    {
/*        if( onCritter.IsPlayer() )
        {
            GameVar@ act = GetLocalVar( LVAR_activationStatus, onCritter.Id );
            GameVar@ former = GetLocalVar( LVAR_former_act, onCritter.Id );
            act = former;
        }*/
        Map@ map = onCritter.GetMap();
        if( onCritter.Anim2Dead == ANIM2_DEAD_BURST )
            cr.StatBase[ ST_EXPERIENCE ] += 300;
        else
            cr.StatBase[ ST_EXPERIENCE ] += 200;

        if( map.IsHexPassed( onCritter.HexX, onCritter.HexY ) )
        {
            onCritter.ToLife();
            onCritter.ToKnockout( KNOCKOUT_ANIM2_DEFAULT( true ), 100, onCritter.HexX, onCritter.HexY );
        }
        else if( map.IsHexPassed( onCritter.HexX + 1, onCritter.HexY ) )
        {
            onCritter.TransitToHex( onCritter.HexX + 1, onCritter.HexY, onCritter.Dir );
            onCritter.ToLife();
            onCritter.ToKnockout( KNOCKOUT_ANIM2_DEFAULT( true ), 100, onCritter.HexX, onCritter.HexY );
        }
        else if( map.IsHexPassed( onCritter.HexX - 1, onCritter.HexY ) )
        {
            onCritter.TransitToHex( onCritter.HexX - 1, onCritter.HexY, onCritter.Dir );
            onCritter.ToLife();
            onCritter.ToKnockout( KNOCKOUT_ANIM2_DEFAULT( true ), 100, onCritter.HexX, onCritter.HexY );
        }
        else if( map.IsHexPassed( onCritter.HexX, onCritter.HexY + 1 ) )
        {
            onCritter.TransitToHex( onCritter.HexX, onCritter.HexY + 1, onCritter.Dir );
            onCritter.ToLife();
            onCritter.ToKnockout( KNOCKOUT_ANIM2_DEFAULT( true ), 100, onCritter.HexX, onCritter.HexY );
        }
        else if( map.IsHexPassed( onCritter.HexX, onCritter.HexY - 1 ) )
        {
            onCritter.TransitToHex( onCritter.HexX, onCritter.HexY - 1, onCritter.Dir );
            onCritter.ToLife();
            onCritter.ToKnockout( KNOCKOUT_ANIM2_DEFAULT( true ), 100, onCritter.HexX, onCritter.HexY );
        }
        else if( map.IsHexPassed( onCritter.HexX + 1, onCritter.HexY + 1 ) )
        {
            onCritter.TransitToHex( onCritter.HexX + 1, onCritter.HexY + 1, onCritter.Dir );
            onCritter.ToLife();
            onCritter.ToKnockout( KNOCKOUT_ANIM2_DEFAULT( true ), 100, onCritter.HexX, onCritter.HexY );
        }
        else if( map.IsHexPassed( onCritter.HexX - 1, onCritter.HexY - 1 ) )
        {
            onCritter.TransitToHex( onCritter.HexX - 1, onCritter.HexY - 1, onCritter.Dir );
            onCritter.ToLife();
            onCritter.ToKnockout( KNOCKOUT_ANIM2_DEFAULT( true ), 100, onCritter.HexX, onCritter.HexY );
        }
        //cr.DeleteItem( PID_DEFIB, 1 );
        cr.SayMsg( SAY_NETMSG, TEXTMSG_GAME, 12921 );
        if( onCritter.IsNpc() )
            onCritter.EraseEnemyFromStack( cr.Id );
        return 0;
    }
    else
    {
        cr.SayMsg( SAY_NETMSG, TEXTMSG_GAME, 12922 );
        return 0;
    }
}
