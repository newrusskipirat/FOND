#include "_macros.fos"

//#define PID_POPUP 909

void _InitPopup( Item& popup, bool firstTime )
{
	/*
	if( popup.Val3 != 0 ) {
		uint[] values = { popup.MapId, popup.Val8, popup.Id, 0, 0 };
		CreateTimeEvent( __FullSecond + REAL_SECOND( 10 ), "general_unsafe@e_spawnTrap", values, false );
	} //Включение ловушек после рестарта сервера.
	else*/
		popup.SetEvent( ITEM_EVENT_WALK, "_showPopup" );
}

bool LogErr( string text ) { Log("[ERROR] " + text);  return true; }
bool real( Critter& cr ) { return( valid(cr) || !LogErr("Critter not valid!") ); }
bool real( Item& item ) { return( valid(item) || !LogErr("Item not valid!") ); }
bool MsgCr( Critter& cr, string text ) {
	if( !real(cr) ) return false;
	cr.Say( SAY_NETMSG, text );
	return true;
}
bool wrongInput( Critter& player, Item& item ) { return( !real(player) || !real(item) ); }
bool wrongInput( Critter& player, Item& item, string text ) { 
	return( !real(player) || ( !real(item) && MsgCr( player, text ) ) ); 
}
bool SetLexem ( Item& holder, string description ) {
	if( !real(holder) ) return false;
	holder.SetLexems( null ); //Очистка прошлых лексем.
	holder.SetLexems( description );
	holder.Update();
	return true;
}
bool newPopup( Critter& player, string description ) {
	if( !real(player) ) return false;
	Map@ map = player.GetMap();
	if( !valid(map) && MsgCr( player, "На глобале нельзя" ) ) return false;
	Item@ holder = map.AddItem( player.HexX, player.HexY, PID_POPUP, 1 );
	holder.SetEvent( ITEM_EVENT_WALK, "_showPopup" );
	SETFLAG( holder.Flags, ITEM_TRAP );
	holder.Val0 = player.Id;
	return SetLexem( holder, description );
}
void _showPopup( Item& holder, Critter& player, bool entered, uint8 dir ) {
	if(player.IsNpc()) return;
	if(holder.Val0 == 0) return;
	if(holder.Val2 != 0) return; //Это уже не простой попап, а хранилище данных сценери над собой.
	if( wrongInput( player, holder, "Под ногами что-то хрустнуло." ) ) return;
	if( entered ) {
		UNSETFLAG( holder.Flags, ITEM_HIDDEN );
		player.RunClientScript( "client_main@ShowPopup", holder.Id, 0, 0, "Всё оказалось немного сложней, чем вы думали..", null );
		SETFLAG( holder.Flags, ITEM_HIDDEN );
	}
}
Item@ getPopup( Critter& player ) {
	if( !real(player) ) return null;
	Map@ map = player.GetMap();
	if( !valid(map) && MsgCr( player, "На глобале нельзя" ) ) return null;
	return map.GetItem( player.HexX, player.HexY, PID_POPUP );
}
bool changePopup( Critter& player, string description ) { //Exported!
	if( !real(player) ) return false;
	Item@ holder = getPopup(player);
	if( !valid(holder) ) return newPopup( player, description);
	holder.Val0 = player.Id;
	changePopup( holder, description );
	return true;
}
bool changePopup( Item& holder, string description ) {
	if( !real(holder) ) return false;
	holder.SetEvent( ITEM_EVENT_WALK, "_showPopup" );
	SETFLAG( holder.Flags, ITEM_TRAP );
	SetLexem( holder, description );
	return true;
}
bool delPopup( Critter& player ) {
	if( !real(player) ) return false;
	Item@ holder = getPopup(player);
	if( valid(holder) && holder.Val2 == 0 ) DeleteItem(holder); //Защита от зачистки состояния дата-попапов у сценери (добыча ресов).
	return true;
}