

import void InitializeGame()from"config";    

bool new_instance(string commandLine)
{
	return false;
}  

void start()
{
	InitializeGame();
	InitializeTabs();
}                                                                                     

void InitializeTabs()
{
	
	TabDelete((13));
	uint16[]pids; 
	
	pids.resize(0);
	pids.insertLast(2049);
	pids.insertLast(2067);
	pids.insertLast(2141);
	pids.insertLast(2344);
	pids.insertLast(3852);
	pids.insertLast(3853);
	pids.insertLast(4012);
	pids.insertLast(4592);
	pids.insertLast(5621);
	pids.insertLast(5622);
	for(uint i=6800;i<=6805;i++)
	pids.insertLast(i);
	for(uint i=4016;i<=4023;i++)
	pids.insertLast(i);
	for(uint i=4031;i<=4046;i++)
	pids.insertLast(i);
	
	pids.insertLast(10001);
	TabSetItemPids((13),"001 - special",pids);
	pids.resize(0);
	pids.insertLast(2612);
	pids.insertLast(2827);
	pids.insertLast(2828);
	pids.insertLast(2907);
	pids.insertLast(2908);
	pids.insertLast(2935);
	pids.insertLast(2936);
	for(uint i=3373;i<=3376;i++)
	pids.insertLast(i);
	TabSetItemPids((13),"002 - light",pids); 
	
	TabDelete((0));
	pids.resize(0);
	pids.insertLast((1));
	pids.insertLast((2));
	pids.insertLast((3));
	pids.insertLast((17));
	pids.insertLast((74));
	pids.insertLast((113));
	pids.insertLast((232));
	pids.insertLast((239));
	pids.insertLast((240));
	pids.insertLast((265));
	pids.insertLast((348));
	pids.insertLast((349));
	pids.insertLast((379));
	pids.insertLast((380));
	pids.insertLast((381));
	pids.insertLast((524));
	TabSetItemPids((0),"001 - Fallout 2 armor",pids);
	pids.resize(0);
	pids.insertLast((547));
	pids.insertLast((558));
	pids.insertLast((559));
	pids.insertLast((585)); 
	
	pids.insertLast(1100);
	TabSetItemPids((0),"002 - FOnline armor",pids);
	TabSetName((0),"Arm"); 
	
	TabDelete((1));
	pids.resize(0);
	pids.insertLast((40));
	pids.insertLast((48));
	pids.insertLast((49));
	pids.insertLast((53));
	pids.insertLast((71));
	pids.insertLast((81));
	pids.insertLast((87));
	pids.insertLast((103));
	pids.insertLast((106));
	pids.insertLast((109));
	pids.insertLast((110));
	pids.insertLast((124));
	pids.insertLast((125));
	pids.insertLast((144));
	pids.insertLast((259));
	pids.insertLast((260));
	pids.insertLast((273));
	pids.insertLast((310));
	pids.insertLast((311));
	pids.insertLast((334));
	pids.insertLast((378));
	pids.insertLast((424));
	pids.insertLast((469));
	pids.insertLast((473));
	pids.insertLast((480));
	pids.insertLast((481));
	pids.insertLast((482));
	pids.insertLast((525));
	
	TabSetItemPids((1),"001 - Drugs",pids);
	TabSetName((1),"Drg"); 
	
	TabDelete((2));
	
	pids.resize(0);
	pids.insertLast((4));
	pids.insertLast((5));
	pids.insertLast((6));
	pids.insertLast((7));
	pids.insertLast((8));
	pids.insertLast((9));
	pids.insertLast((10));
	pids.insertLast((11));
	pids.insertLast((12));
	pids.insertLast((13));
	pids.insertLast((15));
	pids.insertLast((16));
	pids.insertLast((18));
	pids.insertLast((19));
	pids.insertLast((20));
	pids.insertLast((21));
	pids.insertLast((22));
	pids.insertLast((23));
	pids.insertLast((24));
	pids.insertLast((25));
	pids.insertLast((26));
	pids.insertLast((27));
	pids.insertLast((28));
	pids.insertLast((45));
	pids.insertLast((79));
	pids.insertLast((94));
	pids.insertLast((115));
	pids.insertLast((116));
	pids.insertLast((118));
	pids.insertLast((120));
	pids.insertLast((122));
	pids.insertLast((143));
	pids.insertLast((159));
	pids.insertLast((160));
	pids.insertLast((161));
	pids.insertLast((162));
	pids.insertLast((205));
	pids.insertLast((233));
	pids.insertLast((234));
	pids.insertLast((235));
	pids.insertLast((236));
	pids.insertLast((241));
	pids.insertLast((242));
	pids.insertLast((261));
	pids.insertLast((268));
	pids.insertLast((270));
	pids.insertLast((280));
	pids.insertLast((283));
	pids.insertLast((287));
	pids.insertLast((290));
	pids.insertLast((291));
	pids.insertLast((292));
	pids.insertLast((293));
	pids.insertLast((296));
	pids.insertLast((299));
	pids.insertLast((300));
	pids.insertLast((313));
	pids.insertLast((319));
	pids.insertLast((320));
	pids.insertLast((332));
	pids.insertLast((350));
	pids.insertLast((351));
	pids.insertLast((352));
	pids.insertLast((353));
	pids.insertLast((354));
	pids.insertLast((355));
	pids.insertLast((365));
	pids.insertLast((371));
	pids.insertLast((372));
	pids.insertLast((383));
	pids.insertLast((384));
	pids.insertLast((385));
	pids.insertLast((386));
	pids.insertLast((387));
	pids.insertLast((388));
	pids.insertLast((389));
	pids.insertLast((390));
	pids.insertLast((391));
	pids.insertLast((392));
	pids.insertLast((393));
	pids.insertLast((394));
	pids.insertLast((395));
	pids.insertLast((396));
	pids.insertLast((397));
	pids.insertLast((398));
	pids.insertLast((399));
	pids.insertLast((400));
	pids.insertLast((401));
	pids.insertLast((402));
	pids.insertLast((403));
	pids.insertLast((404));
	pids.insertLast((405));
	pids.insertLast((406));
	pids.insertLast((407));
	pids.insertLast((421));
	pids.insertLast((423));
	pids.insertLast((426));
	pids.insertLast((427));
	pids.insertLast((486));
	pids.insertLast((489));
	pids.insertLast((496));
	pids.insertLast((497));
	pids.insertLast((498));
	pids.insertLast((500));
	pids.insertLast((517));
	pids.insertLast((518));
	pids.insertLast((520));
	pids.insertLast((522));
	pids.insertLast((530));
	pids.insertLast((531));
	TabSetItemPids((2),"001 - Fallout 2 weapons",pids);
	
	pids.resize(0);
	pids.insertLast((546));
	pids.insertLast((578));
	
	TabSetItemPids((2),"002 - FOnline weapons",pids);
	
	TabSetName((2),"Wpn"); 
	
	TabDelete((3));
	pids.resize(0);
	pids.insertLast((29));
	pids.insertLast((30));
	pids.insertLast((31));
	pids.insertLast((32));
	pids.insertLast((14));
	pids.insertLast((33));
	pids.insertLast((34));
	pids.insertLast((35));
	pids.insertLast((36));
	pids.insertLast((37));
	pids.insertLast((38));
	pids.insertLast((39));
	pids.insertLast((95));
	pids.insertLast((111));
	pids.insertLast((121));
	pids.insertLast((163));
	pids.insertLast((274));
	pids.insertLast((357));
	pids.insertLast((358));
	pids.insertLast((359));
	pids.insertLast((360));
	pids.insertLast((361));
	pids.insertLast((362));
	pids.insertLast((363));
	pids.insertLast((382));
	
	TabSetItemPids((3),"001 - Ammo",pids);
	TabSetName((3),"Amm"); 
	
	TabDelete((4));
	
	pids.resize(0);
	pids.insertLast((41));
	pids.insertLast((47));
	pids.insertLast((50));
	pids.insertLast((51));
	pids.insertLast((54));
	pids.insertLast((55));
	pids.insertLast((56));
	pids.insertLast((57));
	pids.insertLast((58));
	pids.insertLast((59));
	pids.insertLast((72));
	pids.insertLast((73));
	pids.insertLast((75));
	pids.insertLast((76));
	pids.insertLast((77));
	pids.insertLast((78));
	pids.insertLast((80));
	pids.insertLast((84));
	pids.insertLast((85));
	pids.insertLast((86));
	pids.insertLast((88));
	pids.insertLast((89));
	pids.insertLast((91));
	pids.insertLast((92));
	pids.insertLast((98));
	pids.insertLast((99));
	pids.insertLast((101));
	pids.insertLast((102));
	pids.insertLast((104));
	pids.insertLast((112));
	pids.insertLast((114));
	pids.insertLast((117));
	pids.insertLast((119));
	pids.insertLast((123));
	pids.insertLast((126));
	pids.insertLast((127));
	pids.insertLast((140));
	pids.insertLast((141));
	pids.insertLast((142));
	pids.insertLast((190));
	pids.insertLast((191));
	pids.insertLast((192));
	pids.insertLast((193));
	pids.insertLast((194));
	pids.insertLast((195));
	pids.insertLast((196));
	pids.insertLast((207));
	pids.insertLast((208));
	pids.insertLast((210));
	pids.insertLast((212));
	pids.insertLast((215));
	pids.insertLast((216));
	pids.insertLast((217));
	pids.insertLast((221));
	pids.insertLast((223));
	pids.insertLast((224));
	pids.insertLast((225));
	pids.insertLast((226));
	pids.insertLast((227));
	pids.insertLast((228));
	pids.insertLast((229));
	pids.insertLast((230));
	pids.insertLast((231));
	pids.insertLast((237));
	pids.insertLast((238));
	pids.insertLast((252));
	pids.insertLast((253));
	pids.insertLast((254));
	pids.insertLast((255));
	pids.insertLast((256));
	pids.insertLast((257));
	pids.insertLast((258));
	pids.insertLast((262));
	pids.insertLast((263));
	pids.insertLast((264));
	pids.insertLast((266));
	pids.insertLast((267));
	pids.insertLast((269));
	pids.insertLast((271));
	pids.insertLast((272));
	pids.insertLast((275));
	pids.insertLast((276));
	pids.insertLast((277));
	pids.insertLast((278));
	pids.insertLast((279));
	pids.insertLast((281));
	pids.insertLast((282));
	pids.insertLast((284));
	pids.insertLast((285));
	pids.insertLast((286));
	pids.insertLast((288));
	pids.insertLast((289));
	pids.insertLast((294));
	pids.insertLast((295));
	pids.insertLast((297));
	pids.insertLast((298));
	pids.insertLast((301));
	pids.insertLast((302));
	pids.insertLast((303));
	pids.insertLast((304));
	pids.insertLast((305));
	pids.insertLast((306));
	pids.insertLast((307));
	pids.insertLast((308));
	pids.insertLast((309));
	pids.insertLast((312));
	pids.insertLast((314));
	pids.insertLast((315));
	pids.insertLast((316));
	pids.insertLast((317));
	pids.insertLast((318));
	pids.insertLast((321));
	pids.insertLast((322));
	pids.insertLast((323));
	pids.insertLast((324));
	pids.insertLast((325));
	pids.insertLast((326));
	pids.insertLast((327));
	pids.insertLast((328));
	pids.insertLast((329));
	pids.insertLast((331));
	pids.insertLast((333));
	pids.insertLast((335));
	pids.insertLast((336));
	pids.insertLast((337));
	pids.insertLast((338));
	pids.insertLast((339));
	pids.insertLast((340));
	pids.insertLast((341));
	pids.insertLast((342));
	pids.insertLast((343));
	pids.insertLast((356));
	pids.insertLast((364));
	pids.insertLast((366));
	pids.insertLast((373));
	pids.insertLast((377));
	pids.insertLast((408));
	pids.insertLast((409));
	pids.insertLast((410));
	pids.insertLast((411));
	pids.insertLast((412));
	pids.insertLast((413));
	pids.insertLast((414));
	pids.insertLast((415));
	pids.insertLast((416));
	pids.insertLast((417));
	pids.insertLast((418));
	pids.insertLast((419));
	pids.insertLast((420));
	pids.insertLast((422));
	pids.insertLast((425));
	pids.insertLast((428));
	pids.insertLast((429));
	pids.insertLast((430));
	pids.insertLast((431));
	pids.insertLast((432));
	pids.insertLast((433));
	pids.insertLast((436));
	pids.insertLast((437));
	pids.insertLast((438));
	pids.insertLast((439));
	pids.insertLast((440));
	pids.insertLast((441));
	pids.insertLast((442));
	pids.insertLast((443));
	pids.insertLast((444));
	pids.insertLast((445));
	pids.insertLast((446));
	pids.insertLast((447));
	pids.insertLast((448));
	pids.insertLast((449));
	pids.insertLast((450));
	pids.insertLast((451));
	pids.insertLast((452));
	pids.insertLast((453));
	pids.insertLast((454));
	pids.insertLast((457));
	pids.insertLast((458));
	pids.insertLast((459));
	pids.insertLast((460));
	pids.insertLast((461));
	pids.insertLast((462));
	pids.insertLast((463));
	pids.insertLast((464));
	pids.insertLast((465));
	pids.insertLast((466));
	pids.insertLast((468));
	pids.insertLast((470));
	pids.insertLast((471));
	pids.insertLast((472));
	pids.insertLast((474));
	pids.insertLast((475));
	pids.insertLast((476));
	pids.insertLast((477));
	pids.insertLast((478));
	pids.insertLast((479));
	pids.insertLast((483));
	pids.insertLast((484));
	pids.insertLast((485));
	pids.insertLast((487));
	pids.insertLast((488));
	pids.insertLast((490));
	pids.insertLast((491));
	pids.insertLast((492));
	pids.insertLast((493));
	pids.insertLast((494));
	pids.insertLast((495));
	pids.insertLast((499));
	pids.insertLast((503));
	pids.insertLast((504));
	pids.insertLast((505));
	pids.insertLast((506));
	pids.insertLast((507));
	pids.insertLast((508));
	pids.insertLast((509));
	pids.insertLast((516));
	pids.insertLast((519));
	pids.insertLast((523));
	pids.insertLast((532));
	pids.insertLast((533));
	pids.insertLast((534));
	pids.insertLast((535));
	pids.insertLast((536));
	pids.insertLast((537));
	pids.insertLast((538));
	pids.insertLast((539));
	pids.insertLast((540));
	pids.insertLast((541));
	pids.insertLast((542));
	pids.insertLast((543));
	pids.insertLast((544));
	pids.insertLast((549));
	pids.insertLast((550));
	pids.insertLast((551));
	pids.insertLast((552));
	pids.insertLast((553));
	pids.insertLast((555));
	pids.insertLast((554));
	pids.insertLast((556));
	pids.insertLast((557));
	pids.insertLast((560));
	pids.insertLast((561));
	pids.insertLast((562));
	pids.insertLast((563));
	pids.insertLast((564));
	pids.insertLast((565));
	pids.insertLast((566));
	pids.insertLast((572));
	pids.insertLast((573));
	pids.insertLast((574));
	pids.insertLast((575));
	pids.insertLast((576));
	pids.insertLast((577));
	
	TabSetItemPids((4),"001 - Misc",pids);
	
	pids.resize(0);
	pids.insertLast((850));
	pids.insertLast((851));
	pids.insertLast((852));
	pids.insertLast((853));
	pids.insertLast((854));
	pids.insertLast((855));
	pids.insertLast((856));
	pids.insertLast((857));
	pids.insertLast((858));
	pids.insertLast((859));
	pids.insertLast((860));
	pids.insertLast((861));
	pids.insertLast((862));
	pids.insertLast((863));
	pids.insertLast((864));
	pids.insertLast((865));
	pids.insertLast((866));
	pids.insertLast((867));
	pids.insertLast((868));
	pids.insertLast((869));
	pids.insertLast((870));
	pids.insertLast((871));
	pids.insertLast((872));
	TabSetItemPids((4),"002 - E. barriers",pids);
	
	TabSetName((4),"Msc"); 
	
	TabDelete((5));
	
	pids.resize(0);
	pids.insertLast((82));
	pids.insertLast((83));
	pids.insertLast((96));
	pids.insertLast((97));
	pids.insertLast((105));
	pids.insertLast((223));
	pids.insertLast((438));
	pids.insertLast((456));
	TabSetItemPids((5),"001 - keys",pids); 
	
	pids.resize(0);
	pids.insertLast((52));
	pids.insertLast((58));
	pids.insertLast((100));
	pids.insertLast((206));
	pids.insertLast((209));
	pids.insertLast((222));
	pids.insertLast((487));
	pids.insertLast((523));
	pids.insertLast((545));
	pids.insertLast((548));
	pids.insertLast((549));
	pids.insertLast((550));
	pids.insertLast((551));
	pids.insertLast((552));
	pids.insertLast((553));
	pids.insertLast((555));
	pids.insertLast((554));
	pids.insertLast((571));
	pids.insertLast((579));
	pids.insertLast((580));
	pids.insertLast((581));
	pids.insertLast((582));
	pids.insertLast((583));
	pids.insertLast((584));  
	
	TabSetItemPids((5),"002 - Msc2",pids); 
	
	pids.resize(0);
	pids.insertLast((802));
	pids.insertLast((818));
	pids.insertLast((805));
	pids.insertLast((819));
	pids.insertLast((800));
	pids.insertLast((801));
	pids.insertLast((816));
	pids.insertLast((817));
	pids.insertLast((808));
	pids.insertLast((809));
	pids.insertLast((821));
	pids.insertLast((822));
	TabSetItemPids((5),"003 - cars",pids); 
	
	pids.resize(0);
	pids.insertLast(3228);
	TabSetItemPids((5),"004 - etc.",pids);
	TabSetName((5),"Msc2"); 
	
	TabDelete((6)); 
	
	pids.resize(0);
	pids.insertLast((42));
	pids.insertLast((43));
	pids.insertLast((44));
	pids.insertLast((60));
	pids.insertLast((61));
	pids.insertLast((62));
	pids.insertLast((63));
	pids.insertLast((64));
	pids.insertLast((65));
	pids.insertLast((66));
	pids.insertLast((67));
	pids.insertLast((68));
	pids.insertLast((69));
	pids.insertLast((70));
	pids.insertLast((90));
	pids.insertLast((93));
	pids.insertLast((107));
	pids.insertLast((108));
	pids.insertLast((128));
	pids.insertLast((129));
	pids.insertLast((130));
	pids.insertLast((131));
	pids.insertLast((132));
	pids.insertLast((133));
	pids.insertLast((134));
	pids.insertLast((135));
	pids.insertLast((136));
	pids.insertLast((137));
	pids.insertLast((138));
	pids.insertLast((139));
	pids.insertLast((145));
	pids.insertLast((146));
	pids.insertLast((147));
	pids.insertLast((148));
	pids.insertLast((149));
	pids.insertLast((150));
	pids.insertLast((151));
	pids.insertLast((152));
	pids.insertLast((153));
	pids.insertLast((154));
	pids.insertLast((155));
	pids.insertLast((156));
	pids.insertLast((157));
	pids.insertLast((158));
	pids.insertLast((165));
	pids.insertLast((166));
	pids.insertLast((167));
	pids.insertLast((168));
	pids.insertLast((169));
	pids.insertLast((170));
	pids.insertLast((171));
	pids.insertLast((172));
	pids.insertLast((173));
	pids.insertLast((174));
	pids.insertLast((175));
	pids.insertLast((176));
	pids.insertLast((177));
	pids.insertLast((178));
	pids.insertLast((179));
	pids.insertLast((180));
	pids.insertLast((181));
	pids.insertLast((182));
	pids.insertLast((183));
	pids.insertLast((184));
	pids.insertLast((185));
	pids.insertLast((186));
	pids.insertLast((187));
	pids.insertLast((188));
	pids.insertLast((189));
	pids.insertLast((197));
	pids.insertLast((198));
	pids.insertLast((199));
	pids.insertLast((200));
	pids.insertLast((201));
	pids.insertLast((202));
	pids.insertLast((203));
	pids.insertLast((204));
	pids.insertLast((211));
	pids.insertLast((213));
	pids.insertLast((214));
	pids.insertLast((243));
	pids.insertLast((244));
	pids.insertLast((245));
	pids.insertLast((246));
	pids.insertLast((247));
	pids.insertLast((248));
	pids.insertLast((249));
	pids.insertLast((250));
	pids.insertLast((330));
	pids.insertLast((344));
	pids.insertLast((345));
	pids.insertLast((346));
	pids.insertLast((347));
	pids.insertLast((367));
	pids.insertLast((368));
	pids.insertLast((369));
	pids.insertLast((370));
	pids.insertLast((374));
	pids.insertLast((375));
	pids.insertLast((376));
	pids.insertLast((425));
	pids.insertLast((434));
	pids.insertLast((435));
	pids.insertLast((455));
	pids.insertLast((467));
	pids.insertLast((501));
	pids.insertLast((502));
	pids.insertLast((510));
	pids.insertLast((511));
	pids.insertLast((512));
	pids.insertLast((513));
	pids.insertLast((514));
	pids.insertLast((515));
	pids.insertLast((521));
	pids.insertLast((526));
	pids.insertLast((527));
	pids.insertLast((528));
	pids.insertLast((529));
	TabSetItemPids((6),"001 - Containers",pids); 
	
	pids.resize(0);
	pids.insertLast(2002);
	pids.insertLast(2008);
	pids.insertLast(2018);
	pids.insertLast(2019);
	pids.insertLast(2022);
	pids.insertLast(2023);
	pids.insertLast(2077);
	pids.insertLast(2087);
	pids.insertLast(2088);
	pids.insertLast(2089);
	pids.insertLast(2142);
	pids.insertLast(2143);
	pids.insertLast(2144);
	pids.insertLast(2151);
	pids.insertLast(2153);
	pids.insertLast(2154);
	pids.insertLast(2173);
	pids.insertLast(2195);
	pids.insertLast(2196);
	pids.insertLast(2258);
	pids.insertLast(2259);
	pids.insertLast(2260);
	pids.insertLast(2261);
	pids.insertLast(2332);
	pids.insertLast(2333);
	pids.insertLast(2346);
	pids.insertLast(2361);
	pids.insertLast(2362);
	pids.insertLast(2406);
	pids.insertLast(2421);
	pids.insertLast(2437);
	pids.insertLast(2438);
	pids.insertLast(2448);
	pids.insertLast(2470);
	pids.insertLast(2481);
	pids.insertLast(2482);
	pids.insertLast(2486);
	pids.insertLast(2581);
	pids.insertLast(2645);
	pids.insertLast(2825);
	pids.insertLast(2826);
	pids.insertLast(2848);
	pids.insertLast(2849);
	pids.insertLast(2850);
	pids.insertLast(2934);
	for(uint i=2954;i<=2962;i++)
	pids.insertLast(i);
	pids.insertLast(2978);
	pids.insertLast(2981);
	pids.insertLast(2982);
	pids.insertLast(2983);
	pids.insertLast(2984);
	pids.insertLast(2995);
	pids.insertLast(3159);
	pids.insertLast(3160);
	pids.insertLast(3169);
	pids.insertLast(3170);
	pids.insertLast(3337);
	pids.insertLast(3338);
	pids.insertLast(3358);
	for(uint i=3387;i<=3392;i++)
	pids.insertLast(i);
	pids.insertLast(3417);
	pids.insertLast(3418);
	pids.insertLast(3434);
	pids.insertLast(3435);
	pids.insertLast(3449);
	pids.insertLast(3466);
	pids.insertLast(3467);
	pids.insertLast(3479);
	pids.insertLast(3480);
	pids.insertLast(3491);
	pids.insertLast(3492);
	for(uint i=3531;i<=3536;i++)
	pids.insertLast(i);
	for(uint i=3573;i<=3576;i++)
	pids.insertLast(i);
	pids.insertLast(3709);
	pids.insertLast(3710);
	pids.insertLast(3745);
	pids.insertLast(3748);
	pids.insertLast(3818);
	pids.insertLast(3819);
	for(uint i=3900;i<=3904;i++)
	pids.insertLast(i);
	for(uint i=4757;i<=4769;i++)
	pids.insertLast(i);
	TabSetItemPids((6),"002 - Doors",pids);
	
	TabSetName((6),"C/D"); 
	
	TabDelete((7)); 
	
	pids.resize(0);
	pids.insertLast(2049);
	pids.insertLast(2068);
	pids.insertLast(2139);
	pids.insertLast(2140);
	pids.insertLast(2197);
	for(uint i=2348;i<=2356;i++)
	pids.insertLast(i);
	pids.insertLast(2583);
	pids.insertLast(2584);
	pids.insertLast(2977);
	pids.insertLast(3293);
	pids.insertLast(3297);
	pids.insertLast(3298);
	pids.insertLast(3645);
	pids.insertLast(3647);
	pids.insertLast(3648);
	pids.insertLast(3655);
	pids.insertLast(3660);
	pids.insertLast(3685);
	pids.insertLast(3835);
	pids.insertLast(3853);
	TabSetItemPids((7),"001 - ladders",pids); 
	
	pids.resize(0);
	for(uint i=4016;i<=4023;i++)
	pids.insertLast(i);
	for(uint i=4031;i<=4046;i++)
	pids.insertLast(i);
	TabSetItemPids((7),"002 - exit grids",pids);
	TabSetName((7),"Grd"); 
	
	TabDelete((8));
	
	pids.resize(0);
	pids.insertLast(2001);
	for(uint i=2003;i<=2007;i++)
	pids.insertLast(i);
	TabSetItemPids((8),"000 - City Jink 1",pids);
	
	pids.resize(0);
	for(uint i=2009;i<=2017;i++)
	pids.insertLast(i);
	pids.insertLast(2020);
	pids.insertLast(2021);
	for(uint i=2024;i<=2048;i++)
	pids.insertLast(i);
	for(uint i=2050;i<=2062;i++)
	pids.insertLast(i);
	TabSetItemPids((8),"001 - Vault 13",pids);
	
	pids.resize(0);
	for(uint i=2063;i<=2066;i++)
	pids.insertLast(i);
	for(uint i=2069;i<=2076;i++)
	pids.insertLast(i);
	for(uint i=2078;i<=2086;i++)
	pids.insertLast(i);
	for(uint i=2090;i<=2093;i++)
	pids.insertLast(i);
	TabSetItemPids((8),"002 - Stones and misc",pids);
	
	pids.resize(0);
	for(uint i=2094;i<=2127;i++)
	pids.insertLast(i);
	TabSetItemPids((8),"003 - Junktown",pids);
	
	pids.resize(0);
	for(uint i=2129;i<=2138;i++)
	pids.insertLast(i);
	TabSetItemPids((8),"004 - Necro sewer",pids);
	
	pids.resize(0);
	for(uint i=2145;i<=2150;i++)
	pids.insertLast(i);
	for(uint i=2155;i<=2172;i++)
	pids.insertLast(i);
	for(uint i=2174;i<=2193;i++)
	pids.insertLast(i);
	TabSetItemPids((8),"005 - Bro&Vault",pids);
	
	pids.resize(0);
	pids.insertLast(2194);
	for(uint i=2198;i<=2257;i++)
	pids.insertLast(i);
	for(uint i=2262;i<=2331;i++)
	pids.insertLast(i);
	for(uint i=2334;i<=2343;i++)
	pids.insertLast(i);
	TabSetItemPids((8),"006 - Necro city",pids);
	
	pids.resize(0);
	pids.insertLast(2345);
	pids.insertLast(2347);
	for(uint i=2357;i<=2360;i++)
	pids.insertLast(i);
	TabSetItemPids((8),"007 - Cathedral",pids);
	
	pids.resize(0);
	for(uint i=2363;i<=2383;i++)
	pids.insertLast(i);
	TabSetItemPids((8),"008 - S. Sands",pids);
	
	pids.resize(0);
	for(uint i=2384;i<=2405;i++)
	pids.insertLast(i);
	for(uint i=2407;i<=2420;i++)
	pids.insertLast(i);
	for(uint i=2422;i<=2423;i++)
	pids.insertLast(i);
	TabSetItemPids((8),"009 - Tents&Indstr",pids);
	
	pids.resize(0);
	for(uint i=2425;i<=2436;i++)
	pids.insertLast(i);
	for(uint i=2439;i<=2447;i++)
	pids.insertLast(i);
	pids.insertLast(2449);
	TabSetItemPids((8),"010 - M.base/Cath",pids);
	
	pids.resize(0);
	for(uint i=2450;i<=2466;i++)
	pids.insertLast(i);
	TabSetItemPids((8),"011 - Gamble",pids);
	
	pids.resize(0);
	for(uint i=2467;i<=2469;i++)
	pids.insertLast(i);
	TabSetItemPids((8),"012 - Old elev.",pids);
	
	pids.resize(0);
	for(uint i=2471;i<=2480;i++)
	pids.insertLast(i);
	TabSetItemPids((8),"013 - Warehouse",pids);
	
	pids.resize(0);
	for(uint i=2483;i<=2485;i++)
	pids.insertLast(i);
	for(uint i=2487;i<=2508;i++)
	pids.insertLast(i);
	TabSetItemPids((8),"014 - Pray@Follow",pids);
	
	pids.resize(0);
	for(uint i=2509;i<=2515;i++)
	pids.insertLast(i);
	TabSetItemPids((8),"015 - Crrap",pids);
	
	pids.resize(0);
	for(uint i=2516;i<=2526;i++)
	pids.insertLast(i);
	TabSetItemPids((8),"016 - Bro Elders",pids);
	
	pids.resize(0);
	for(uint i=2527;i<=2532;i++)
	pids.insertLast(i);
	TabSetItemPids((8),"017 - Carts",pids);
	
	pids.resize(0);
	for(uint i=2533;i<=2543;i++)
	pids.insertLast(i);
	TabSetItemPids((8),"018 - Bro sport",pids);
	
	pids.resize(0);
	for(uint i=2544;i<=2580;i++)
	pids.insertLast(i);
	pids.insertLast(2582);
	for(uint i=2585;i<=2590;i++)
	pids.insertLast(i);
	TabSetItemPids((8),"019 - Ind,Bro,Cath",pids);
	
	pids.resize(0);
	for(uint i=2591;i<=2644;i++)
	pids.insertLast(i);
	for(uint i=2646;i<=2685;i++)
	pids.insertLast(i);
	TabSetItemPids((8),"020 - In&Out",pids);
	
	pids.resize(0);
	for(uint i=2686;i<=2696;i++)
	pids.insertLast(i);
	TabSetItemPids((8),"021 - Cliffs",pids);
	
	pids.resize(0);
	for(uint i=2697;i<=2824;i++)
	pids.insertLast(i);
	TabSetItemPids((8),"022 - Master",pids);
	
	pids.resize(0);
	for(uint i=2827;i<=2847;i++)
	pids.insertLast(i);
	TabSetItemPids((8),"023 - Robo",pids);
	
	pids.resize(0);
	for(uint i=2851;i<=2900;i++)
	pids.insertLast(i);
	TabSetItemPids((8),"024 - Signs",pids);
	
	pids.resize(0);
	for(uint i=2901;i<=2908;i++)
	pids.insertLast(i);
	TabSetItemPids((8),"025 - Robo2",pids);
	
	pids.resize(0);
	for(uint i=2909;i<=2933;i++)
	pids.insertLast(i);
	for(uint i=2935;i<=2953;i++)
	pids.insertLast(i);
	TabSetItemPids((8),"026 - Arroyo",pids);
	
	pids.resize(0);
	for(uint i=2963;i<=2975;i++)
	pids.insertLast(i);
	TabSetItemPids((8),"027 - Klamath",pids);
	
	pids.resize(0);
	for(uint i=2979;i<=2980;i++)
	pids.insertLast(i);
	for(uint i=2985;i<=2994;i++)
	pids.insertLast(i);
	for(uint i=2996;i<=3018;i++)
	pids.insertLast(i);
	TabSetItemPids((8),"028 - Gecko&Ind",pids);
	
	pids.resize(0);
	for(uint i=3019;i<=3141;i++)
	pids.insertLast(i);
	pids.insertLast(3448);
	TabSetItemPids((8),"029 - Reno",pids);
	
	pids.resize(0);
	for(uint i=3142;i<=3158;i++)
	pids.insertLast(i);
	for(uint i=3161;i<=3168;i++)
	pids.insertLast(i);
	for(uint i=3171;i<=3191;i++)
	pids.insertLast(i);
	TabSetItemPids((8),"030 - Indstr",pids);
	
	pids.resize(0);
	for(uint i=3192;i<=3215;i++)
	pids.insertLast(i);
	TabSetItemPids((8),"031 - Cav&Wall",pids);
	
	pids.resize(0);
	for(uint i=3216;i<=3227;i++)
	pids.insertLast(i);
	TabSetItemPids((8),"032 - Bodies",pids);
	
	pids.resize(0);
	for(uint i=3230;i<=3236;i++)
	pids.insertLast(i);
	TabSetItemPids((8),"033 - Sierra",pids);
	
	pids.resize(0);
	for(uint i=3237;i<=3253;i++)
	pids.insertLast(i);
	for(uint i=3294;i<=3296;i++)
	pids.insertLast(i);
	TabSetItemPids((8),"034 - Grvs&Grss",pids);
	
	pids.resize(0);
	for(uint i=3254;i<=3273;i++)
	pids.insertLast(i);
	TabSetItemPids((8),"035 - NCR",pids);
	
	pids.resize(0);
	for(uint i=3274;i<=3292;i++)
	pids.insertLast(i);
	for(uint i=3305;i<=3320;i++)
	pids.insertLast(i);
	TabSetItemPids((8),"036 - Beams",pids);
	
	pids.resize(0);
	for(uint i=3299;i<=3304;i++)
	pids.insertLast(i);
	for(uint i=3321;i<=3329;i++)
	pids.insertLast(i);
	TabSetItemPids((8),"037 - Gore",pids);
	
	pids.resize(0);
	for(uint i=3330;i<=3336;i++)
	pids.insertLast(i);
	for(uint i=3338;i<=3357;i++)
	pids.insertLast(i);
	for(uint i=3359;i<=3379;i++)
	pids.insertLast(i);
	for(uint i=3468;i<=3472;i++)
	pids.insertLast(i);
	for(uint i=3706;i<=3708;i++)
	pids.insertLast(i);
	TabSetItemPids((8),"038 - Bulk",pids);
	
	pids.resize(0);
	for(uint i=3380;i<=3386;i++)
	pids.insertLast(i);
	for(uint i=3436;i<=3447;i++)
	pids.insertLast(i);
	TabSetItemPids((8),"039 - VCity",pids);
	
	pids.resize(0);
	for(uint i=3393;i<=3416;i++)
	pids.insertLast(i);
	for(uint i=3419;i<=3432;i++)
	pids.insertLast(i);
	TabSetItemPids((8),"040 - Signs",pids);
	
	pids.resize(0);
	for(uint i=3473;i<=3478;i++)
	pids.insertLast(i);
	for(uint i=3481;i<=3490;i++)
	pids.insertLast(i);
	TabSetItemPids((8),"041 - Reno Bulk",pids);
	
	pids.resize(0);
	for(uint i=3493;i<=3530;i++)
	pids.insertLast(i);
	pids.insertLast(3537);
	for(uint i=3636;i<=3644;i++)
	pids.insertLast(i);
	for(uint i=3649;i<=3651;i++)
	pids.insertLast(i);
	for(uint i=3746;i<=3747;i++)
	pids.insertLast(i);
	TabSetItemPids((8),"042 - Enclave",pids);
	
	pids.resize(0);
	for(uint i=3450;i<=3465;i++)
	pids.insertLast(i);
	for(uint i=3538;i<=3572;i++)
	pids.insertLast(i);
	for(uint i=3577;i<=3599;i++)
	pids.insertLast(i);
	for(uint i=3609;i<=3619;i++)
	pids.insertLast(i);
	TabSetItemPids((8),"043 - Frisco",pids);
	
	pids.resize(0);
	for(uint i=3600;i<=3608;i++)
	pids.insertLast(i);
	TabSetItemPids((8),"044 - Temple&Ant",pids);
	
	pids.resize(0);
	for(uint i=3620;i<=3635;i++)
	pids.insertLast(i);
	for(uint i=3652;i<=3654;i++)
	pids.insertLast(i);
	pids.insertLast(3656);
	for(uint i=3684;i<=3687;i++)
	pids.insertLast(i);
	TabSetItemPids((8),"045 - Mining",pids);
	
	pids.resize(0);
	for(uint i=3657;i<=3659;i++)
	pids.insertLast(i);
	for(uint i=3661;i<=3683;i++)
	pids.insertLast(i);
	TabSetItemPids((8),"046 - NCR",pids);
	
	pids.resize(0);
	for(uint i=3688;i<=3705;i++)
	pids.insertLast(i);
	TabSetItemPids((8),"047 - Vertywhat?",pids);
	
	pids.resize(0);
	for(uint i=3711;i<=3720;i++)
	pids.insertLast(i);
	TabSetItemPids((8),"048 - Tanker",pids);
	
	pids.resize(0);
	for(uint i=3721;i<=3736;i++)
	pids.insertLast(i);
	for(uint i=3737;i<=3744;i++)
	pids.insertLast(i);
	for(uint i=3749;i<=3755;i++)
	pids.insertLast(i);
	TabSetItemPids((8),"049 - Greece",pids);
	
	pids.resize(0);
	for(uint i=3756;i<=3792;i++)
	pids.insertLast(i);
	TabSetItemPids((8),"050 - Moar Bulk ",pids);
	
	pids.resize(0);
	for(uint i=3793;i<=3817;i++)
	pids.insertLast(i);
	for(uint i=3820;i<=3834;i++)
	pids.insertLast(i);
	for(uint i=3836;i<=3852;i++)
	pids.insertLast(i);
	TabSetItemPids((8),"051 - Colored stuff",pids);
	
	pids.resize(0);
	for(uint i=4001;i<=4010;i++)
	pids.insertLast(i);
	for(uint i=4013;i<=4015;i++)
	pids.insertLast(i);
	for(uint i=4024;i<=4030;i++)
	pids.insertLast(i);
	for(uint i=4047;i<=4060;i++)
	pids.insertLast(i);
	TabSetItemPids((8),"052 - Effects",pids);
	
	pids.resize(0);
	for(uint i=4277;i<=4282;i++)
	pids.insertLast(i);
	TabSetItemPids((8),"053 - Craft",pids);
	
	pids.resize(0);
	for(uint i=4500;i<=4590;i++)
	pids.insertLast(i);
	TabSetItemPids((8),"054 - Tactics",pids);
	
	pids.resize(0);
	for(uint i=4594;i<=4611;i++)
	pids.insertLast(i);
	TabSetItemPids((8),"055 - Fallout:BGE",pids);
	
	pids.resize(0);
	for(uint i=4612;i<=4657;i++)
	pids.insertLast(i);
	TabSetItemPids((8),"056 - Hell",pids);
	
	pids.resize(0);
	for(uint i=4667;i<=4756;i++)
	pids.insertLast(i);
	for(uint i=4770;i<=4999;i++)
	pids.insertLast(i);
	TabSetItemPids((8),"FOnline latest",pids);
	
	TabSetName((8),"Gen"); 
	
	TabDelete((9));
	pids.resize(0);
	for(uint i=5000;i<=9999;i++)
	pids.insertLast(i);
	TabSetItemPids((9),"001 - Vault 13",pids);
	TabSetName((9),"Wall"); 
	
	if(__GeometryType==(1))
	{
		TabSetName((0),"TacT");
		string@[]ftTiles={"tiles/"};
		bool[]includeSubdirs={true};
		TabSetTileDirs((0),ftTiles,includeSubdirs);
	} 
	
	if(__GeometryType==(2))
	{
		TabSetName((0),"ArcT");
		string@[]arcanumTiles={"art/tile/"};
		bool[]includeSubdirs={true};
		TabSetTileDirs((0),arcanumTiles,includeSubdirs);
	}
}  

uint loop()
{
	return 60000;
}  

bool console_message(string&message)
{     
	
	return false;
}              

void render_iface(uint layer)
{}  

void render_map()
{}   

bool mouse_down(int click)
{
	return false;
}

bool mouse_up(int click)
{
	return false;
}

void mouse_move(int x,int y)
{}   

bool key_down(uint8 key)
{
	return false;
}

bool key_up(uint8 key)
{
	return false;
}  

void input_lost()
{}           

MapperMap@GetActiveMap()
{
	MapperMap@[]maps;
	int cur=GetLoadedMaps(maps);
	if(cur==-1)return null;
	return maps[cur];
} 

string ConvertMaps(string str)
{
	string@[]mapNames;
	GetMapFileNames(null,mapNames);
	
	uint success=0;
	uint fail=0;
	for(uint i=0;i<mapNames.length();i++)
	{
		MapperMap@map=LoadMap(mapNames[i],(34));
		if(not(map is null))
		{
			if(SaveMap(map,mapNames[i],(34)))
			{
				success++;
			}
			else
			{
				Message("Fail to save "+mapNames[i]);
				fail++;
			}
			
			UnloadMap(map);
		}
		else
		{
			Message("Fail to load "+mapNames[i]);
			fail++;
		}
	}
	
	return"Done, maps converted "+(success+fail)+", success "+success+", fail "+fail+".";
} 

string ClearTiles(string str)
{
	MapperMap@map=GetActiveMap();
	if(map is null)return"Map not loaded.";
	
	uint deleted=0;
	for(uint hx=0;hx<map.Width;hx++)
	{
		for(uint hy=0;hy<map.Height;hy++)
		{
			if(hx%2==0&&hy%2==0)
			{
				for(;map.GetTilesCount(hx,hy,false)>1;deleted++)
				map.DeleteTile(hx,hy,false,0);
				for(;map.GetTilesCount(hx,hy,true)>1;deleted++)
				map.DeleteTile(hx,hy,true,0);
			}
			else
			{
				for(;map.GetTilesCount(hx,hy,false)>0;deleted++)
				map.DeleteTile(hx,hy,false,0);
				for(;map.GetTilesCount(hx,hy,true)>0;deleted++)
				map.DeleteTile(hx,hy,true,0);
			}
		}
	}
	
	return"Done. Deleted "+deleted+" tiles.";
} 

string MapTime(string str)
{
	MapperMap@map=GetActiveMap();
	if(map is null)return"Map not loaded.";
	int value=0;
	if(not StrToInt(str,value))return"Wrong value.";
	
	map.Time=value;
	return"Done. Time setted to "+map.Time+".";
}

string MapNoLogOut(string str)
{
	MapperMap@map=GetActiveMap();
	if(map is null)return"Map not loaded.";
	int value=0;
	if(not StrToInt(str,value))return"Wrong value.";
	
	map.NoLogOut=value!=0?true:false;
	return"Done. NoLogOut setted to "+map.NoLogOut+".";
}

string MapScriptModule(string str)
{
	MapperMap@map=GetActiveMap();
	if(map is null)return"Map not loaded.";
	
	map.ScriptModule=str;
	return"Done. ScriptModule setted to "+map.ScriptModule+".";
}

string MapScriptFunc(string str)
{
	MapperMap@map=GetActiveMap();
	if(map is null)return"Map not loaded.";
	
	map.ScriptFunc=str;
	return"Done. ScriptFunc setted to "+map.ScriptFunc+".";
}      

string setexitval(string str)
{
	MapperMap@map=GetActiveMap();
	if(map!is null)
	{
		for(uint16 y=0;y<(1000);++y)
		{
			for(uint16 x=0;x<(1000);++x)
			{
				MapperObject@obj=map.GetObject(x,y,(1),(4052),0);
				if(obj!is null)
				{
					obj.Item_Val1=obj.Item_Val0;
					obj.Item_Val0=0;
				}
			}
		}
		return"done.";
	}
	return"fail, map !loaded";
}   

string removegrid(string str){
	for(uint i=4031;i<=4038;++i){
		delbypid(""+i+" ");
	}
	
	return"done.";
}
string delbypid(string str)
{
	string@[]@param=split(str," ");
	int pid=0;
	StrToInt(param[0],pid);
	if(pid==0){return"not valid protoId";}
	MapperMap@map=GetActiveMap();
	if(map!is null)
	{
		for(uint16 y=0;y<(1000);++y)
		{
			for(uint16 x=0;x<(1000);++x)
			{
				MapperObject@obj=map.GetObject(x,y,param[1]=="0"?(1):(2),pid,0);
				if(obj!is null)
				{
					DeleteObject(obj);
				}
			}
		}
		return"done.";
	}
	return"fail, map !loaded";
}     

string convgen(string str)
{
	MapperMap@map=GetActiveMap();
	if(map!is null)
	{
		for(uint16 y=0;y<(1000);++y)
		{
			for(uint16 x=0;x<(1000);++x)
			{
				MapperObject@obj=map.GetObject(x,y,(1),(4052),0);
				if(obj!is null)
				{
					int tempVal=obj.Item_Val1;
					DeleteObject(obj);
					@obj=map.AddObject(x,y,(2),(4053));
					
					if(obj!is null)
					{
						obj.Scenery_Param0=tempVal;
						obj.Scenery_ParamsCount=1;
					}
					else{Message("!valid");} 
					
				}
			}
		}
		return"done.";
	}
	return"fail, map !loaded";
}
string ClearClones(string str)
{
	MapperMap@map=GetActiveMap();
	if(map is null)
	return"Map not loaded.";
	int iConv=-1;StrToInt(str,iConv); 
	
	uint deleted=0;
	for(uint16 hx=0;hx<map.Width;hx++)
	{
		for(uint16 hy=0;hy<map.Height;hy++)
		{
			MapperObject@[]objects;
			uint len;if(iConv>-1)len=map.GetObjects(hx,hy,0,iConv,0,objects);else{
				len=map.GetObjects(hx,hy,0,(2),0,objects);len+=map.GetObjects(hx,hy,0,(1),0,objects);
			}
			for(uint i=0;i<len;i++)
			{
				if(objects[i]is null)continue;
				uint16 pid=objects[i].ProtoId;
				for(uint k=i+1;k<len;k++)
				{
					if((objects[k]!is null)and(objects[k].ProtoId==pid))
					{
						DeleteObject(objects[k]);
						@objects[k]=null;
						deleted++;
					}
				}
			}
		}
	}
	
	return"Done. Deleted "+deleted+" items.";
}
