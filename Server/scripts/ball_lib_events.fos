// Назначение методов-обработчиков событий
/*import void e_ConvertBallToCrit(Item& ball, Critter& crt) from "ball_lib";
   import bool e_ConvertBallToCrit(Item& ball, Critter& crt, Critter& trgCrt) from "ball_lib";
   import bool e_Ignore_Attack() from "ball_lib";
   import void e_BallDeflated (Critter& ball, Critter@ crt) from "ball_lib";
   import bool e_BallIntoInven(Critter& ball, Critter& crt) from "ball_lib";
   import int e_Ball_Check_Path(Critter& ball, NpcPlane& plane) from "ball_lib";*/

/*-----------------------Обработчики для мяча итема-------------------------*/

void _OnItemDrop( Item& ball, Critter& crt )
{
    e_ConvertBallToCrit( ball, crt );
}
/*bool _OnItemAttack(Item& ball, Critter& crt, Critter& trgCrt)
   {
   return e_ConvertBallToCrit(ball, crt, trgCrt);
   }*/
/*--------------------------------------------------------------------------*/

/*---------------------Обработчики для мяча криттера------------------------*/

/*bool _OnCritterAttacked(Critter& ball, Critter& crt)
   {
   return e_Ignore_Attack();
   }*/

void _OnCritterDead( Critter& ball, Critter@ crt )
{
    e_BallDeflated( ball, crt );
}

bool _OnCritterTalk( Critter& ball, Critter& crt, bool attach, uint talk_count )
{
    e_BallIntoInven( ball, crt, false );
    return false; // Диалог не начинается
}

int _OnPlaneEnd( Critter& ball, NpcPlane& plane, int reason, Critter@ someCr, Item@ someItem )
{
    return e_Ball_Check_Path( ball, plane );
}
/*--------------------------------------------------------------------------*/
