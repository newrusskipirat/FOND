// evil minds event
// pm

#include "_defines.fos"
#include "_macros.fos"
#include "cimp.fos"
#include "_animation.fos"

import void ExplodeEx( Map& map, uint16 hexX, uint16 hexY, uint16 effectPid, uint effectRadius, uint damage, uint damageType, uint damageRadius, uint ownerId ) from "explode";
import uint GetAllPlayers( Critter@[]& crs ) from "manager";

#define KILL_TIME    ( REAL_SECOND( 6 ) )

uint messageTEId = 0;

void iniciate( Critter& cr, int, int, int )
{
    /*Item @ item = SpawnContainer();

       if(item is null){cr.Say(SAY_NETMSG, "null item"); return;}

       //Map @ map = m
       //cr.TransitToMap(.Id, 0);

       item.SetEvent(ITEM_EVENT_SKILL, "evilminds@e_ContSkill");
     */
    //


    Item @ item = main();
    if( item is null )
        return;

    // main();

    cr.TransitToMap( item.MapId, item.HexX - 1, item.HexY - 1, cr.Dir );

}

Item@ main()
{
    Item @ item = SpawnContainer();

    if( item is null )
    {
        Log( "null item" );
        return null;
    }

    item.SetEvent( ITEM_EVENT_SKILL, "evilminds@e_ContSkill" );

    messageTEId = CreateTimeEvent( __FullSecond + 1, "e_Message", item.Id, false );

    return@item;
}

void SetParam( Critter& cr )
{
    for( uint8 i = 0; i < 6; i++ )
    {
        cr.StatBase[ i ] = 15;
    }

    cr.StatBase[ ST_ACTION_POINTS ] += 10;
    cr.StatBase[ ST_CURRENT_HP ] = cr.Stat[ ST_MAX_LIFE ];

    for( uint8 i = 200; i < 203; i++ )
    {
        cr.SkillBase[ i ] = 200;
    }

}

void e_Dead( Critter& cr, Critter@ killer )
{
    Item@[] items;
    cr.GetItems( -1, items );
    DeleteItems( items );
}

bool e_ContSkill( Item& item, Critter& cr, int skill )
{
    // if(item.Val1 != -1){
    cr.TimeoutBase[ TO_DEATH ] = __FullSecond + REAL_SECOND( 120 );
    // cr.TimeoutBase[TO_TRANSFER] += REAL_SECOND(120);
    CreateTimeEvent( __FullSecond + REAL_MINUTE( 1 ), "e_ExplodeCont", item.Id, false );
    cr.AddTimeEvent( "cte_KillCritter", REAL_SECOND( 15 ), CTE_EVILMINDS, 0 );
    item.SetEvent( ITEM_EVENT_SKILL, "" );
    cr.SetEvent( CRITTER_EVENT_DEAD, "e_Dead" );

    EraseTimeEvent( messageTEId );

    cr.Say( SAY_NETMSG, "|0xffff0000Каждое убийство +30 секунд. Время тикает..." );
    SetParam( cr );
    // main();

    return false;
    //	item.Val1 = 1;
    // }
}

uint e_Message( uint[] @ values )
{
    Item @ cont = GetItem( values[ 0 ] );

    if( !(cont is null) )
    {

        Map @ map = GetMap( cont.MapId );

        if( !(map is null) )
        {

            Critter@[] crs;
            GetAllPlayers( crs );

            for( uint8 i = 0, j = crs.length(); i < j; ++i )
            {
                Critter@ cr = crs[ i ];

                int      x = 0,
                         y = 0;




                x = CLAMP( x, -1, 1 );
                y = CLAMP( y, -1, 1 );

                string msg = "|0xffff0000Вы слышите голос : Иди ко мне...";


                if( cr.GetMap().Id == map.Id )
                {
                    x = cont.HexX - cr.HexX;
                    y = cont.HexY - cr.HexY;

                    switch( x )
                    {

                    case 0:
                        msg += "Я близко! ";
                        break;
                    case 1:
                        msg += "Западней...";
                        break;
                    default:
                        msg += "Восточней...";
                        break;
                    }

                    switch( y )
                    {

                    case 0:
                        msg += "Совсем рядом! ";
                        break;
                    case 1:
                        msg += "На юг...";
                        break;
                    default:
                        msg += "На север...";
                        break;
                    }
                }
                else
                {
                    msg += "Ищи меня в другом месте...";
                    // x = map.GetLocation().WorldX * 0.1 - cr.WorldX * 0.1;
                    // y = map.GetLocation().WorldY * 0.1 - cr.WorldY * 0.1;
                }

                /*
                   if(x < 0){
                        msg += "Западней...";
                   }else
                   if(x > 0){
                        msg += "Восточней...";
                   }/*else{
                        msg += "Я близко! ";
                   }*

                   if(y <= -1){
                        msg += "На юг...";
                   }else
                   if(y >= 1){
                        msg += "На север...";
                   }/*else{
                        msg += "Рядом! ";
                   }*/

                cr.Say( SAY_NETMSG, msg );
            }
        }
    }

    return /*__FullSecond+*/ 10;   // KILL_TIME;
}

uint e_ExplodeCont( uint[] @ values )
{

    Item @ item = GetItem( values[ 0 ] );

    if( !(item is null) )
    {

        uint mapId = item.MapId,
             hexX = item.HexX,
             hexY = item.HexY;

        DeleteItem( item );

        ExplodeEx( GetMap( mapId ), hexX, hexY, PID_EXPLODE_ROCKET, 15, 1000, DAMAGE_PLASMA, 15, 0 );
        // Explode(GetMap(item.MapId), item.HexX, item.HexY, null, PID_ACTIVE_PLASTIC_EXPLOSIVE, 0, 1000, 10);

        main();
    }

    return 0;
}

uint cte_KillCritter( Critter& cr, int identifier, uint& rate )
{

    if( cr.Timeout[ TO_DEATH ] > 0 )
        return KILL_TIME;
    cr.ToDead( Random( ANIM2_DEAD_BLOODY_SINGLE, ANIM2_DEAD_BURN_RUN ), null );
    return 0;
}

Item@ SpawnContainer()
{
    Map@ map = null;
    CLO @clo = null;

    @map = GetMap( Random( 20, 24 ) ); // Это короче жопа.
    if( @map !is null )
        @clo = CLO( GROUP_EVILMINDS, -1, true );
    if( @clo !is null )
        clo.Add( map );
	else return null;

    return @clo.Object;

}
