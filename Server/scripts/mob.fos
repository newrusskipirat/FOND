// Author: heX, cvet

#include "_macros.fos"
#include "_npc_pids.fos"

import bool AddAttackPlane( Critter& npc, uint priority, Critter& target ) from "npc_planes";
import bool AddWalkPlane( Critter& npc, uint priority, uint16 hexX, uint16 hexY, uint8 dir, bool run, uint cut ) from "npc_planes";
import uint EraseAttackPlane( Critter& npc, Critter& target ) from "npc_planes";
import bool IsKindFriend( Critter& cr, Critter& check ) from "world";

#define DISTANCE_GO_HOME 5

const uint16[] Pids_BestialMobs =
{
	NPC_PID_RegularRat,
	NPC_PID_Mantis,
	NPC_PID_Ant,
	NPC_PID_RegularPigRat,
	NPC_PID_Molerat,
	NPC_PID_MutatedMolerat,
	NPC_PID_SmallSilverGecko,
	NPC_PID_GoldenGecko,
	NPC_PID_WildDog,
	NPC_PID_SmallRadscorpion,
	NPC_PID_LargeRadscorpion,
	NPC_PID_Brahmin,
	NPC_PID_Alien,
	NPC_PID_SmDeathclaw,
	NPC_PID_Deathclaw,
	NPC_PID_ToughDeathclaw,
	NPC_PID_FireGecko,
	NPC_PID_Centaur,
	NPC_PID_Floater,
	NPC_PID_MirelurkWeak
};

interface Controller
{
	bool Attack( Critter& target );
}

class MobController : Controller
{
	MobController( Critter& npc )
	{
		@Npc = npc;
	}

	bool Attack( Critter& target ) override
	{
		return AddAttackPlane( Npc, 0, target );
	}
	
	Critter@ Npc;
}

class GroupController : Controller
{
	GroupController( Critter& npc )
	{
		ListNpc.resize( 0 );
		Map@ map = npc.GetMap();
		if( @map !is null )
		{
			Critter@[] critters;
			int teamId = npc.Stat[ ST_TEAM_ID ];
			for( uint i = 0, iEnd = map.GetCritters( 0, FIND_LIFE_AND_KO | FIND_ONLY_NPC, critters); i < iEnd; i++ )
				if( critters[i].Stat[ ST_TEAM_ID ] == teamId )
					ListNpc.insertLast( critters[i] );
			TeamId = teamId;
		}
	}

	bool Attack( Critter& target ) override
	{
		for( uint i = 0, iEnd = ListNpc.length(); i < iEnd; i++ )
			AddAttackPlane( ListNpc[i], 0, target );
		return true;
	}
	
	int TeamId;
	Critter@[] ListNpc;
}

GroupController@ GetTeamController( Critter& npc )
{
	return @GroupController( npc );
}

MobController@ GetMobController( Critter& npc )
{
	return @MobController( npc );
}

Controller@ GetController( Critter& npc )
{
	if( 0 == npc.Stat[ST_TEAM_ID] )
		return @GetMobController(npc);
	return @GetTeamController( npc );
}

void RandomStep( Critter& npc )
{
	int rand = Random( 0, 9 );
    if( rand == 0 || ( npc.Mode[ MODE_NO_HOME ] == 1 && rand < 6 ) ) 
	{
		npc.MoveRandom();
		npc.ModeBase[ MODE_NO_HOME ] = 1;
	}
}

bool TryGoHome( Critter& npc )
{
    if( npc.IsLife() )
    {
        uint   mapId = 0;
        uint16 homeX = 0;
        uint16 homeY = 0;
        uint8  dir = 0;
        npc.GetHomePos( mapId, homeX, homeY, dir );
        if( npc.GetMapId() == mapId && GetDistantion( homeX, homeY, npc.HexX, npc.HexY ) > DISTANCE_GO_HOME )
        {
            npc.DropPlanes();
			return AddWalkPlane( npc, 0, homeX, homeY, dir, false, 0 );
        }
    }
	return false;
}

void MobIdle( Critter& mob )
{
	if( mob.IsCanWalk( ) )
	{
		RandomStep( mob );
		if( mob.Mode[ MODE_NO_HOME ] == 1 && TryGoHome( mob ) )
			mob.ModeBase[ MODE_NO_HOME ] = 0;
	}
}

bool MobAttacked( Critter& mob, Critter& attacker )
{	
	Controller@ controller = @GetController( mob );
    return controller.Attack( attacker );
}

void MobShowCritter( Critter& mob, Critter& critter )
{
	if( ( 0 != mob.Stat[ST_TEAM_ID] && mob.Stat[ST_TEAM_ID] == critter.Stat[ST_TEAM_ID] ) || IsKindFriend( mob, critter ) )
		return;

	Controller@ controller = @GetController( mob );
    controller.Attack( critter );
}

void MobHideCritter( Critter& npc, Critter& player )
{

}

void GM_MobInit( Critter& npc ) // Export
{
    npc.SetScript( "_MobInit" );
}

void GM_MobBossInit( Critter& npc ) // Export
{
    npc.SetScript( "_BossMobInit" );
}

void GM_MobMinionInit( Critter& npc ) // Export
{
	npc.PerkBase[ PE_SILENT_RUNNING ] = 1;
    npc.SetScript( "_MinionMobInit" );
}

void _MobInit( Critter& npc, bool firstTime )
{
	npc.SetEvent( CRITTER_EVENT_IDLE, "MobIdle" );
	npc.SetEvent( CRITTER_EVENT_ATTACKED,"MobAttacked" );
	
	npc.SetEvent(CRITTER_EVENT_SHOW_CRITTER, "MobShowCritter");
	npc.SetEvent(CRITTER_EVENT_HIDE_CRITTER, "MobHideCritter");
}

void _HumanoidInit( Critter& npc, bool firstTime )
{
	_MobInit( npc, firstTime ); // Копируем базовое поведение
}

void _BossMobInit(Critter& npc, bool firstTime)
{
	_MobInit( npc, firstTime ); // Копируем базовое поведение
	
}

void _MinionMobInit(Critter& npc, bool firstTime)
{
	_MobInit( npc, firstTime ); // Копируем базовое поведение	
}

void _MobsMapInit( Map& map, bool firstTime )
{
    ActivateMobScript( map );
}

void ActivateMobScript( Map& map ) // Export
{
    Critter@[] critters;
    for( uint i = 0, j = Pids_BestialMobs.length(); i < j; i++ )
        map.GetCritters( Pids_BestialMobs[ i ], FIND_ALL | FIND_ONLY_NPC, critters );

    for( uint i = 0, j = critters.length(); i < j; i++ )
    {
        if( critters[ i ].GetScriptId() == 0 && ( critters[ i ].Stat[ ST_TEAM_ID ] == 0 || ( critters[ i ].Stat[ ST_TEAM_ID ] >= 24 && critters[ i ].Stat[ ST_TEAM_ID ] <= 33 ) ) )
            critters[ i ].SetScript( "_MobInit" );
    }
}

void _InitSkinningKnife( Item& item, bool firstTime )
{
    item.SetEvent( ITEM_EVENT_USE, "e_InitSkinningUse" );
}

uint16[] DefaultPidsOrder = {   NPC_PID_RegularRat, NPC_PID_Mantis, NPC_PID_Ant, NPC_PID_SporePlant, 
								NPC_PID_Brahmin, NPC_PID_WildDog, NPC_PID_WildDog /*wolfes*/, 
								NPC_PID_RegularPigRat, NPC_PID_Molerat, NPC_PID_SmallSilverGecko,
								NPC_PID_GoldenGecko, NPC_PID_FireGecko, NPC_PID_SmallRadscorpion,
								NPC_PID_LargeRadscorpion, NPC_PID_SmallRadscorpion /*black scorp*/,
								NPC_PID_Deathclaw, NPC_PID_MirelurkWeak, NPC_PID_Alien, NPC_PID_Alien /*mother alien*/,
								NPC_PID_Floater, NPC_PID_Centaur, NPC_PID_BanditMale /*tribal*/, 
								0 /*not implemented!*/, 0 /*not implemented!*/, NPC_PID_BanditMale /*raider*/
							};

uint16 NewPidToDefault(uint16 pid)
{
	if( pid < 1000 ) return pid; //Функция преобразует лишь новые пиды, не трогая старые.
	uint16 	start = 1000, 
			size = 30,
			resultPidNumber = ( pid - start ) / 30;
	if( resultPidNumber >= 0 && resultPidNumber < DefaultPidsOrder.length() )
		//Если в таблице 0 - тогда возвращает тот же пид.
		return ( DefaultPidsOrder[ resultPidNumber ] == 0 ? pid : DefaultPidsOrder[ resultPidNumber ] ); 
	else 
		return pid; //Функция преобразует лишь новые пиды, не трогая старые.
}

bool e_InitSkinningUse( Item& item, Critter& cr, Critter@ onCritter, Item@ onItem, Scenery@ onScenery )
{
	bool skinned = false;
    uint16 Add1 = 0;
	uint16 Add2 = 0;
	uint16 Add3 = 0;
	uint8  Sum1 = 0;
	uint8  Sum2 = 0;
	uint8  Sum3 = 0;
	uint16 PAdd1 = 0;
	uint16 PAdd2 = 0;
	uint16 PAdd3 = 0;
	uint8  PSum1 = 0;
	uint8  PSum2 = 0;
	uint8  PSum3 = 0;
	uint8 Exp1 = 0;
	uint8 Exp2 = 0;
	uint8 Exp3 = 0;
	string Str1 = "Из этого ничего не вышло.";
	string Str2 = "Из этого ничего не вышло.";
	string Str3 = "Из этого ничего не вышло.";
	string StrNoPerk = "Но из-за отсутствия нужных знаний получить шкуру/хитин не удалось. (Необходим перк [Скорняк])";
	int result = ((cr.Skill[SK_OUTDOORSMAN] * ( Random (80,120) ) )/100);

		
    if( onCritter.IsDead() && onCritter.IsNpc() )
    {
		Item @ darts = onCritter.GetItem(PID_DARTS_LOW, -1 );
        if( valid(darts) ) 
		{ 
			MoveItem( darts, darts.GetCount(), cr ); 
			cr.Say( SAY_NETMSG, "Вы достали дротики." ); 
		}

        if( onCritter.Stat[ ST_DESEASE ] != 0 )
        {
            cr.Say( SAY_NETMSG, "Уже освежован." );
            return true;
        }
        
		uint16 npcPid = onCritter.GetProtoId();
		if( npcPid > 1000 ) npcPid = NewPidToDefault( npcPid );
		if( npcPid == 10 ) npcPid = NPC_PID_Brahmin; //Дефолтные брамины.		
		
		

		
        switch( npcPid )
        {
			case NPC_PID_RegularRat:
				Add1=PID_RAT_MEAT; 
				Sum1=1;
				Str1="Вы бездарно разделываете бедную крысу";
				Add2=PID_RAT_MEAT;
				Sum2=1;
				PAdd2=PID_MOUSE_SKIN;
				PSum2=1;
				Str2="Вы разделываете бедную крысу";
				Add3=PID_RAT_MEAT;
				Sum3=1;
				PAdd3=PID_MOUSE_SKIN;
				PSum3=1;
				Str3="Вы умело разделываете бедную крысу";
			break;
			
			case NPC_PID_Mantis:
			case NPC_PID_Ant:
				Add1=PID_MEAT;
				Sum1=0;
				PAdd1=PID_MANTIS_SHELL;
				PSum1=0;
				Str1="Вы не смогли ни сохранить панцирь, ни достать мяса";
				Add2=PID_MEAT;
				Sum2=1;
				PAdd2=PID_MANTIS_SHELL;
				PSum2=0;
				Str2="Вы достали мясо, но при этом сломали панцирь";
				Add3=PID_MEAT;
				Sum3=1;
				PAdd3=PID_MANTIS_SHELL;
				PSum3=1;
				Str3="Вы сняли панцирь и добрались до мяса";	
            break;
			
			case NPC_PID_RegularPigRat:
				Add1=PID_MEAT;
				Sum1=1;
				PAdd1=PID_CRAFT_L_RAGS;
				PSum1=1;
				Str1="В процессе добычи мяса вы исполосали кожу животного";
				Add2=PID_MEAT;
				Sum2=1;
				PAdd2=PID_CRAFT_L_HIDE;
				PSum2=1;
				Str2="Вам удалось сохранить кожу животного и достать мяса";
				Add3=PID_MEAT;
				Sum3=2;
				PAdd3=PID_CRAFT_L_HIDE;
				PSum3=1;
				Str3="Вы вырезали самые мясистые места туши, повредив шкуры";
            break;
			
			case NPC_PID_Molerat:
			case NPC_PID_MutatedMolerat:
				Add1=PID_MEAT;
				Sum1=1;
				PAdd1=PID_MOLERAT_STOMATCH;
				PSum1=0;
				Str1="В процессе добычи мяса вы повредили желудок кротокрыса";
				Add2=PID_MEAT;
				Sum2=1;
				PAdd2=PID_MOLERAT_STOMATCH;
				PSum2=1;
				Str2="Вы вырезали желудок кротокрыса и немного мяса с ним";
				Add3=PID_MEAT;
				Sum3=2;
				PAdd3=PID_MOLERAT_STOMATCH;
				PSum3=1;
				Str3="Вы вырезали желудок кротокрыса и немало мяса";
            break;
			
			case NPC_PID_SmallSilverGecko:
				Add1=PID_GECKO_MEAT;
				Sum1=1;
				PAdd1=PID_CRAFT_L_RAGS;
				PSum1=2;
				Str1="Ради мяса вы порезали тушу гекко";
				Add2=PID_GECKO_MEAT;
				Sum2=2;
				PAdd2=PID_CRAFT_L_HIDE;
				PSum2=1;
				Str2="Вы не особо умело разделываете гекко";
				Add3=PID_GECKO_MEAT;
				Sum3=2;
				PAdd3=PID_GECKO_PELT;
				PSum3=1;
				Str3="Вы аккуратно сняли шкуру с гекко, не забыв про мясо";
            break;
			
			case NPC_PID_GoldenGecko:
				Add1=PID_GECKO_MEAT;
				Sum1=1;
				PAdd1=PID_CRAFT_L_RAGS;
				PSum1=2;
				Str1="Ради мяса вы порезали тушу гекко";
				Add2=PID_GECKO_MEAT;
				Sum2=2;
				PAdd2=PID_CRAFT_L_HIDE;
				PSum2=1;
				Str2="Вы не особо умело разделываете гекко";
				Add3=PID_GECKO_MEAT;
				Sum3=2;
				PAdd3=PID_GOLDEN_GECKO_PELT;
				PSum3=1;
				Str3="Вы аккуратно сняли шкуру с гекко, не забыв про мясо";
            break;
			
			case NPC_PID_WildDog:
				Add1=PID_MEAT;
				Sum1=1;
				PAdd1=PID_CRAFT_L_RAGS;
				PSum1=1;
				Str1="Вы разделываете тушку пса";
				Add2=PID_MEAT;
				Sum2=Random(1,2);
				PAdd2=PID_CRAFT_L_HIDE;
				PSum2=Random(0,1);
				Str2="Вы не особо умело разделали животное";
				Add3=PID_MEAT;
				Sum3=2;
				PAdd3=PID_CRAFT_L_HIDE;
				PSum3=1;
				Str3="Вы удачно разделали пса";
            break;
			
			case NPC_PID_SmallRadscorpion:
				Add1=PID_MEAT;
				Sum1=1;
				PAdd1=PID_MANTIS_SHELL;
				PSum1=0;
				Str1="Вы достали немного мяса из тела скорпиона";
				Add2=PID_MEAT;
				Sum2=1;
				PAdd2=PID_MANTIS_SHELL;
				PSum2=1;
				Str2="Отломав кусок панциря вы добрались до мяса";
				Add3=PID_MEAT;
				Sum3=2;
				PAdd3=PID_SCORPION_TAIL;
				PSum3=1;
				Str3="Вы умело лишили мертвого скорпиона его жала";
            break;
			
			case NPC_PID_LargeRadscorpion:
				Add1=PID_MEAT;
				Sum1=2;
				PAdd1=PID_MANTIS_SHELL;
				PSum1=0;
				Str1="Вы достали немного мяса из тела скорпиона";
				Add2=PID_MEAT;
				Sum2=2;
				PAdd2=PID_MANTIS_SHELL;
				PSum2=1;
				Str2="Отломав кусок панциря вы добрались до мяса";
				Add3=PID_MEAT;
				Sum3=3;
				PAdd3=PID_SCORPION_TAIL;
				PSum3=1;
				Str3="Вы умело лишили мертвого скорпиона его жала";
            break;
			
			case NPC_PID_Brahmin:
				Add1=PID_MEAT;
				Sum1=5;
				PAdd1=PID_CRAFT_L_HIDE;
				PSum1=Random(0,2);
				Str1="Вы исполосали ножом всю шкуру";
				Add2=PID_MEAT;
				Sum2=Random(5,8);
				PAdd2=PID_CRAFT_L_HIDE;
				PSum2=Random(2,4);
				Str2="Вы разделали брамина не так хорошо как хотелось бы";
				Add3=PID_MEAT;
				Sum3=10;
				PAdd3=PID_BRAHMIN_SKIN;
				PSum3=1;
				Str3="Вы лишили тушу брамина мяса и шкуры";
            break;
			
			case NPC_PID_SporePlant:
				_CritAddItem( cr, PID_PLANT_SPIKE, 4 );
				skinned = true;
            break;
			
			case NPC_PID_Alien:
				Add1=PID_RAD_MEAT;
				Sum1=3;
				PAdd1=PID_MUTATED_GLAND;
				PSum1=Random(0,1);
				Str1="Вы небрежно распотрошили мутанта";
				Add2=PID_RAD_MEAT;
				Sum2=Random(3,4);
				PAdd2=PID_MUTATED_GLAND;
				PSum2=1;
				Str2="Вы извлекаете железу твари";
				Add3=PID_RAD_MEAT;
				Sum3=Random(4,5);
				PAdd3=PID_MUTATED_GLAND;
				PSum3=1;
				Str3="Вы извлекаете железу твари";	
			break;
			
			case NPC_PID_SmDeathclaw:
			case NPC_PID_Deathclaw:
			case NPC_PID_ToughDeathclaw:
				Add1=PID_MEAT;
				Sum1=2;
				PAdd1=PID_DEATHCLAW_CLAW_1;
				PSum1=0;
				Str1="Вы распотрошили тушу";
				Add2=PID_MEAT;
				Sum2=3;
				PAdd2=PID_DEATHCLAW_CLAW_1;
				PSum2=Random(0,1);
				Str2="Вы усердно поработали ножом над тушей";
				Add3=PID_MEAT;
				Sum3=4;
				PAdd3=PID_DEATHCLAW_CLAW_1;
				PSum3=1;
				Str3="Вы вырезали все, что посчитали возможным";
            break;
			
			case NPC_PID_FireGecko:
				Add1=PID_GECKO_MEAT;
				Sum1=2;
				PAdd1=PID_CRAFT_L_RAGS;
				PSum1=4;
				Str1="Ради мяса вы порезали тушу гекко";
				Add2=PID_GECKO_MEAT;
				Sum2=3;
				PAdd2=PID_CRAFT_L_HIDE;
				PSum2=2;
				Str2="Вы не особо умело разделываете гекко";
				Add3=PID_GECKO_MEAT;
				Sum3=3;
				PAdd3=PID_FIRE_GECKO_PELT;
				PSum3=1;
				Str3="Вы аккуратно сняли шкуру с гекко, не забыв про мясо";
            break;
			
			case NPC_PID_Centaur:
				Add1=PID_RAD_MEAT;
				Sum1=3;
				PAdd1=PID_MUTATED_GLAND;
				PSum1=Random(0,1);
				Str1="Вы небрежно распотрошили мутанта";
				Add2=PID_RAD_MEAT;
				Sum2=Random(3,4);
				PAdd2=PID_MUTATED_GLAND;
				PSum2=1;
				Str2="Вы извлекаете железу твари";
				Add3=PID_RAD_MEAT;
				Sum3=Random(4,5);
				PAdd3=PID_MUTATED_GLAND;
				PSum3=1;
				Str3="Вы извлекаете железу твари";
            break;
			
			case NPC_PID_Floater:
				Add1=PID_RAD_MEAT;
				Sum1=3;
				PAdd1=PID_MUTATED_GLAND;
				PSum1=Random(0,1);
				Str1="Вы небрежно распотрошили мутанта";
				Add2=PID_RAD_MEAT;
				Sum2=Random(3,4);
				PAdd2=PID_MUTATED_GLAND;
				PSum2=1;
				Str2="Вы извлекаете железу твари";
				Add3=PID_RAD_MEAT;
				Sum3=Random(4,5);
				PAdd3=PID_MUTATED_GLAND;
				PSum3=1;
				Str3="Вы извлекаете железу твари";
            break;
			
			case NPC_PID_MirelurkWeak:
				Add1=PID_MEAT;
				Sum1=1;
				PAdd1=PID_MIRELUK_SHELL;
				PSum1=0;
				Str1="Разбив панцирь, вы вырезали немного мяса";
				Add2=PID_MEAT;
				Sum2=2;
				PAdd2=PID_MANTIS_SHELL;
				PSum2=2;
				Str2="Вы сломали панцирь в попытках его оторвать от тела болотника";
				Add3=PID_MEAT;
				Sum3=2;
				PAdd3=PID_MIRELUK_SHELL;
				PSum3=1;
				Str3="Вы успешно срываете панцирь с болотника";
			break;
			
			case NPC_PID_BanditFemale:		
			case NPC_PID_RaiderFemale:  
			case NPC_PID_ToughFemaleThug:
			if( cr.Karma[ KARMA_BERSERKER ] !=0 ) 
			{
				Add1=PID_MEAT;
				Sum1=1;
				PAdd1=PID_PLAYERS_EAR;
				PSum1=0;
				Str1="Вы отрезали самую вкусную часть умирающего человека";
				Add2=PID_MEAT;
				Sum2=2;
				PAdd2=PID_PLAYERS_EAR;
				PSum2=1;
				Str2="Вы вырезали как можно больше мяса и взяли ухо как трофей";
				Add3=PID_MEAT;
				Sum3=2;
				PAdd3=PID_PLAYERS_EAR;
				PSum3=2;
				Str3="Вы вырезали самое вкусное и отрезали уши умершего";
			}
			else 
			{
				cr.Say(SAY_NETMSG,"Вам не хочется издеваться над трупом");
			}
			break;
		
			case NPC_PID_BanditMale:                           
			case NPC_PID_MauraderMale:            
			case NPC_PID_RaiderMale:              
			case NPC_PID_MaleSlaver:               
			case NPC_PID_MaleSlaver2:              
			case NPC_PID_ToughMaleThug:                     
			case NPC_PID_MaleTrapper:                                                                                     
			if( cr.Karma[ KARMA_BERSERKER ] !=0 ) 
			{
				Add1=PID_MEAT;
				Sum1=1;
				PAdd1=PID_PLAYERS_EAR;
				PSum1=0;
				Str1="Вы отрезали самую вкусную часть умирающего человека";
				Add2=PID_MEAT;
				Sum2=2;
				PAdd2=PID_PLAYERS_EAR;
				PSum2=1;
				Str2="Вы вырезали как можно больше мяса и взяли ухо как трофей";
				Add3=PID_MEAT;
				Sum3=2;
				PAdd3=PID_PLAYERS_EAR;
				PSum3=2;
				Str3="Вы вырезали самое вкусное и отрезали уши умершего";
			}
			else 
			{
				cr.Say(SAY_NETMSG,"Вам не хочется издеваться над трупом");
			}
			break;
			
			case NPC_PID_GreenGhoul:               
			case NPC_PID_WhiteGhoul:
			if( cr.Karma[ KARMA_BERSERKER ] !=0 ) 
			{
				Add1=PID_MEAT;
				Sum1=1;
				PAdd1=PID_PLAYERS_EAR;
				PSum1=0;
				Str1="Вы с радостью распотрошили гуля";
				Add2=PID_MEAT;
				Sum2=2;
				PAdd2=PID_PLAYERS_EAR;
				PSum2=0;
				Str2="Вы вырезали как можно больше мяса";
				Add3=PID_MEAT;
				Sum3=3;
				PAdd3=PID_PLAYERS_EAR;
				PSum3=0;
				Str3="С тела гуля получилось мясное ассорти, на запах отвратное";
			}
			else 
			{
				cr.Say(SAY_NETMSG,"Вам не хочется издеваться над трупом");
			}
			break;
		
			case NPC_PID_Supermutant: 
			if( cr.Karma[ KARMA_BERSERKER ] !=0 ) 
			{
				Add1=PID_MEAT;
				Sum1=3;
				PAdd1=PID_PLAYERS_EAR;
				PSum1=0;
				Str1="Вы отрезали самую вкусную часть умирающего супермутанта";
				Add2=PID_MEAT;
				Sum2=5;
				PAdd2=PID_PLAYERS_EAR;
				PSum2=1;
				Str2="Вы вырезали как можно больше мяса и взяли ухо как трофей";
				Add3=PID_MEAT;
				Sum3=6;
				PAdd3=PID_PLAYERS_EAR;
				PSum3=2;
				Str3="Вы вырезали самое вкусное и отрезали уши умершего";
			}
			else 
			{
				cr.Say(SAY_NETMSG,"Вам не хочется издеваться над трупом");
			}
			break;
		}
		
		

	}
	else if( onCritter.IsDead() && !onCritter.IsNpc() )
	{
		if( onCritter.Stat[ ST_DESEASE ] != 0 )
		{
			cr.Say( SAY_NETMSG, "Уже освежован." );
			return true;
		}
		if(cr.Karma[ KARMA_BERSERKER ] != 0)
		{
			onCritter.ToLife();
			onCritter.ToDead( ANIM2_DEAD_BLOODY_SINGLE, cr );
				Add1=PID_MEAT;
				Sum1=3;
				PAdd1=PID_PLAYERS_EAR;
				PSum1=0;
				Str1="Вы отрезали самую вкусную часть умирающего";
				Add2=PID_MEAT;
				Sum2=4;
				PAdd2=PID_PLAYERS_EAR;
				PSum2=1;
				Str2="Вы вырезали как можно больше мяса и взяли ухо как трофей";
				Add3=PID_MEAT;
				Sum3=5;
				PAdd3=PID_PLAYERS_EAR;
				PSum3=2;
				Str3="Вы вырезали самое вкусное и отрезали уши умершего";
		}
	}
	
			if  (result > 149)
			{
				if (Add3 >0) _CritAddItem(cr,Add3,Sum3);
				cr.Say( SAY_NETMSG, Str3 );
				skinned = true;
				if (cr.Perk[PE_GECKO_SKINNING] !=0)		
				{
					if (PAdd3>0) _CritAddItem(cr,PAdd3,PSum3);
				}
				else cr.Say( SAY_NETMSG, StrNoPerk);
			}
		else 	if (result > 100)
				{
				if (Add2 >0) _CritAddItem(cr,Add2,Sum2);
				cr.Say( SAY_NETMSG, Str2 );
				skinned = true;
				if (cr.Perk[PE_GECKO_SKINNING] !=0)		
				{
					if (PAdd2>0) _CritAddItem(cr,PAdd2,PSum2);
				}
				else cr.Say( SAY_NETMSG, StrNoPerk);
				}
		else if (result > 40)
			{
				if (Add1 >0) _CritAddItem(cr,Add1,Sum1);
				cr.Say( SAY_NETMSG, Str1 );
				skinned = true;
				if (cr.Perk[PE_GECKO_SKINNING] !=0)		
				{
					if (PAdd1>0) _CritAddItem(cr,PAdd1,PSum1);
				}
				else cr.Say( SAY_NETMSG, StrNoPerk);
			}
		else 
			{
			cr.Say( SAY_NETMSG,"Ваших навыков не хватает чтобы разделать эту тушу." );
			}
			
	if( skinned )
	{
		onCritter.StatBase[ ST_DESEASE ] = 1;
	}
    return true;
}