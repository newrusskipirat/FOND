#include "_macros.fos"
#include "_npc_pids.fos"

import bool AddAttackPlane( Critter& npc, uint priority, Critter& target, bool run ) from "npc_planes";
import bool AddWalkPlane( Critter& npc, uint priority, uint16 hexX, uint16 hexY, uint8 dir, bool run, uint cut ) from "npc_planes";

#define TIME_MUL    ( 4 )

/*
   uint cte_(Critter& cr, int identifier, uint& rate)
   {
        Critter@ guard = GetCritter(cr.Stat[ST_VAR2]);
        Critter@ guard2 = GetCritter(cr.Stat[ST_VAR3]);
        Critter@ lol = GetCritter(cr.Stat[ST_VAR4]);
        switch(cr.StatBase[ST_VAR1])
                {
                case 0: cr.Say(SAY_SOCIAL, ""); break;
                case 1: cr.Say(SAY_SOCIAL, ""); break;
                case 2: cr.Say(SAY_SOCIAL, ""); break;
                case 3: cr.Say(SAY_SOCIAL, ""); break;
                case 4: cr.Say(SAY_SOCIAL, ""); break;
                case 5: cr.Say(SAY_SOCIAL, ""); break;
                case 6: cr.Say(SAY_SOCIAL, ""); break;
                case 7: cr.Say(SAY_SOCIAL, ""); break;
                case 8: cr.Say(SAY_SOCIAL, ""); break;
                case 9: cr.Say(SAY_SOCIAL, ""); break;
                case 10: cr.Say(SAY_SOCIAL, ""); break;
                }
        cr.StatBase[ST_VAR1]++;
        if(cr.StatBase[ST_VAR1]>=12) {cr.StatBase[ST_VAR1] = 0; return 0;}
   return 6*TIME_MUL;
   }
 */

void Clear_Tutorial( Critter& player, int param0, int param1, int param2 )
{
    Map @ map = player.GetMap();
    Critter@[] mobs;
    map.GetCritters( 0, FIND_ALL, mobs );
    for( uint j = 0, jj = mobs.length(); j < jj; j++ )
    {
        if( mobs[ j ].StatBase[ ST_DIALOG_ID ] != 331 )
            DeleteNpc( mobs[ j ] );
        else
        {
            if( mobs[ j ].GetTimeEvents( CTE_WORK, null, null, null ) != 0 )
                mobs[ j ].EraseTimeEvents( CTE_WORK );
            mobs[ j ].StatBase[ ST_VAR1 ] = 0;
        }
    }
}

void Clear_NPC( Critter& cr, int type )
{
    Map @ map = cr.GetMap();
    Critter@[] mobs;
    map.GetCritters( 0, FIND_ALL, mobs );
    for( uint j = 0, jj = mobs.length(); j < jj; j++ )
    {
        if( mobs[ j ].StatBase[ ST_DIALOG_ID ] != 331 && mobs[ j ].StatBase[ ST_VAR1 ] == type )
            DeleteNpc( mobs[ j ] );
    }
}

void GM_Tutorial( Critter& player, int param0, int param1, int param2 )
{
    Critter@ guide = GetCritter( param0 );
    if( valid( guide ) )
        _InitTutorial( guide, true );
}

void _InitTutorial( Critter& cr, bool firstTime )
{
    cr.StatBase[ ST_PERCEPTION ] = 10;
    cr.StatBase[ ST_DIALOG_ID ] = 331;   // нпц_гайд
    cr.ShowCritterDist1 = 15;
    cr.ModeBase[ MODE_NO_WALK ] = 1;
    cr.ModeBase[ MODE_NO_RUN ] = 1;
    cr.ModeBase[ MODE_NO_STEAL ] = 1;
    cr.ModeBase[ MODE_NO_PVP ] = 1;
    cr.ModeBase[ MODE_INVULNERABLE ] = 1;
    cr.ModeBase[ MODE_NO_PUSH ] = 1;
    cr.ModeBase[ MODE_NO_ENEMY_STACK ] = 1;
    cr.ModeBase[ MODE_NO_UNARMED ] = 1;
    cr.QuestBase[ QST_INVIS ] = 50;
    cr.SetEvent( CRITTER_EVENT_TALK, "_tutorial_talk" );
    cr.SetEvent( CRITTER_EVENT_SHOW_CRITTER, "_tutorial_on_sight" );
}

void _tutorial_on_sight( Critter& cr, Critter& showCr )
{
    if( showCr.IsPlayer() && cr.StatBase[ ST_NPC_ROLE ] == 1 && cr.StatBase[ ST_VAR1 ] == 0 && showCr.StatBase[ ST_VAR2 ] == 0 )
    {
        _tutorial_talk( cr, showCr, true, 1 );
    }
}

bool _tutorial_talk( Critter& cr, Critter& talkCr, bool attach, uint talkCount )
{
    Map @ map = cr.GetMap();
    switch( cr.StatBase[ ST_NPC_ROLE ] )
    {
    case 0:
        cr.Say( SAY_NETMSG, "Обучение не назначенно." );
        return true;
    case 1:
        if( cr.GetTimeEvents( CTE_WORK, null, null, null ) == 0 )            // запуск скрипт ролика
        {
            cr.StatBase[ ST_VAR1 ] = 0;
            cr.AddTimeEvent( "cte_intro", 0, CTE_WORK, 0 );
        }
        else if( cr.StatBase[ ST_VAR1 ] != 36 )            // проверка на финал обучающего ролика
        {
            cr.EraseTimeEvents( CTE_WORK );
            cr.AddTimeEvent( "cte_intro", 0, CTE_WORK, 0 );
        }
        break;
    case 2:
        if( cr.GetTimeEvents( CTE_WORK, null, null, null ) == 0 )
        {
            cr.StatBase[ ST_VAR1 ] = 0;
            cr.AddTimeEvent( "cte_gm_introduction", 0, CTE_WORK, 0 );
        }
        else if( cr.StatBase[ ST_VAR1 ] != 12 )
        {
            cr.EraseTimeEvents( CTE_WORK );
            cr.AddTimeEvent( "cte_gm_introduction", 0, CTE_WORK, 0 );
        }
        break;
    case 3:
        if( cr.GetTimeEvents( CTE_WORK, null, null, null ) == 0 )
        {
            cr.StatBase[ ST_VAR1 ] = 0;
            cr.AddTimeEvent( "cte_nameGuide", 0, CTE_WORK, 0 );
        }
        else if( cr.StatBase[ ST_VAR1 ] != 13 )
        {
            cr.EraseTimeEvents( CTE_WORK );
            cr.AddTimeEvent( "cte_nameGuide", 0, CTE_WORK, 0 );
        }
        break;
    case 4:
        if( cr.GetTimeEvents( CTE_WORK, null, null, null ) == 0 )
        {
            cr.StatBase[ ST_VAR1 ] = 0;
            cr.AddTimeEvent( "cte_shootingrange", 0, CTE_WORK, 0 );
        }
        else if( cr.StatBase[ ST_VAR1 ] != 10 )
        {
            cr.EraseTimeEvents( CTE_WORK );
            cr.AddTimeEvent( "cte_shootingrange", 0, CTE_WORK, 0 );
        }
        break;
    case 5:
        if( cr.GetTimeEvents( CTE_WORK, null, null, null ) == 0 )
        {
            cr.StatBase[ ST_VAR1 ] = 0;
            cr.AddTimeEvent( "cte_firegecko", 0, CTE_WORK, 0 );
        }
        else if( cr.StatBase[ ST_VAR1 ] != 17 )
        {
            cr.EraseTimeEvents( CTE_WORK );
            cr.AddTimeEvent( "cte_firegecko", 0, CTE_WORK, 0 );
        }
        break;
    case 6:
        if( cr.GetTimeEvents( CTE_WORK, null, null, null ) == 0 )
        {
            Clear_NPC( cr, 106 );
            cr.StatBase[ ST_VAR1 ] = 0;
            cr.AddTimeEvent( "cte_rules", 0, CTE_WORK, 0 );
        }
        else if( cr.StatBase[ ST_VAR1 ] != 29 )
        {
            cr.EraseTimeEvents( CTE_WORK );
            cr.AddTimeEvent( "cte_rules", 0, CTE_WORK, 0 );
        }
        break;
    case 10:
        if( cr.GetTimeEvents( CTE_WORK, null, null, null ) == 0 )
        {
            cr.StatBase[ ST_VAR1 ] = 0;
            cr.AddTimeEvent( "cte_roles", 0, CTE_WORK, 0 );
        }
        else if( cr.StatBase[ ST_VAR1 ] != 1000 )
        {
            cr.EraseTimeEvents( CTE_WORK );
            cr.AddTimeEvent( "cte_roles", 0, CTE_WORK, 0 );
        }
        break;
    case 11:
        if( cr.GetTimeEvents( CTE_WORK, null, null, null ) == 0 )
        {
            cr.StatBase[ ST_VAR1 ] = 0;
            cr.AddTimeEvent( "cte_roles_doctor", 0, CTE_WORK, 0 );
        }
        else if( cr.StatBase[ ST_VAR1 ] != 1000 )
        {
            cr.EraseTimeEvents( CTE_WORK );
            cr.AddTimeEvent( "cte_roles_doctor", 0, CTE_WORK, 0 );
        }
        break;
    case 12:
        if( cr.GetTimeEvents( CTE_WORK, null, null, null ) == 0 )
        {
            cr.StatBase[ ST_VAR1 ] = 0;
            cr.AddTimeEvent( "cte_roles_thief", 0, CTE_WORK, 0 );
        }
        else if( cr.StatBase[ ST_VAR1 ] != 1000 )
        {
            cr.EraseTimeEvents( CTE_WORK );
            cr.AddTimeEvent( "cte_roles_thief", 0, CTE_WORK, 0 );
        }
        break;
    case 13:
        if( cr.GetTimeEvents( CTE_WORK, null, null, null ) == 0 )
        {
            cr.StatBase[ ST_VAR1 ] = 0;
            cr.AddTimeEvent( "cte_roles_raider", 0, CTE_WORK, 0 );
        }
        else if( cr.StatBase[ ST_VAR1 ] != 28 )
        {
            cr.EraseTimeEvents( CTE_WORK );
            cr.AddTimeEvent( "cte_roles_raider", 0, CTE_WORK, 0 );
        }
        break;
    case 20:
        if( cr.GetTimeEvents( CTE_WORK, null, null, null ) == 0 )
        {
            cr.StatBase[ ST_VAR1 ] = 0;
            cr.AddTimeEvent( "cte_factions_enclave", 0, CTE_WORK, 0 );
        }
        else if( cr.StatBase[ ST_VAR1 ] != 7 )
        {
            cr.EraseTimeEvents( CTE_WORK );
            cr.AddTimeEvent( "cte_factions_enclave", 0, CTE_WORK, 0 );
        }
        break;
    case 21:
        if( cr.GetTimeEvents( CTE_WORK, null, null, null ) == 0 )
        {
            cr.StatBase[ ST_VAR1 ] = 0;
            cr.AddTimeEvent( "cte_factions_BS", 0, CTE_WORK, 0 );
        }
        else if( cr.StatBase[ ST_VAR1 ] != 8 )
        {
            cr.EraseTimeEvents( CTE_WORK );
            cr.AddTimeEvent( "cte_factions_BS", 0, CTE_WORK, 0 );
        }
        break;
    case 22:
        if( cr.GetTimeEvents( CTE_WORK, null, null, null ) == 0 )
        {
            cr.StatBase[ ST_VAR1 ] = 0;
            cr.AddTimeEvent( "cte_factions_NCR", 0, CTE_WORK, 0 );
        }
        else if( cr.StatBase[ ST_VAR1 ] != 1000 )
        {
            cr.EraseTimeEvents( CTE_WORK );
            cr.AddTimeEvent( "cte_factions_NCR", 0, CTE_WORK, 0 );
        }
        break;
    case 23:
        if( cr.GetTimeEvents( CTE_WORK, null, null, null ) == 0 )
        {
            cr.StatBase[ ST_VAR1 ] = 0;
            cr.AddTimeEvent( "cte_factions_NewReno", 0, CTE_WORK, 0 );
        }
        else if( cr.StatBase[ ST_VAR1 ] != 1000 )
        {
            cr.EraseTimeEvents( CTE_WORK );
            cr.AddTimeEvent( "cte_factions_NewReno", 0, CTE_WORK, 0 );
        }
        break;
    case 24:
        if( cr.GetTimeEvents( CTE_WORK, null, null, null ) == 0 )
        {
            cr.StatBase[ ST_VAR1 ] = 0;
            cr.AddTimeEvent( "cte_factions_Modoc", 0, CTE_WORK, 0 );
        }
        else if( cr.StatBase[ ST_VAR1 ] != 1000 )
        {
            cr.EraseTimeEvents( CTE_WORK );
            cr.AddTimeEvent( "cte_factions_Modoc", 0, CTE_WORK, 0 );
        }
        break;
    }
    return false;
}

void _TutorialInitHex( Item& item, bool firstTime )
{
    item.SetEvent( ITEM_EVENT_WALK, "_TutorialHex" );
}

void _TutorialHex( Item& item, Critter& cr, bool entered, uint8 dir )
{
    if( entered )
    {
        if( cr.IsNpc() )
            return;
        Map @ map = cr.GetMap();
        Critter@[] guides;
        item.Val1 = 15;
        map.GetCrittersHex( cr.HexX, cr.HexY, 15, FIND_ALL, guides );
        for( uint j = 0, jj = guides.length(); j < jj; j++ )
        {
            if( guides[ j ].StatBase[ ST_DIALOG_ID ] == 331 )
            {
                uint8 dist = GetDistantion( cr.HexX, cr.HexY, guides[ j ].HexX, guides[ j ].HexY );
                if( dist < item.Val1 )
                {
                    item.Val1 = dist;
                    item.Val2 = guides[ j ].Id;
                }
            }
        }
        Critter@ guide = GetCritter( item.Val2 );
        if( !valid( guide ) )
            return;
        if( guide.StatBase[ ST_NPC_ROLE ] <= cr.StatBase[ ST_VAR2 ] )
            return;
        uint8 dir = GetDirection( cr.HexX, cr.HexY, guide.HexX, guide.HexY );
        cr.SetDir( dir );
        cr.SetEvent( CRITTER_EVENT_IDLE, null );
        cr.Wait( 1000 );
        switch( guide.StatBase[ ST_NPC_ROLE ] )
        {
        case 0:
            guide.Say( SAY_NETMSG, "приветствую, вы наткнулись на кучку сумасшедших роботов-гидов" );
            break;
        case 1:
            guide.Say( SAY_SOCIAL, "приветствую, я роботизированный гид, мистер Хэнди 001" );
            cr.StatBase[ ST_VAR2 ] = 1;
            break;
        case 2:
            guide.Say( SAY_SOCIAL, "приветствую, я роботизированный гид, мистер Хэнди 002 и опишу технические команды и способы связи с администрацией" );
            cr.StatBase[ ST_VAR2 ] = 2;
            break;
        case 3:
            guide.Say( SAY_SOCIAL, "я роботизированный гид, мистер Хэнди 003 и расскажу вам о Именах и Внешности, поговорите со мной чтобы запустить курс обучения" );
            cr.StatBase[ ST_VAR2 ] = 3;
            break;
        case 4:
            guide.Say( SAY_SOCIAL, "я роботизированный гид, мистер Хэнди 004 и проведу курс основ самообороны" );
            cr.StatBase[ ST_VAR2 ] = 4;
            break;
        case 5:
            guide.Say( SAY_SOCIAL, "я роботизированный гид, мистер Хэнди 005 и покажу голографический курс *что делать, если вы встретили огнегекко*" );
            cr.StatBase[ ST_VAR2 ] = 5;
            break;
        case 6:
            guide.Say( SAY_SOCIAL, "я роботизированный гид, мистер Хэнди 006, расскажу о правилах поведения и покажу симптомы и признаки смертельной болезни *лол1*" );
            cr.StatBase[ ST_VAR2 ] = 6;
            break;
        case 10:
            guide.Say( SAY_SOCIAL, "я роботизированный гид, мистер Хэнди 010 и за мной находятся голографические образцы типовых представителей пустоши и профессий" );
            cr.StatBase[ ST_VAR2 ] = 10;
            break;
        case 11:
            guide.Say( SAY_SOCIAL, "я голографический гид, расскажу о профессии доктора и основах медицины" );
            cr.StatBase[ ST_VAR2 ] = 11;
            break;
        case 12:
            guide.Say( SAY_SOCIAL, "я голографический гид, расскажу о воростве и взломе" );
            cr.StatBase[ ST_VAR2 ] = 12;
            break;
        case 13:
            guide.Say( SAY_SOCIAL, "я голографический гид, расскажу о рейдерах и грабеже" );
            cr.StatBase[ ST_VAR2 ] = 13;
            break;
        case 20:
            guide.Say( SAY_SOCIAL, "я голографический гид, расскажу о Анклаве" );
            cr.StatBase[ ST_VAR2 ] = 20;
            break;
        case 21:
            guide.Say( SAY_SOCIAL, "я голографический гид, расскажу о Братстве стали" );
            cr.StatBase[ ST_VAR2 ] = 21;
            break;
        case 22:
            guide.Say( SAY_SOCIAL, "я голографический гид, расскажу о Новой Калифорнийской Республике" );
            cr.StatBase[ ST_VAR2 ] = 22;
            break;
        case 23:
            guide.Say( SAY_SOCIAL, "я голографический гид, расскажу о Нью-Рено" );
            cr.StatBase[ ST_VAR2 ] = 23;
            break;
        case 24:
            guide.Say( SAY_SOCIAL, "я голографический гид, расскажу о Модоке" );
            cr.StatBase[ ST_VAR2 ] = 24;
            break;
        }
    }
}

uint cte_intro( Critter& cr, int identifier, uint& rate )
{
    switch( cr.StatBase[ ST_VAR1 ] )
    {
    case 0:
        cr.StatBase[ ST_VAR2 ] = 1;
        cr.Say( SAY_SOCIAL, "Приветствую, вы наткнулись на группу сумасшедших роботов-гидов" );
        break;
    case 1:
        cr.Say( SAY_SOCIAL, "я роботизированный Гид - мистер Хэнди 001 и расскажу вам основах управления и интерфейсе игры" );
        break;
    case 2:
        cr.Say( SAY_SOCIAL, "если вы знакомы с интерфейсом игры Fallout, можете отправлятся дальше по дороге, другие Гиды расскажут вам остальное" );
        break;
    case 3:
        cr.Say( SAY_SOCIAL, "для продолжения курса обучения или пропска реплики просто поговорите со мной [щелкните по гиду мышкой]" );
        cr.StatBase[ ST_VAR1 ]++;
        return 100;
    case 4:
        cr.Say( SAY_SOCIAL, "в левом нижнем углу экрана находится окно лога, там отражается игровая информация и реплики персонажей" );
        break;
    case 5:
        cr.Say( SAY_SOCIAL, "для перемещения персонажа щелкните курсором в форме красного шестиугольника (гекса) на любом доступном месте на экране" );
        break;
    case 6:
        cr.Say( SAY_SOCIAL, "двойной щелчек или щелчек с нажатой кнопкой SHIFT заставит персонажа бежать" );
        break;
    case 7:
        cr.Say( SAY_SOCIAL, "если в центре гекса красный крест, то вы не можете пройти в эту точку" );
        break;
    case 8:
        cr.Say( SAY_SOCIAL, "правая кнопка мыши переключает режим перемещения на курсор взаимодействия" );
        break;
    case 9:
        cr.Say( SAY_SOCIAL, "при наведении на любой объект рядом с курсором появляется пиктограмка действия по умолчанию" );
        break;
    case 10:
        cr.Say( SAY_SOCIAL, "при зажатии левой кнопки, появляется контекстное меню с возможными действиями, выбор между ними производится перемещением мышки вверх вниз" );
        break;
    case 11:
        cr.Say( SAY_SOCIAL, "бинокль - в окно лога пишется описание предмета или существа" );
        break;
    case 12:
        cr.Say( SAY_SOCIAL, "рука - произвести действие с объектом" );
        break;
    case 13:
        cr.Say( SAY_SOCIAL, "рюкзак - применить предмет из инвентаря, на данном предмете/существе" );
        break;
    case 14:
        cr.Say( SAY_SOCIAL, "голова - применить навык на объекте" );
        break;
    case 15:
        cr.Say( SAY_SOCIAL, "рот - поговорить, используется на нпц, подобных мне" );
        break;
    case 16:
        cr.Say( SAY_SOCIAL, "рука со стрелкой - оттолкнуть, если вам кто-то загородил проход" );
        break;
    case 17:
        cr.Say( SAY_SOCIAL, "теперь иконки взаимодействия с другими игроками" );
        break;
    case 18:
        cr.Say( SAY_SOCIAL, "стрелочка в группу трех силуэтов - присоедениться к персонажу в группу" );
        break;
    case 19:
        cr.Say( SAY_SOCIAL, "над этим персонажем будет отображаться стрелка" );
        break;
    case 20:
        cr.Say( SAY_SOCIAL, "две стрелки с долларом посередине - появляется только если вы вплотную к персонажу другого игрока" );
        break;
    case 21:
        cr.Say( SAY_SOCIAL, "это действие открывает окно бартера - обмена вещами, оппонент видит ваши предметы, вы его" );
        break;
    case 22:
        cr.Say( SAY_SOCIAL, "переносите в соответствующее поле ваши предметы, а оппонент свои, нажимаете согласиться - происходит обмен" );
        break;
    case 23:
        cr.Say( SAY_SOCIAL, "иконка с двумя стрелочками - скрытый бартер, отличается тем, что оппонент в окне бартера не будет видеть остальные ваши предметы, кроме предложенных" );
        break;
    case 24:
        cr.Say( SAY_SOCIAL, "теперь о общении" );
        break;
    case 25:
        cr.Say( SAY_SOCIAL, "нажмите enter, откроется строка речи (чата)" );
        break;
    case 26:
        cr.Say( SAY_SOCIAL, "вы можете просто говорить, кричать, шептать, показать эмоцию или говорить в рацию" );
        break;
    case 27:
        cr.Say( SAY_SOCIAL, "нажмите F1, для того чтобы открыть окно помощи, там описаны горячие клавиши работы с интерфейсом и способы речи" );
        break;
    case 28:
        cr.Say( SAY_SOCIAL, "о инвентаре" );
        break;
    case 29:
        cr.Say( SAY_SOCIAL, "нажмите I, это откроет окно инвентаря" );
        break;
    case 30:
        cr.Say( SAY_SOCIAL, "слева отражаются предметы находящиеся у вас в рюкзаке, справа слоты брони и предметов в руках" );
        break;
    case 31:
        cr.Say( SAY_SOCIAL, "для того чтобы взять предмет в руки или одеть броню, просто перетащите предмет в соответствующий слот" );
        break;
    case 32:
        cr.Say( SAY_SOCIAL, "к сожалению носить броню могут лишь стандартные скины [у которых изначально - синий костюм жителя убежища]" );
        break;
    case 33:
        cr.Say( SAY_SOCIAL, "если вы не уверены какой выбрать или впервые играете, используйте стандартный" );
        break;
    case 34:
        cr.Say( SAY_SOCIAL, "также сейчас у вас в инвентаре также есть анкеты и косметички, но них вам расскажут следующие гиды" );
        break;
    case 35:
        cr.Say( SAY_SOCIAL, "для продолжения просто идите вдоль по дороге, удачного пути" );
        break;
    }
    cr.StatBase[ ST_VAR1 ]++;
    if( cr.StatBase[ ST_VAR1 ] >= 37 )
    {
        cr.StatBase[ ST_VAR1 ] = 0;
        return 0;
    }
    return 10 * TIME_MUL;
}

uint cte_gm_introduction( Critter& cr, int identifier, uint& rate )
{
    switch( cr.StatBase[ ST_VAR1 ] )
    {
    case 0:
        cr.Say( SAY_SOCIAL, "я роботизированный Гид - мистер Хэнди 002 и расскажу вам о технических коммандах и как связаться с Мастерами игры" );
        break;
    case 1:
        cr.Say( SAY_SOCIAL, "для связи с Мастерами игры служит комманда $help [текст], если кто-то из Мастеров онлайн, то он поможет решить проблему" );
        break;
    case 2:
        cr.Say( SAY_SOCIAL, "не беспокойте Мастеров понапрасну, вызывайте только если видите нарушения правил сервера, баги или нужна помощь в массовом отыгрыше" );
        break;
    case 3:
        cr.Say( SAY_SOCIAL, "если никто не отзывается, то советую зайти на канал ND в Discord");
        break;
    case 4:
        cr.Say( SAY_SOCIAL, "это можно сделать через специализированные клиенты или через браузер https://clck.ru/DU2U6" );
        break;
    case 5:
        cr.Say( SAY_SOCIAL, "также в доступен дополнительный интерфейс - быстрая панель" );
        break;
    case 6:
        cr.Say( SAY_SOCIAL, "быстрая панель позволяет поставить частоиспользуемые фразы на горячие кнопки" );
        break;
    case 7:
        cr.Say( SAY_SOCIAL, "активируется командой ~fastpanel" );
        break;
    case 8:
        cr.Say( SAY_SOCIAL, "далее просто щелкайте в панельки и назначайте необходимый текст и тип речи" );
        break;
    case 9:
        cr.Say( SAY_SOCIAL, "горячие кнопки для применения панелек - цифры от 1 до 9" );
        break;
    case 10:
        cr.Say( SAY_SOCIAL, "удачного пути" );
        break;
    }
    cr.StatBase[ ST_VAR1 ]++;
    if( cr.StatBase[ ST_VAR1 ] >= 11 )
    {
        cr.StatBase[ ST_VAR1 ] = 0;
        return 0;
    }
    return 10 * TIME_MUL;
}

uint cte_nameGuide( Critter& cr, int identifier, uint& rate )
{
    switch( cr.StatBase[ ST_VAR1 ] )
    {
    case 0:
        cr.Say( SAY_SOCIAL, "прежде всего, не удивляйтесь отсутствию ников над головами других игроков" );
        break;
    case 1:
        cr.Say( SAY_SOCIAL, "изначально вы никого не знаете и каждого встречного следует запоминать вручную" );
        break;
    case 2:
        cr.Say( SAY_SOCIAL, "для запоминания имени щелкните _средней кнопкой мыши_ на персонаже и в появившемся окне введите имя, под которым запомнить" );
        break;
    case 3:
        cr.Say( SAY_SOCIAL, "однако не следует приставать к каждому встречному с вопросом *как твое имя?*, запоминайте персонажей исходя из ситуации" );
        break;
    case 4:
        cr.Say( SAY_SOCIAL, "пока не узнаете имя, можете подписывать *рейдер*, *торговец*, *в куртке*, *дикарь* и т.п." );
        break;
    case 5:
        cr.Say( SAY_SOCIAL, "кроме имени персонажа также отличает дополнительное описание, видимое при применении пункта *бинокль* в контекстном меню" );
        break;
    case 6:
        cr.Say( SAY_SOCIAL, "вы можете задать себе описание, применив предмет *анкету*, которая сейчас находится в вашем инвентаре, попробуйте сейчас" );
        cr.StatBase[ ST_VAR1 ]++;
        return 15 * TIME_MUL;
    case 7:
        cr.Say( SAY_SOCIAL, "отлично, но будьте сдержаны и благоразумны в своем описании, за *пылающие огнем глаза* вас просто пристрелит первый встречный" );
        break;
    case 8:
        cr.Say( SAY_SOCIAL, "логичны описания *шрам на виске, грубые черты лица* или *обветренная кожа, татуировка на руке*, т.е. отличительная черта во внешности" );
        break;
    case 9:
        cr.Say( SAY_SOCIAL, "также в инвентаре у вас есть *набор для изменения внешности*" );
        break;
    case 10:
        cr.Say( SAY_SOCIAL, "с помощью него можно поменять скин, визуальное отображение персонажа, если вас не устраивает выбранное при создании" );
        break;
    case 11:
        cr.Say( SAY_SOCIAL, "просто примените предмет и выберете нужный скин через появившееся меню" );
        break;
    case 12:
        cr.Say( SAY_SOCIAL, "удачного пути" );
        break;
    }
    cr.StatBase[ ST_VAR1 ]++;
    if( cr.StatBase[ ST_VAR1 ] >= 14 )
    {
        cr.StatBase[ ST_VAR1 ] = 0;
        return 0;
    }
    return 10 * TIME_MUL;
}

uint cte_shootingrange( Critter& cr, int identifier, uint& rate )
{
    Map @ map = cr.GetMap();
    switch( cr.StatBase[ ST_VAR1 ] )
    {
    case 0:
        cr.Say( SAY_SOCIAL, "начнем с основ, для атаки на кого-либо щелкните по слоту с оружием внизу экрана или нажмите A (Ф в русской раскладке)" );
        break;
    case 1:
        cr.Say( SAY_SOCIAL, "курсор сменится на красный прицел, при наведении курсора на существ, вы увидите шанс удачного попадания атаки" );
        break;
    case 2:
        cr.Say( SAY_SOCIAL, "если выбран прицельный выстрел(удар) - иконка мишени на слоте с оружием, то при атаке появится меню с выбором куда атаковать" );
        break;
    case 3:
        cr.Say( SAY_SOCIAL, "при нападении включается режим боя, в этом режиме на бег тратятся очки действия (ОД) и запрещена часть действий персонажа" );
        break;
    case 4:
        cr.Say( SAY_SOCIAL, "также во время боя, на режим атаки (красная мишень) можо переключиться правой кнопкой мыши" );
        break;
    case 5:
        cr.Say( SAY_SOCIAL, "лучшее обучение это практика, выстрелите в эту треннировочную цель в виде мыши, не бойтесь, все голографическое" );
        break;
    case 6:
        cr.Say( SAY_SOCIAL, "для этого подберите пистолет с земли, возьмите в руку, нацельтесь на мышь, представьте, что это ситуация из разряда вы или она, нажмите на курок" );
        cr.SetEvent( CRITTER_EVENT_SMTH_ATTACK, "_shootingrangeGuide" );
        break;
    case 7:
        cr.Say( SAY_SOCIAL, "хм, видимо это не ваше, не отчаивайтесь, может в случае конфликта вам удастся договориться с оппонентом" );
        cr.StatBase[ ST_VAR1 ]++;
        break;
    case 8:
        cr.Say( SAY_SOCIAL, "отлично, у вас все получилось просто замечательно" );
        break;
    case 9:
        cr.Say( SAY_SOCIAL, "на этом обучающий курс основ самообороны заканчивается, посмотрите следующий курс о практическом применении навыков" );
        break;
    }
    if( cr.StatBase[ ST_VAR1 ] == 5 )
    {
        cr.SetEvent( CRITTER_EVENT_SMTH_ATTACK, "_shootingrangeGuide" );
        Item @ gun = map.AddItem( cr.HexX + 2, cr.HexY + 1, PID_10MM_PISTOL, 1 );
        Critter@ rat = map.AddNpc( 11, cr.HexX - 7, cr.HexY - 8, 3, null, null, null );
        if( valid( gun ) )
            cr.StatBase[ ST_VAR2 ] = gun.Id;
        if( valid( rat ) )
            cr.StatBase[ ST_VAR3 ] = rat.Id;
        cr.StatBase[ ST_VAR1 ]++;
        return 40 * TIME_MUL;
    }
    if( cr.StatBase[ ST_VAR1 ] >= 9 )
    {
        Critter@ rat = GetCritter( cr.Stat[ ST_VAR3 ] );
        Item @ gun = GetItem( cr.Stat[ ST_VAR2 ] );
        rat.StatBase[ ST_VAR1 ] = 100;
        if( valid( rat ) )
            DeleteNpc( rat );
        if( valid( gun ) )
            DeleteItem( gun );
        return 0;
    }
    cr.StatBase[ ST_VAR1 ]++;
    if( cr.StatBase[ ST_VAR1 ] >= 11 )
    {
        cr.StatBase[ ST_VAR1 ] = 0;
        return 0;
    }
    return 8 * TIME_MUL;
}

void _shootingrangeGuide( Critter& cr, Critter& fromCr, Critter& target )
{
    if( cr.StatBase[ ST_VAR1 ] == 6 )
    {
        cr.StatBase[ ST_VAR1 ] += 2;
        _tutorial_talk( cr, fromCr, true, 1 );
        Critter@ rat = GetCritter( cr.Stat[ ST_VAR3 ] );
        if( target.Id == rat.Id )
            target.ToDead( 0, target );
    }
}

uint cte_firegecko( Critter& cr, int identifier, uint& rate )  // Показ опасности
{
    int event = cr.Stat[ ST_VAR1 ];
    if( event == 0 )
    {
        cr.Say( SAY_SOCIAL, "безоружный человек встретил огнегекко" );
        cr.SetDir( 0 );
        Map @ map = cr.GetMap();
        Critter@[] mobs;
        map.GetCritters( 0, FIND_ALL, mobs );
        for( uint j = 0, jj = mobs.length(); j < jj; j++ )
        {
            if( mobs[ j ].StatBase[ ST_VAR1 ] == 100 )
                DeleteNpc( mobs[ j ] );
        }
        Critter@ gecko = map.AddNpc( 514, cr.HexX - 5, cr.HexY, 0, null, null, null );
        Critter@ newby = map.AddNpc( 92, cr.HexX - 10, cr.HexY - 2, 3, null, null, null );
        if( !valid( newby ) || !valid( gecko ) )
        {
            cr.StatBase[ ST_VAR1 ] = 0;
            return 0;
        }
        gecko.StatBase[ ST_VAR1 ] = 100;
        newby.StatBase[ ST_VAR1 ] = 100;
        cr.StatBase[ ST_VAR2 ] = gecko.Id;
        cr.StatBase[ ST_VAR3 ] = newby.Id;
        newby.ModeBase[ MODE_NO_WALK ] = 1;
        newby.ModeBase[ MODE_NO_RUN ] = 1;
        newby.ModeBase[ MODE_NO_STEAL ] = 1;
		newby.ModeBase[ MODE_NO_LOOT ] = 1;
        cr.StatBase[ ST_VAR1 ]++;
    }
    else if( event == 1 )
    {
        cr.Say( SAY_SOCIAL, "человек говорит гекко *привет*" );
        Critter@ newby = GetCritter( cr.Stat[ ST_VAR3 ] );
        if( !valid( newby ) )
        {
            cr.StatBase[ ST_VAR1 ] = 0;
            return 0;
        }
        newby.Say( SAY_NORM, "Привет." );
        cr.StatBase[ ST_VAR1 ]++;
    }
    else if( event == 2 )
    {
        cr.Say( SAY_SOCIAL, "гекко отвечает" );
        Critter@ gecko = GetCritter( cr.Stat[ ST_VAR2 ] );
        Critter@ newby = GetCritter( cr.Stat[ ST_VAR3 ] );
        if( !valid( gecko ) )
        {
            cr.StatBase[ ST_VAR1 ] = 0;
            return 0;
        }
        if( !valid( newby ) )
        {
            cr.StatBase[ ST_VAR1 ] = 0;
            return 0;
        }
        gecko.SkillBase[ SK_UNARMED ] = 300;
        gecko.StatBase[ ST_MELEE_DAMAGE ] = 200;
        AddAttackPlane( gecko, 0, newby, true );
        cr.StatBase[ ST_VAR1 ]++;
        return 10 * TIME_MUL;
    }
    else if( event == 3 )
    {
        Critter@ gecko = GetCritter( cr.Stat[ ST_VAR2 ] );
        Critter@ newby = GetCritter( cr.Stat[ ST_VAR3 ] );
        if( !valid( gecko ) )
        {
            cr.StatBase[ ST_VAR1 ] = 0;
            return 0;
        }
        if( !valid( newby ) )
        {
            cr.StatBase[ ST_VAR1 ] = 0;
            return 0;
        }
        DeleteNpc( gecko );
        DeleteNpc( newby );
        cr.Say( SAY_SOCIAL, "мораль - не стоит разговаривать с гекко, лучше убегать" );
        cr.StatBase[ ST_VAR1 ]++;
        return 10 * TIME_MUL;
    }
    else if( event == 4 )
    {
        cr.Say( SAY_SOCIAL, "человек с пистолетом встретил огнегекко" );
        Map @ map = cr.GetMap();
        Critter@ gecko = map.AddNpc( 514, cr.HexX - 5, cr.HexY, 0, null, null, null );
        Critter@ newby = map.AddNpc( 92, cr.HexX - 10, cr.HexY - 2, 3, null, null, null );
        if( !valid( gecko ) )
        {
            cr.StatBase[ ST_VAR1 ] = 0;
            return 0;
        }
        if( !valid( newby ) )
        {
            cr.StatBase[ ST_VAR1 ] = 0;
            return 0;
        }
        gecko.StatBase[ ST_VAR1 ] = 100;
        newby.StatBase[ ST_VAR1 ] = 100;
        cr.StatBase[ ST_VAR2 ] = gecko.Id;
        Item@ weapon = newby.AddItem( PID_SMOKE_GUN_LOW, 1 );
        newby.MoveItem( weapon.Id, 1, SLOT_HAND1 );
        weapon.Update();
        newby.ModeBase[ MODE_NO_WALK ] = 1;
        newby.ModeBase[ MODE_NO_RUN ] = 1;
		newby.ModeBase[ MODE_NO_STEAL ] = 1;
		newby.ModeBase[ MODE_NO_LOOT ] = 1;		
        cr.StatBase[ ST_VAR3 ] = newby.Id;
        cr.StatBase[ ST_VAR1 ]++;
    }
    else if( event == 5 )
    {
        cr.Say( SAY_SOCIAL, "человек нападает" );
        Critter@ gecko = GetCritter( cr.Stat[ ST_VAR2 ] );
        Critter@ newby = GetCritter( cr.Stat[ ST_VAR3 ] );
        if( !valid( gecko ) )
        {
            cr.StatBase[ ST_VAR1 ] = 0;
            return 0;
        }
        if( !valid( newby ) )
        {
            cr.StatBase[ ST_VAR1 ] = 0;
            return 0;
        }
        gecko.StatBase[ ST_VAR1 ] = 100;
        newby.StatBase[ ST_VAR1 ] = 100;
        newby.SkillBase[ SK_SMALL_GUNS ] = 300;
        gecko.StatBase[ ST_MELEE_DAMAGE ] = 100;
        gecko.SkillBase[ SK_UNARMED ] = 300;
        AddAttackPlane( newby, 0, gecko, true );
        cr.StatBase[ ST_VAR1 ]++;
        return 10 * TIME_MUL;
    }
    else if( event == 6 )
    {
        Critter@ gecko = GetCritter( cr.Stat[ ST_VAR2 ] );
        Critter@ newby = GetCritter( cr.Stat[ ST_VAR3 ] );
        if( !valid( gecko ) )
        {
            cr.StatBase[ ST_VAR1 ] = 0;
            return 0;
        }
        if( !valid( newby ) )
        {
            cr.StatBase[ ST_VAR1 ] = 0;
            return 0;
        }
        DeleteNpc( gecko );
        DeleteNpc( newby );
        cr.Say( SAY_SOCIAL, "мораль - не стоит нападать на гекко в одиночку, лучше убегать" );
        cr.StatBase[ ST_VAR1 ]++;
    }
    else if( event == 7 )
    {
        cr.Say( SAY_SOCIAL, "вооруженный человек встретил огнегекко" );
        Map @ map = cr.GetMap();
        Critter@ gecko = map.AddNpc( 514, cr.HexX - 5, cr.HexY, 0, null, null, null );
        Critter@ newby = map.AddNpc( 48, cr.HexX - 10, cr.HexY - 2, 3, null, null, null );
        if( !valid( gecko ) )
        {
            cr.StatBase[ ST_VAR1 ] = 0;
            return 0;
        }
        if( !valid( newby ) )
        {
            cr.StatBase[ ST_VAR1 ] = 0;
            return 0;
        }
        gecko.StatBase[ ST_VAR1 ] = 100;
        newby.StatBase[ ST_VAR1 ] = 100;
		newby.ModeBase[ MODE_NO_STEAL ] = 1;
		newby.ModeBase[ MODE_NO_LOOT ] = 1;	
        cr.StatBase[ ST_VAR2 ] = gecko.Id;
        Item@ weapon = newby.AddItem( PID_HUNTING_RIFLE, 1 );
        newby.MoveItem( weapon.Id, 1, SLOT_HAND1 );
        weapon.Update();
        cr.StatBase[ ST_VAR3 ] = newby.Id;
        cr.StatBase[ ST_VAR1 ]++;
    }
    else if( event == 8 )
    {
        cr.Say( SAY_SOCIAL, "и даже будучи вооруженным, стоит позвать подмогу" );
        Map @ map = cr.GetMap();
        Critter@ newby = GetCritter( cr.Stat[ ST_VAR3 ] );
        if( !valid( newby ) )
        {
            cr.StatBase[ ST_VAR1 ] = 0;
            return 0;
        }
        newby.ModeBase[ MODE_NO_HOME ] = 1;
        newby.Say( SAY_NORM, "Хренасе" );
        AddWalkPlane( newby, 1, cr.HexX - 23, cr.HexY - 8, 3, true, 0 );
        cr.StatBase[ ST_VAR1 ]++;
    }
    else if( event == 9 )
    {
        cr.Say( SAY_SOCIAL, "хотя бы одного или даже лучше двух" );
        Map @ map = cr.GetMap();
        Critter@ gecko = GetCritter( cr.Stat[ ST_VAR2 ] );
        Critter@ newby = GetCritter( cr.Stat[ ST_VAR3 ] );
        Critter@ newby2 = map.AddNpc( 48, cr.HexX - 20, cr.HexY - 5, 3, null, null, null );
        Critter@ newby3 = map.AddNpc( 48, cr.HexX - 20, cr.HexY - 8, 3, null, null, null );
        if( !valid( gecko ) )
        {
            cr.StatBase[ ST_VAR1 ] = 0;
            return 0;
        }
        if( !valid( newby ) )
        {
            cr.StatBase[ ST_VAR1 ] = 0;
            return 0;
        }
        if( !valid( newby2 ) )
        {
            cr.StatBase[ ST_VAR1 ] = 0;
            return 0;
        }
        if( !valid( newby3 ) )
        {
            cr.StatBase[ ST_VAR1 ] = 0;
            return 0;
        }
        newby2.StatBase[ ST_VAR1 ] = 100;
        newby3.StatBase[ ST_VAR1 ] = 100;
		newby.ModeBase[ MODE_NO_STEAL ] = 1;
		newby.ModeBase[ MODE_NO_LOOT ] = 1;	
		newby2.ModeBase[ MODE_NO_STEAL ] = 1;
		newby2.ModeBase[ MODE_NO_LOOT ] = 1;	
		newby3.ModeBase[ MODE_NO_STEAL ] = 1;
		newby3.ModeBase[ MODE_NO_LOOT ] = 1;	
        Item@ weapon2 = newby2.AddItem( PID_HUNTING_RIFLE, 1 );
        newby2.MoveItem( weapon2.Id, 1, SLOT_HAND1 );
        weapon2.Update();
        Item@ weapon3 = newby3.AddItem( PID_HUNTING_RIFLE, 1 );
        newby3.MoveItem( weapon3.Id, 1, SLOT_HAND1 );
        weapon3.Update();
        newby.Say( SAY_NORM, "Помогите" );
        newby.SkillBase[ SK_SMALL_GUNS ] = 300;
        newby2.SkillBase[ SK_SMALL_GUNS ] = 300;
        newby3.SkillBase[ SK_SMALL_GUNS ] = 300;
        newby.PerkBase[ PE_BONUS_RANGED_DAMAGE ] = 10;
        newby2.PerkBase[ PE_BONUS_RANGED_DAMAGE ] = 10;
        newby3.PerkBase[ PE_BONUS_RANGED_DAMAGE ] = 10;
        AddAttackPlane( newby, 0, gecko, true );
        AddAttackPlane( newby2, 0, gecko, true );
        AddAttackPlane( newby3, 0, gecko, true );
        cr.StatBase[ ST_VAR1 ]++;
        return 20 * TIME_MUL;
    }
    else if( event == 10 )
    {
        Map @ map = cr.GetMap();
        cr.Say( SAY_SOCIAL, "запомните, только в группе вы можете гарантировать себе выживание" );
        Critter@ gecko = GetCritter( cr.Stat[ ST_VAR2 ] );
        Critter@ newby = GetCritter( cr.Stat[ ST_VAR3 ] );
        if( !valid( gecko ) )
        {
            cr.StatBase[ ST_VAR1 ] = 0;
            return 0;
        }
        if( !valid( newby ) )
        {
            cr.StatBase[ ST_VAR1 ] = 0;
            return 0;
        }
        DeleteNpc( gecko );
        DeleteNpc( newby );
        Critter@[] mobs;
        map.GetCritters( 0, FIND_ALL, mobs );
        for( uint j = 0, jj = mobs.length(); j < jj; j++ )
        {
            if( mobs[ j ].Stat[ ST_VAR1 ] == 100 )
                DeleteNpc( mobs[ j ] );
        }
        cr.StatBase[ ST_VAR1 ]++;
    }
    else if( event == 11 )
    {
        cr.Say( SAY_SOCIAL, "этих животных вы, вооружившись и при некотором везении, вероятно сможете убить и сами" );
        Map @ map = cr.GetMap();
        Critter@ mob1 = map.AddNpc( 11, cr.HexX - 7, cr.HexY - 6, 3, null, null, null );
        Critter@ mob2 = map.AddNpc( 12, cr.HexX - 7, cr.HexY - 4, 3, null, null, null );
        Critter@ mob3 = map.AddNpc( 16, cr.HexX - 7, cr.HexY - 2, 3, null, null, null );
        Critter@ mob4 = map.AddNpc( 112, cr.HexX - 7, cr.HexY, 3, null, null, null );
        Critter@ mob5 = map.AddNpc( 355, cr.HexX - 7, cr.HexY + 2, 3, null, null, null );
        mob1.StatBase[ ST_VAR1 ] = 100;
        mob2.StatBase[ ST_VAR1 ] = 100;
        mob3.StatBase[ ST_VAR1 ] = 100;
        mob4.StatBase[ ST_VAR1 ] = 100;
        mob5.StatBase[ ST_VAR1 ] = 100;
        cr.StatBase[ ST_VAR1 ]++;
        return 12 * TIME_MUL;
    }
    else if( event == 12 )
    {
        Map @ map = cr.GetMap();
        cr.Say( SAY_SOCIAL, "но не лезьте в бой без причины, опыт за убийства все равно не дается" );
        Critter@[] mobs;
        map.GetCritters( 0, FIND_ALL, mobs );
        for( uint j = 0, jj = mobs.length(); j < jj; j++ )
        {
            if( mobs[ j ].StatBase[ ST_VAR1 ] == 100 )
                DeleteNpc( mobs[ j ] );
        }
        cr.StatBase[ ST_VAR1 ]++;
    }
    else if( event == 13 )
    {
        cr.Say( SAY_SOCIAL, "эти животные при некотором везении могут убить вас и сами" );
        Map @ map = cr.GetMap();
        Critter@ mob1 = map.AddNpc( 6, cr.HexX - 7, cr.HexY - 6, 3, null, null, null );
        Critter@ mob2 = map.AddNpc( 86, cr.HexX - 7, cr.HexY - 4, 3, null, null, null );
        Critter@ mob3 = map.AddNpc( 82, cr.HexX - 7, cr.HexY - 2, 3, null, null, null );
        Critter@ mob4 = map.AddNpc( 110, cr.HexX - 7, cr.HexY, 3, null, null, null );
        Critter@ mob5 = map.AddNpc( 7, cr.HexX - 7, cr.HexY + 2, 3, null, null, null );
        mob1.StatBase[ ST_VAR1 ] = 100;
        mob2.StatBase[ ST_VAR1 ] = 100;
        mob3.StatBase[ ST_VAR1 ] = 100;
        mob4.StatBase[ ST_VAR1 ] = 100;
        mob5.StatBase[ ST_VAR1 ] = 100;
        cr.StatBase[ ST_VAR1 ]++;
        return 12 * TIME_MUL;
    }
    else if( event == 14 )
    {
        Map @ map = cr.GetMap();
        cr.Say( SAY_SOCIAL, "но помните, что лучшее средство самообороны - это бег" );
        Critter@[] mobs;
        map.GetCritters( 0, FIND_ALL, mobs );
        for( uint j = 0, jj = mobs.length(); j < jj; j++ )
        {
            if( mobs[ j ].StatBase[ ST_VAR1 ] == 100 )
                DeleteNpc( mobs[ j ] );
        }
        cr.StatBase[ ST_VAR1 ]++;
    }
    else if( event == 15 )
    {
        cr.Say( SAY_SOCIAL, "от этих животных вы при некотором везении сможете убежать" );
        Map @ map = cr.GetMap();
        Critter@ mob1 = map.AddNpc( 8, cr.HexX - 7, cr.HexY - 6, 3, null, null, null );
        Critter@ mob2 = map.AddNpc( 177, cr.HexX - 7, cr.HexY - 4, 3, null, null, null );
        Critter@ mob3 = map.AddNpc( 240, cr.HexX - 7, cr.HexY - 2, 3, null, null, null );
        Critter@ mob4 = map.AddNpc( 242, cr.HexX - 7, cr.HexY, 3, null, null, null );
        Critter@ mob5 = map.AddNpc( 248, cr.HexX - 7, cr.HexY + 2, 3, null, null, null );
        mob1.StatBase[ ST_VAR1 ] = 100;
        mob2.StatBase[ ST_VAR1 ] = 100;
        mob3.StatBase[ ST_VAR1 ] = 100;
        mob4.StatBase[ ST_VAR1 ] = 100;
        mob5.StatBase[ ST_VAR1 ] = 100;
        cr.StatBase[ ST_VAR1 ]++;
        return 12 * TIME_MUL;
    }
    else if( event == 16 )
    {
        Map @ map = cr.GetMap();
        cr.Say( SAY_SOCIAL, "на этом голографический ролик заканчивается, а следующий гид расскажет как выживать в цивилизованном обществе" );
        Critter@[] mobs;
        map.GetCritters( 0, FIND_ALL, mobs );
        for( uint j = 0, jj = mobs.length(); j < jj; j++ )
        {
            if( mobs[ j ].StatBase[ ST_VAR1 ] == 100 )
                DeleteNpc( mobs[ j ] );
        }
        cr.StatBase[ ST_VAR1 ]++;
        return 10 * TIME_MUL;
    }
    else if( event >= 17 )
    {
        return 0;
    }
    return 6 * TIME_MUL;
}

uint cte_rules( Critter& cr, int identifier, uint& rate )  // Правила сервера
{
    Critter@ guard = GetCritter( cr.Stat[ ST_VAR2 ] );
    Critter@ guard2 = GetCritter( cr.Stat[ ST_VAR3 ] );
    Critter@ lol = GetCritter( cr.Stat[ ST_VAR4 ] );
    switch( cr.StatBase[ ST_VAR1 ] )
    {
    case 0:
        Clear_NPC( cr, 106 );
        cr.Say( SAY_SOCIAL, "в Модоке все нарушения правил игры объясняются заражением вирусом ЛОЛ1 - синдром Локальной Обструкции Личности" );
        break;
    case 1:
        cr.Say( SAY_SOCIAL, "этот вирус считается заразным, а зараженные им подлежат немедленному уничтожению" );
        break;
    case 2:
        cr.Say( SAY_SOCIAL, "нарушение номер 1 - использование ололо сленга, разговоры от лица игроков а не персонажей и бредоотыгрыш" );
        break;
    case 3:
        cr.Say( SAY_SOCIAL, "например, стоят два охранника на посту" );
        break;
    case 4:
        cr.Say( SAY_SOCIAL, "разговаривают о качестве пива в местном баре" );
        if( valid( guard ) )
            guard.Say( SAY_NORM, "слышал? водоочистная станция опять сломалась, опять пиво тухлое будет" );
        break;
    case 5:
        if( valid( guard ) )
            guard.Say( SAY_EMOTE_ON_HEAD, "зевает" );
        if( valid( guard2 ) )
            guard2.Say( SAY_NORM, "фигово, и надолого она того или как в прошлый раз?" );
        break;
    case 6:
        cr.Say( SAY_SOCIAL, "тут подходит новичек и начинает говорить про игровую механику" );
        if( valid( lol ) )
            AddWalkPlane( lol, 1, cr.HexX - 11, cr.HexY + 2, 5, true, 0 );
        break;
    case 7:
        if( valid( lol ) )
            lol.Say( SAY_NORM, "привет, а где здесь качаться, мне за мобов экспу не дают?" );
        break;
    case 8:
        cr.Say( SAY_SOCIAL, "если новичку повезет игроки-охранники подойдут и объяснят правила еще раз" );
        break;
    case 9:
        cr.Say( SAY_SOCIAL, "но в большинстве случаев новичка просто пристрелят за неуважение к чужой игре или прогонят" );
        if( !valid( lol ) )
        {
            cr.StatBase[ ST_VAR1 ] = 0;
            return 0;
        }
        if( !valid( guard ) )
        {
            cr.StatBase[ ST_VAR1 ] = 0;
            return 0;
        }
        if( !valid( guard2 ) )
        {
            cr.StatBase[ ST_VAR1 ] = 0;
            return 0;
        }
        guard2.Say( SAY_NORM, "опять эти зараженные" );
        AddAttackPlane( guard, 0, lol, true );
        AddAttackPlane( guard2, 0, lol, true );
        break;
    case 10:
        cr.Say( SAY_SOCIAL, "мораль - НЕИГРОВАЯ РЕЧЬ ЗАПРЕЩЕНА, хотите спросит что-то по механике - спрашивайте шепотом или у гейм-мастера" );
        break;
    case 11:
        cr.Say( SAY_SOCIAL, "нарушение номер 2 - метагейм, использование информации, полученной неигровыми способами, во вред отыгрышу" );
        if( valid( lol ) )
            DeleteNpc( lol );
        break;
    case 12:
        cr.Say( SAY_SOCIAL, "например игрок 1 прочитал квенту игрока 2, где тот упоминает о тайном убийстве человека без свидетелей" );
        break;
    case 13:
        cr.Say( SAY_SOCIAL, "и несмотря на то, что персонаж игрока 1 по сюжету ничего не знает о убийстве, все равно обвиняет персонажа игрока 2" );
        break;
    case 14:
        cr.Say( SAY_SOCIAL, "некритичный метагейм почти не преследуется Мастерами, но другие игроки перестанут с вами играть и постараются избавиться от вас, при таком нарушении" );
        break;
    case 15:
        cr.Say( SAY_SOCIAL, "нарушение номер 3 - несоответствие роли или бредоотыгрыш" );
        break;
    case 16:
        cr.Say( SAY_SOCIAL, "если примитивный дикарь вдруг начинает рассказывать о анклаве или обычный стрелок-наемник вдруг изобретает лекарство от болезни" );
        break;
    case 17:
        cr.Say( SAY_SOCIAL, "или что-то еще, явно не вписывающееся в характер или образ персонажа, это встречается неприятием отыгрыша и в крайних случаях баном персонажа" );
        break;
    case 19:
        cr.Say( SAY_SOCIAL, "нарушение номер 4 - необоснованные убийства и пауэргейминг" );
        break;
    case 20:
        cr.Say( SAY_SOCIAL, "если вас кто-то убил без причины и отыгрыша можете смело звать Мастеров через $help или позвать в Discord");
        break;
    case 21:
        cr.Say( SAY_SOCIAL, "не забудьте сделать скриншот (F3) и сохранить лог (F2), если имело место нарушение вас воскресят, а виновников забанят" );
        break;
    case 22:
        cr.Say( SAY_SOCIAL, "с другой стороны если вы будучи безоружным хамили, неподчинялись и оскорбляли человека с пушкой, у него полное право пристрелить вас" );
        break;
    case 23:
        cr.Say( SAY_SOCIAL, "к пауэргеймингу относят стиль игры целиком и полностью направленный на боевое доминирование над другими игроками" );
        break;
    case 24:
        cr.Say( SAY_SOCIAL, "как пример - игровой клан, координирующиеся через голосовую связь, сгребающий лучшую доступную броню и оружие с целью быть лучшей пвп организацией на сервере" );
        break;
    case 25:
        cr.Say( SAY_SOCIAL, "или манчкин, прокачивающий персонажа для убийств на несбалансированном элементе механики игры" );
        break;
    case 26:
        cr.Say( SAY_SOCIAL, "при низком уровне отыгрыша подобное запрещено и будет корректироваться Мастерами" );
        break;
    case 27:
        cr.Say( SAY_SOCIAL, "Помните, главное правило сервера - вести себя соответственно роли, по возможности не перпятствуя игре других игроков" );
        break;
    case 28:
        cr.Say( SAY_SOCIAL, "Обучающей курс основных правил сервера закончен, профильные правила поведения вы узнаете из курса специализаций" );
        if( valid( guard ) )
            DeleteNpc( guard );
        if( valid( guard2 ) )
            DeleteNpc( guard2 );
        if( valid( lol ) )
            DeleteNpc( lol );
        break;
    }
    if( cr.StatBase[ ST_VAR1 ] == 3 )
    {
        Map @ map = cr.GetMap();
        Critter@ guard = map.AddNpc( 48, cr.HexX - 9, cr.HexY - 2, 2, null, null, null );
        Critter@ guard2 = map.AddNpc( 48, cr.HexX - 13, cr.HexY - 2, 2, null, null, null );
        Critter@ lol = map.AddNpc( 92, cr.HexX - 12, cr.HexY + 10, 5, null, null, null );
        lol.StatBase[ ST_VAR1 ] = 106;
        guard.StatBase[ ST_VAR1 ] = 106;
        guard2.StatBase[ ST_VAR1 ] = 106;
        cr.StatBase[ ST_VAR2 ] = guard.Id;
        cr.StatBase[ ST_VAR3 ] = guard2.Id;
        cr.StatBase[ ST_VAR4 ] = lol.Id;
        guard.StatBase[ ST_VAR1 ] = 100;
        guard2.StatBase[ ST_VAR1 ] = 100;
        lol.StatBase[ ST_VAR1 ] = 100;
		guard.ModeBase[ MODE_NO_STEAL ] = 1;
		guard.ModeBase[ MODE_NO_LOOT ] = 1;	
		guard2.ModeBase[ MODE_NO_STEAL ] = 1;
		guard2.ModeBase[ MODE_NO_LOOT ] = 1;
		lol.ModeBase[ MODE_NO_STEAL ] = 1;
		lol.ModeBase[ MODE_NO_LOOT ] = 1;
        guard.AddItem( PID_HUNTING_RIFLE, 1 );
        guard2.AddItem( PID_HUNTING_RIFLE, 1 );
        guard.ModeBase[ MODE_NO_WALK ] = 1;
        guard.ModeBase[ MODE_NO_RUN ] = 1;
        guard2.ModeBase[ MODE_NO_WALK ] = 1;
        guard2.ModeBase[ MODE_NO_RUN ] = 1;
        guard.PerkBase[ PE_BONUS_RANGED_DAMAGE ] = 100;
        guard2.PerkBase[ PE_BONUS_RANGED_DAMAGE ] = 100;
        guard.SkillBase[ SK_SMALL_GUNS ] = 300;
        guard2.SkillBase[ SK_SMALL_GUNS ] = 300;
        lol.ModeBase[ MODE_NO_HOME ] = 1;
        cr.StatBase[ ST_VAR1 ]++;
        return 8 * TIME_MUL;
    }
    cr.StatBase[ ST_VAR1 ]++;
    if( cr.StatBase[ ST_VAR1 ] >= 30 )
    {
        cr.StatBase[ ST_VAR1 ] = 0;
        return 0;
    }
    return 6 * TIME_MUL;
}

uint cte_roles( Critter& cr, int identifier, uint& rate )  // Вступление  рекламной части обучения
{
    switch( cr.StatBase[ ST_VAR1 ] )
    {
    case 0:
        cr.Say( SAY_SOCIAL, "приветствую на курсе типовых профилей профессий и специализаций обитателей пустоши" );
        break;
    case 1:
        cr.Say( SAY_SOCIAL, "в наличии курсы - доктора, работорговца, траппера, рейдера, стража, вора и взломщика" );
        break;
    case 2:
        cr.Say( SAY_SOCIAL, "чуть далее стоят голографические изображения представителей крупных фракций, организаций и общин" );
        break;
    case 3:
        cr.Say( SAY_SOCIAL, "просто подойдите к интересующему вас курсу и активируйте его" );
        break;
    }
    cr.StatBase[ ST_VAR1 ]++;
    if( cr.StatBase[ ST_VAR1 ] >= 5 )
    {
        cr.StatBase[ ST_VAR1 ] = 0;
        return 0;
    }
    return 6 * TIME_MUL;
}

uint cte_roles_doctor( Critter& cr, int identifier, uint& rate )  // Обучение основам лечения
{
    Critter@ guard = GetCritter( cr.Stat[ ST_VAR2 ] );
    Critter@ guard2 = GetCritter( cr.Stat[ ST_VAR3 ] );
    Critter@ thief = GetCritter( cr.Stat[ ST_VAR4 ] );
    switch( cr.StatBase[ ST_VAR1 ] )
    {
    case 0:
        cr.Say( SAY_SOCIAL, "приветствую на курсе обучния основам медицины и лечения травм" );
        break;
    }
    cr.StatBase[ ST_VAR1 ]++;
    if( cr.StatBase[ ST_VAR1 ] >= 12 )
    {
        cr.StatBase[ ST_VAR1 ] = 0;
        return 0;
    }
    return 6 * TIME_MUL;
}

uint cte_roles_thief( Critter& cr, int identifier, uint& rate )  // Обучение основам воровства
{
    Critter@ guard = GetCritter( cr.Stat[ ST_VAR2 ] );
    Critter@ guard2 = GetCritter( cr.Stat[ ST_VAR3 ] );
    Critter@ thief = GetCritter( cr.Stat[ ST_VAR4 ] );
    switch( cr.StatBase[ ST_VAR1 ] )
    {
    case 0:
        cr.Say( SAY_SOCIAL, "приветствую на курсе обучния основам краж и взлома замков" );
        break;
    case 1:
        cr.Say( SAY_SOCIAL, "курс 1, карманничество" );
        break;
    case 2:
        cr.Say( SAY_SOCIAL, "прежде всего помните, что воровство это прежде всего искусство отвлечения внимания" );
        break;
    case 3:
        cr.Say( SAY_SOCIAL, "правило 1 - будьте незаметными" );
        break;
    }
    cr.StatBase[ ST_VAR1 ]++;
    if( cr.StatBase[ ST_VAR1 ] >= 12 )
    {
        cr.StatBase[ ST_VAR1 ] = 0;
        return 0;
    }
    return 6 * TIME_MUL;
}

uint cte_roles_raider( Critter& cr, int identifier, uint& rate )  // Обучение основам грабежа
{
    Critter@ raider = GetCritter( cr.Stat[ ST_VAR2 ] );
    Critter@ raider2 = GetCritter( cr.Stat[ ST_VAR3 ] );
    Critter@ lol = GetCritter( cr.Stat[ ST_VAR4 ] );
    Item@[] items;	
    switch( cr.StatBase[ ST_VAR1 ] )
    {
    case 0:
        Clear_NPC( cr, 113 );
        cr.Say( SAY_SOCIAL, "я расскажу тебе о Бандитах, Нападениях и Грабеже. Правилах того как ведуться подобные действия" );
        break;
    case 1:
        cr.Say( SAY_SOCIAL, "допустим тебе не интересно быть мирным горожанином, с их проблемами и бытовухой" );
        break;
    case 2:
        cr.Say( SAY_SOCIAL, "ты считаешь, что пустошь это дикий мир, где правят насилие и …" );
        break;
    case 3:
        cr.Say( SAY_SOCIAL, "… в общем насилее." );
        break;
    case 4:
        cr.Say( SAY_SOCIAL, "помни, что одиночка скорее жертва, чем хищник, стая страшнее, сильнее и эффективнее, найди себе напарника" );
        break;
    case 5:
        cr.Say( SAY_SOCIAL, "теперь приступим к грабежу… допустим случайного встречного…" );
        break;
    case 6:
        if( !valid( lol ) )
        {
            cr.StatBase[ ST_VAR1 ] = 0;
            return 0;
        }
        if( !valid( raider ) )
        {
            cr.StatBase[ ST_VAR1 ] = 0;
            return 0;
        }
        if( !valid( raider2 ) )
        {
            cr.StatBase[ ST_VAR1 ] = 0;
            return 0;
        }
        lol.Say( SAY_NORM, "Приветствую, вы что-то хотели?" );
        raider.SkillBase[ SK_SMALL_GUNS ] = 300;
        raider2.SkillBase[ SK_SMALL_GUNS ] = 300;
        raider.PerkBase[ PE_BONUS_RANGED_DAMAGE ] = 100;
        raider2.PerkBase[ PE_BONUS_RANGED_DAMAGE ] = 100;
        AddAttackPlane( raider, 0, lol, true );
        AddAttackPlane( raider2, 0, lol, true );
        break;
    case 7:
        cr.Say( SAY_SOCIAL, "каждый кого вы встречаете это человек, он писал квенту, он личность, не стоит пренебрегать другими. Это может плохо кончиться…" );
        break;
    case 8:
        cr.Say( SAY_SOCIAL, "молчаливые и примитивные убийства незнакомцев тут неприемлимы" );
        if( !valid( lol ) || !valid( raider ) || !valid( raider2 ) )
        {
            cr.StatBase[ ST_VAR1 ] = 0;
            return 0;
        }
        raider.Say( SAY_EMOTE_ON_HEAD, "Нарушение правил сервера 11 и 9" );
        raider2.Say( SAY_EMOTE_ON_HEAD, "Нарушение правил сервера 11 и 9" );
        raider.GetItems( SLOT_INV, items );
        raider.GetItems( SLOT_HAND1, items );
        raider.GetItems( SLOT_HAND2, items );
        raider2.GetItems( SLOT_INV, items );
        raider2.GetItems( SLOT_HAND1, items );
        raider2.GetItems( SLOT_HAND2, items );
        DeleteItems( items );		
        raider.ToDead( ANIM2_DEAD_PULSE, cr );
        raider2.ToDead( ANIM2_DEAD_PULSE, cr );
        break;
    case 9:
        cr.Say( SAY_SOCIAL, "отмотаем ситуацию назад" );
        break;
    case 10:
        if( !valid( lol ) || !valid( raider ) || !valid( raider ) )
        {
            cr.StatBase[ ST_VAR1 ] = 0;
            return 0;
        }
        lol.Say( SAY_NORM, "Приветствую, вы что-то хотели?" );
        break;
    case 11:
        raider.Say( SAY_NORM, "А сам не догадываешься? Отдавай Деньги, документы, оружие!" );
        break;
    case 12:
        cr.Say( SAY_SOCIAL, "отыгрыш в стиле рембо в заведомо проигрышной ситуации, молчаливые попытки убежать и подобный отказ взаимодействовать не приведет ни к чему хорошему" );
        if( !valid( lol ) || !valid( raider ) || !valid( raider2 ) )
        {
            cr.StatBase[ ST_VAR1 ] = 0;
            return 0;
        }
        lol.Say( SAY_NORM, "идите в жопу" );
        raider.SkillBase[ SK_SMALL_GUNS ] = 300;
        raider2.SkillBase[ SK_SMALL_GUNS ] = 300;
        lol.ModeBase[ MODE_NO_WALK ] = 0;
        lol.ModeBase[ MODE_NO_RUN ] = 0;
        AddWalkPlane( lol, 1, lol.HexX - 12, lol.HexY + 20, 3, true, 0 );
        cr.StatBase[ ST_VAR1 ]++;
        return 1 * TIME_MUL;
    case 13:
        if( !valid( lol ) || !valid( raider ) || !valid( raider2 ) )
        {
            cr.StatBase[ ST_VAR1 ] = 0;
            return 0;
        }
        AddAttackPlane( raider, 0, lol, true );
        AddAttackPlane( raider2, 0, lol, true );
        cr.StatBase[ ST_VAR1 ]++;
        return 4 * TIME_MUL;
    case 14:
        cr.Say( SAY_SOCIAL, "в такой ситуации рейдеры вполне вправе убить рембо, но хорошим тоном считается, все же, просто ограбить его");
        if( !valid( lol ) || !valid( raider ) || !valid( raider2 ) )
        {
            cr.StatBase[ ST_VAR1 ] = 0;
            return 0;
        }
        raider.ErasePlane( -1, true );
        raider.ClearEnemyStack();
        raider.SetDir( GetDirection( raider.HexX, raider.HexY, lol.HexX, lol.HexY ) );
        raider2.ErasePlane( -1, true );
        raider2.ClearEnemyStack();
        raider2.SetDir( GetDirection( raider.HexX, raider.HexY, lol.HexX, lol.HexY ) );
        lol.ErasePlane( -1, true );
        lol.ClearEnemyStack();
        lol.ToKnockout( KNOCKOUT_ANIM2_DEFAULT( ( Random( 0, 1 ) == 1 ) ), 100, lol.HexX, lol.HexY );
        break;
    case 15:
        cr.Say( SAY_SOCIAL, "при совсем неадекватном поведении ограбляемого, которое привело к его смерти, сохраните лог и скриншот на случай претензий (F2 и F3)" );
        Clear_NPC( cr, 113 );
        break;
    case 16:
        cr.Say( SAY_SOCIAL, "отмотаем ситуацию назад" );
        break;
    case 17:
        if( !valid( lol ) || !valid( raider ) || !valid( raider2 ) )
        {
            cr.StatBase[ ST_VAR1 ] = 0;
            return 0;
        }
        lol.Say( SAY_NORM, "Приветствую, вы что-то хотели?" );
        break;
    case 18:
        raider.Say( SAY_NORM, "А сам не догадываешься? Отдавай Деньги, документы, оружие!" );
        break;
    case 19:
        cr.Say( SAY_SOCIAL, "хорошим тоном считается показывать *эмоциями* явно видимые и значимые действия" );
        if( !valid( lol ) || !valid( raider ) || !valid( raider2 ) )
        {
            cr.StatBase[ ST_VAR1 ] = 0;
            return 0;
        }
        lol.Say( SAY_EMOTE, "достает Рацию" );
        break;
    case 20:
        cr.Say( SAY_SOCIAL, "дайте игрокам шанс, не стоит сразу стрелять…" );
        if( !valid( lol ) || !valid( raider ) || !valid( raider2 ) )
        {
            cr.StatBase[ ST_VAR1 ] = 0;
            return 0;
        }
        raider.Say( SAY_NORM, "Если ты сейчас же не заткнешь свою говорилку, я тебя заткну…" );
        lol.Say( SAY_EMOTE, "бросил Рацию" );
        break;
    case 21:
        cr.Say( SAY_SOCIAL, "не стоит тут задавать глупых вопросов, ведь ваша жизнь на волоске, и выслушивать их тоже не стоит…" );
        if( !valid( lol ) || !valid( raider ) || !valid( raider2 ) )
        {
            cr.StatBase[ ST_VAR1 ] = 0;
            return 0;
        }
        lol.Say( SAY_NORM, "что прям все деньги отдавать, может вам 1000 хватит?" );
        break;
    case 22:
        if( !valid( lol ) || !valid( raider ) || !valid( raider2 ) )
        {
            cr.StatBase[ ST_VAR1 ] = 0;
            return 0;
        }
        raider.SkillBase[ SK_SMALL_GUNS ] = 300;
        raider2.SkillBase[ SK_SMALL_GUNS ] = 300;
        AddAttackPlane( raider2, 0, lol, true );
        cr.StatBase[ ST_VAR1 ]++;
        return 5;
    case 23:
        if( !valid( lol ) || !valid( raider ) || !valid( raider ) )
        {
            cr.StatBase[ ST_VAR1 ] = 0;
            return 0;
        }
        lol.ToKnockout( KNOCKOUT_ANIM2_DEFAULT( ( Random( 0, 1 ) == 1 ) ), 15, lol.HexX, lol.HexY );
        raider.ErasePlane( -1, true );
        raider.ClearEnemyStack();
        raider.SetDir( GetDirection( raider.HexX, raider.HexY, lol.HexX, lol.HexY ) );
        raider2.ErasePlane( -1, true );
        raider2.ClearEnemyStack();
        raider2.SetDir( GetDirection( raider.HexX, raider.HexY, lol.HexX, lol.HexY ) );
        raider2.ModeBase[ MODE_NO_WALK ] = 0;
        raider2.ModeBase[ MODE_NO_RUN ] = 0;
        lol.ErasePlane( -1, true );
        lol.ClearEnemyStack();
        break;
    case 24:
        cr.Say( SAY_SOCIAL, "собственно клиент готов сотрудничать" );
        if( !valid( lol ) || !valid( raider ) || !valid( raider2 ) )
        {
            cr.StatBase[ ST_VAR1 ] = 0;
            return 0;
        }
        raider.Say( SAY_NORM, "По пререкайся мне тут еще…" );
        AddWalkPlane( raider2, 1, lol.HexX - 1, lol.HexY - 1, 3, false, 0 );
        break;
    case 25:
        cr.Say( SAY_SOCIAL, "подумайте, что именно нужно вашей банде, к примеру  забирать все, даже мусор глупо" );
        if( !valid( lol ) || !valid( raider ) || !valid( raider2 ) )
        {
            cr.StatBase[ ST_VAR1 ] = 0;
            return 0;
        }
        raider2.Say( SAY_EMOTE, "обшаривает" );
        raider.ModeBase[ MODE_NO_WALK ] = 0;
        raider.ModeBase[ MODE_NO_RUN ] = 0;
        break;
    case 26:
        if( !valid( lol ) || !valid( raider ) || !valid( raider2 ) )
        {
            cr.StatBase[ ST_VAR1 ] = 0;
            return 0;
        }
        raider.Say( SAY_NORM, "Уходим…" );
        AddWalkPlane( raider, 1, cr.HexX - 12, cr.HexY - 20, 3, false, 0 );
        AddWalkPlane( raider2, 1, cr.HexX - 12, cr.HexY - 20, 3, false, 0 );
        break;
    case 27:
        cr.Say( SAY_SOCIAL, "помните - жизнь самое ценное, что у вас есть, приятного пути" );
        Clear_NPC( cr, 113 );
        break;
    }
    if( cr.StatBase[ ST_VAR1 ] == 3 )
    {
        Map @ map = cr.GetMap();
        Critter@ raider = map.AddNpc( 217, cr.HexX - 9, cr.HexY - 2, 2, null, null, null );
		raider.ModeBase[ MODE_NO_STEAL ] = 1;
		raider.ModeBase[ MODE_NO_LOOT ] = 1;		
        raider.StatBase[ ST_VAR1 ] = 113;
        cr.StatBase[ ST_VAR2 ] = raider.Id;
        if( valid( raider ) )
            raider.AddItem( PID_HUNTING_RIFLE, 1 );
        raider.ModeBase[ MODE_NO_WALK ] = 1;
        raider.ModeBase[ MODE_NO_RUN ] = 1;
        cr.StatBase[ ST_VAR1 ]++;
        return 8 * TIME_MUL;
    }
    else if( cr.StatBase[ ST_VAR1 ] == 4 )
    {
        Map @ map = cr.GetMap();
        Critter@ raider2 = map.AddNpc( 30, cr.HexX - 13, cr.HexY - 2, 2, null, null, null );
        raider2.StatBase[ ST_VAR1 ] = 113;
		raider2.ModeBase[ MODE_NO_STEAL ] = 1;
		raider2.ModeBase[ MODE_NO_LOOT ] = 1;
        cr.StatBase[ ST_VAR3 ] = raider2.Id;
        if( valid( raider2 ) )
            raider2.AddItem( PID_HUNTING_RIFLE, 1 );
        raider2.ModeBase[ MODE_NO_WALK ] = 1;
        raider2.ModeBase[ MODE_NO_RUN ] = 1;
        cr.StatBase[ ST_VAR1 ]++;
        return 8 * TIME_MUL;
    }
    else if( cr.StatBase[ ST_VAR1 ] == 5 )
    {
        Map @ map = cr.GetMap();
        Critter@ lol = map.AddNpc( 92, cr.HexX - 12, cr.HexY + 8, 5, null, null, null );
        lol.StatBase[ ST_VAR1 ] = 113;
		lol.ModeBase[ MODE_NO_STEAL ] = 1;
		lol.ModeBase[ MODE_NO_LOOT ] = 1;
        cr.StatBase[ ST_VAR4 ] = lol.Id;
        lol.ModeBase[ MODE_NO_WALK ] = 1;
        lol.ModeBase[ MODE_NO_RUN ] = 1;
        cr.StatBase[ ST_VAR1 ]++;
        return 8 * TIME_MUL;
    }
    else if( cr.StatBase[ ST_VAR1 ] == 9 )
    {
        Clear_NPC( cr, 113 );
        Map @ map = cr.GetMap();
        Critter@ raider = map.AddNpc( 217, cr.HexX - 9, cr.HexY - 2, 2, null, null, null );
        Critter@ raider2 = map.AddNpc( 30, cr.HexX - 13, cr.HexY - 2, 2, null, null, null );
        Critter@ lol = map.AddNpc( 92, cr.HexX - 12, cr.HexY + 8, 5, null, null, null );
        lol.StatBase[ ST_VAR1 ] = 113;
        raider.StatBase[ ST_VAR1 ] = 113;
        raider2.StatBase[ ST_VAR1 ] = 113;
        cr.StatBase[ ST_VAR2 ] = raider.Id;
        cr.StatBase[ ST_VAR3 ] = raider2.Id;
        cr.StatBase[ ST_VAR4 ] = lol.Id;
        if( valid( raider2 ) )
            raider2.AddItem( PID_HUNTING_RIFLE, 1 );
        if( valid( raider ) )
            raider.AddItem( PID_HUNTING_RIFLE, 1 );
        raider.ModeBase[ MODE_NO_WALK ] = 1;
        raider.ModeBase[ MODE_NO_RUN ] = 1;
		raider.ModeBase[ MODE_NO_STEAL ] = 1;
		raider.ModeBase[ MODE_NO_LOOT ] = 1;
        raider2.ModeBase[ MODE_NO_WALK ] = 1;
        raider2.ModeBase[ MODE_NO_RUN ] = 1;
		raider2.ModeBase[ MODE_NO_STEAL ] = 1;
		raider2.ModeBase[ MODE_NO_LOOT ] = 1;
        lol.ModeBase[ MODE_NO_WALK ] = 1;
        lol.ModeBase[ MODE_NO_RUN ] = 1;
		lol.ModeBase[ MODE_NO_STEAL ] = 1;
		lol.ModeBase[ MODE_NO_LOOT ] = 1;
        cr.StatBase[ ST_VAR1 ]++;
        return 8 * TIME_MUL;
    }
    else if( cr.StatBase[ ST_VAR1 ] == 16 )
    {
        Map @ map = cr.GetMap();
        Critter@ raider = map.AddNpc( 217, cr.HexX - 9, cr.HexY - 2, 2, null, null, null );
        Critter@ raider2 = map.AddNpc( 30, cr.HexX - 13, cr.HexY - 2, 2, null, null, null );
        Critter@ lol = map.AddNpc( 92, cr.HexX - 12, cr.HexY + 8, 5, null, null, null );
        cr.StatBase[ ST_VAR2 ] = raider.Id;
        cr.StatBase[ ST_VAR3 ] = raider2.Id;
        cr.StatBase[ ST_VAR4 ] = lol.Id;
        if( valid( raider2 ) )
            raider2.AddItem( PID_HUNTING_RIFLE, 1 );
        if( valid( raider ) )
            raider.AddItem( PID_HUNTING_RIFLE, 1 );
        raider.ModeBase[ MODE_NO_WALK ] = 1;
        raider.ModeBase[ MODE_NO_RUN ] = 1;
		raider.ModeBase[ MODE_NO_STEAL ] = 1;
		raider.ModeBase[ MODE_NO_LOOT ] = 1;
        raider2.ModeBase[ MODE_NO_WALK ] = 1;
        raider2.ModeBase[ MODE_NO_RUN ] = 1;
		raider2.ModeBase[ MODE_NO_STEAL ] = 1;
		raider2.ModeBase[ MODE_NO_LOOT ] = 1;
        lol.ModeBase[ MODE_NO_WALK ] = 1;
        lol.ModeBase[ MODE_NO_RUN ] = 1;
		lol.ModeBase[ MODE_NO_STEAL ] = 1;
		lol.ModeBase[ MODE_NO_LOOT ] = 1;
        raider.ModeBase[ MODE_NO_HOME ] = 1;
        raider2.ModeBase[ MODE_NO_HOME ] = 1;
        lol.StatBase[ ST_VAR1 ] = 113;
        raider.StatBase[ ST_VAR1 ] = 113;
        raider2.StatBase[ ST_VAR1 ] = 113;
        cr.StatBase[ ST_VAR1 ]++;
        return 8 * TIME_MUL;
    }
    cr.StatBase[ ST_VAR1 ]++;
    if( cr.StatBase[ ST_VAR1 ] >= 29 )
    {
        cr.StatBase[ ST_VAR1 ] = 0;
        return 0;
    }
    return 6 * TIME_MUL;
}

uint cte_factions_enclave( Critter& cr, int identifier, uint& rate )  // описание Анклава
{
    switch( cr.StatBase[ ST_VAR1 ] )
    {
    case 0:
        cr.Say( SAY_SOCIAL, "приветствую, я представитель Анклава" );
        break;
    case 1:
        cr.Say( SAY_SOCIAL, "а теперь забудь, что слышал это название" );
        break;
    case 2:
        cr.Say( SAY_SOCIAL, "все, кто действительно что-то знал о нас были уничтожены" );
        break;
    case 3:
        cr.Say( SAY_SOCIAL, "если кто-то говорит, что слышал о нас, то он почти наверняка лжет" );
        break;
    case 4:
        cr.Say( SAY_SOCIAL, "если кто-то рассказывает, что он был одним из нас, никто в это не поверит" );
        break;
    case 5:
        cr.Say( SAY_SOCIAL, "если ты кому-нибудь расскажешь, что слышал о нас, тебя заклеймят лжецом" );
        break;
    case 6:
        cr.Say( SAY_SOCIAL, "[в игре неуместны сведения о Анклаве, а играть его представителей можно только с разрешения Мастеров игры]" );
        break;
    case 7:
        cr.Say( SAY_SOCIAL, "прощай, приятного пути" );
        break;
    }
    cr.StatBase[ ST_VAR1 ]++;
    if( cr.StatBase[ ST_VAR1 ] >= 8 )
    {
        cr.StatBase[ ST_VAR1 ] = 0;
        return 0;
    }
    return 6 * TIME_MUL;
}

uint cte_factions_BS( Critter& cr, int identifier, uint& rate )  // описание Братства Стали
{
    switch( cr.StatBase[ ST_VAR1 ] )
    {
    case 0:
        cr.Say( SAY_SOCIAL, "приветствую, я представитель Братства Стали" );
        break;
    case 1:
        cr.Say( SAY_SOCIAL, "мы являемся хранителями и защитниками довоенных технологий" );
        break;
    case 2:
        cr.Say( SAY_SOCIAL, "наша цель - спасти наследие старого мира и защитить мир от него" );
        break;
    case 3:
        cr.Say( SAY_SOCIAL, "но люди лживы и завистливы, нас неоднократно предавали, поэтому мы изолировали себя от мира" );
        break;
    case 4:
        cr.Say( SAY_SOCIAL, "у нас есть свой кодекс, свои цели и они не касаются тебя" );
        break;
    case 5:
        cr.Say( SAY_SOCIAL, "мы не принимаем чужаков и не позволяем дезертировать своим" );
        break;
    case 6:
        cr.Say( SAY_SOCIAL, "попытаешся наложить руки на технологии не предназначенные тебе и мы тебя найдем" );
        break;
    case 7:
        cr.Say( SAY_SOCIAL, "[играть представителей БС можно только с разрешения Мастеров игры]" );
        break;
    case 8:
        cr.Say( SAY_SOCIAL, "прощай, приятного пути" );
        break;
    }
    cr.StatBase[ ST_VAR1 ]++;
    if( cr.StatBase[ ST_VAR1 ] >= 10 )
    {
        cr.StatBase[ ST_VAR1 ] = 0;
        return 0;
    }
    return 6 * TIME_MUL;
}

uint cte_factions_NCR( Critter& cr, int identifier, uint& rate )
{
    switch( cr.StatBase[ ST_VAR1 ] )
    {
    case 0:
        cr.Say( SAY_SOCIAL, "приветствую, я представитель Новой Калифорнийской Республики далеко на юго-востоке" );
        break;
    case 1:
        cr.Say( SAY_SOCIAL, "НКР довольно далеко отсюда, и хотя сюда иногда проходят наши караваны" );
        break;
    case 2:
        cr.Say( SAY_SOCIAL, "наше присутствие на этой территории минимально" );
        break;
    case 3:
        cr.Say( SAY_SOCIAL, "пока что у нас хватает и своих забот: рейдеры, дикие твари, болезни, политики..." );
        break;
    case 4:
        cr.Say( SAY_SOCIAL, "[НКР недостижимо в игре и туда не попасть кроме как с помощью Мастеров игры]" );
        break;
    case 5:
        cr.Say( SAY_SOCIAL, "удачи путник, возможно когда-нибудь мы свяжемся с тобой, если нам понадобятся твои услуги" );
        break;
    }
    cr.StatBase[ ST_VAR1 ]++;
    if( cr.StatBase[ ST_VAR1 ] >= 12 )
    {
        cr.StatBase[ ST_VAR1 ] = 0;
        return 0;
    }
    return 6 * TIME_MUL;
}

uint cte_factions_NewReno( Critter& cr, int identifier, uint& rate )
{
    switch( cr.StatBase[ ST_VAR1 ] )
    {
    case 0:
        cr.Say( SAY_SOCIAL, "приветствую, я из Нью-Рено" );
        break;
    case 1:
        cr.Say( SAY_SOCIAL, "сейчас там разгар конфликта мафиозных семей" );
        break;
    case 2:
        cr.Say( SAY_SOCIAL, "тебе там делать нечего" );
        break;
    case 3:
        cr.Say( SAY_SOCIAL, "[Нью-Рено недостижимо в игре и туда не попасть кроме как с помощью Мастеров игры]" );
        break;
    case 4:
        cr.Say( SAY_SOCIAL, "удачи путник" );
        break;
    }
    cr.StatBase[ ST_VAR1 ]++;
    if( cr.StatBase[ ST_VAR1 ] >= 12 )
    {
        cr.StatBase[ ST_VAR1 ] = 0;
        return 0;
    }
    return 6 * TIME_MUL;
}

uint cte_factions_Modoc( Critter& cr, int identifier, uint& rate )
{
    switch( cr.StatBase[ ST_VAR1 ] )
    {
    case 0:
        cr.Say( SAY_SOCIAL, "приветствую, я расскажу тебе о Модоке" );
        break;
    case 1:
        cr.Say( SAY_SOCIAL, "тяжелое время сейчас, многие города и поселения пребывают в упадке" );
        break;
    case 2:
        cr.Say( SAY_SOCIAL, "однако Модок смог развиться в город-крепость и стать почти последним безопасным оплотом цивилизации в окрестностях" );
        break;
    case 3:
        cr.Say( SAY_SOCIAL, "сейчас туда стекаются беженцы из менее благополучных земель" );
        break;
    case 4:
        cr.Say( SAY_SOCIAL, "не ожидай, что тебя просто так пустят внутрь, ты должен будешь доказать свою полезность городу" );
        break;
    case 5:
        cr.Say( SAY_SOCIAL, "или найти какой-то иной способ пробраться внутрь" );
        break;
    case 6:
        cr.Say( SAY_SOCIAL, "иначе, если ты все еще ищешь убежища, тебе придется обитать на Свалке на востоке или в Форте к югу" );
        break;
    case 7:
        cr.Say( SAY_SOCIAL, "удачи путник, она тебе понадобится" );
        break;
    }
    cr.StatBase[ ST_VAR1 ]++;
    if( cr.StatBase[ ST_VAR1 ] >= 12 )
    {
        cr.StatBase[ ST_VAR1 ] = 0;
        return 0;
    }
    return 6 * TIME_MUL;
}
