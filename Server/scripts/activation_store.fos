#define STORE_ID    ( 777777 )

void save( Critter& player, int param0, int param1, int param2 )
{
    if( !player.IsLife() || player.IsKnockout() )
    {
        player.Say( SAY_NETMSG, "Персонаж мертв или в отключке." );
        return;
    }

    if( player.IsBusy() )
    {
        player.Say( SAY_NETMSG, "Персонаж занят." );
        return;
    }

    int var = act_var_get( player );

    if( var != ACT_CODE && var != ACT_GM )
    {
        player.Say( SAY_NETMSG, "Персонаж не активирован." );
        return;
    }

    file f;

    if( !( f.open( "player_" + player.Id + ".txt", "w" ) >= 0 ) )
    {
        Log( "activation@save: Ошибка открытия файла (" + player.Id + ")." );
        return;
    }

    f.setPos( 0 );

    string@ login = GetPlayerName( player.Id );
	
    f.writeString( login + "\n" );

    string s_code;

    activation_get_code( player, STORE_ID, s_code );

    f.writeString( s_code + "\n" );

    f.writeString( "\n" + STAT_COUNT );

    for( uint i = STAT_BEGIN; i <= STAT_END; i++ )
    {
        f.writeString( " " + player.StatBase[ i ] );
    }

    f.writeString( "\n" + SKILL_COUNT );

    for( uint i = SKILL_BEGIN; i <= SKILL_END; i++ )
    {
        f.writeString( " " + player.SkillBase[ i ] );
    }

    f.writeString( "\n" + 4 );

    for( uint i = TAG_SKILL1; i <= TAG_SKILL4; i++ )
    {
        f.writeString( " " + player.TagBase[ i ] );
    }

    f.writeString( "\n" + PERK_COUNT );

    for( uint i = PERK_BEGIN; i <= PERK_END; i++ )
    {
        f.writeString( " " + player.PerkBase[ i ] );
    }

    f.writeString( "\n" + TRAIT_COUNT );

    for( uint i = TRAIT_BEGIN; i <= TRAIT_END; i++ )
    {
        f.writeString( " " + player.TraitBase[ i ] );
    }


    f.writeString( "\n" );

    Item@[] items;

    uint   c1 = 0;

    string s_item;

    if( player.GetItems( -1, items ) > 0 )
    {
        for( uint i = 0; i < items.length(); i++ )
        {
            Item@ item = items[ i ];
            if( !valid( item ) )
                continue;
            uint8 type = item.GetType();
            if( type != ITEM_ARMOR && type != ITEM_WEAPON && type != ITEM_AMMO && type != ITEM_MISC )
                continue;
            s_item += " " + item.GetProtoId() + " " + item.GetCount();
            c1 += 1;
        }
    }

    f.writeString( "\n" + c1 );

    f.writeString( s_item );

    f.close();

    player.Say( SAY_NETMSG, "Для восстановления параметров персонажа после вайпа используйте код:" );
    player.Say( SAY_NETMSG, s_code );

    Log( "Сохранен персонаж #" + player.Id );
}


void unsafe_save( Critter& player, int param0, int param1, int param2, string@ param3, int[] @ param4 )
{
    if( player.Stat[ ST_VAR5 ] > 3 )
        return;

    player.StatBase[ ST_VAR5 ] += 1;

    if( player.GetAccess() < ACCESS_TESTER )
    {
        player.Say( SAY_NETMSG, "Функция сохранения отключена." );
        return;
    }

    save( player, param0, param1, param2 );
}


void delN( string& str )
{
    uint len = str.length();
    if( len > 1 && str[ len - 1 ] == '\n' )
        str.resize( len - 1 );
}

void restore( Critter& player, file& f )
{
    player.Say( SAY_NETMSG, "Начинаем процедуру восстановления..." );

    string s_temp;

    f.readLine( s_temp );

    if( s_temp.length() != 1 )
    {
        player.Say( SAY_NETMSG, "Файл с сохранением поврежден. Параметры и инвентарь не будут восстановлен. Обратитесь к разработчику для активации персонажа." );
        setActivation( player.Id, ACT_BLOCK, null, null, false );
        return;
    }

    string[] s_params;

//	string@[]@[] s2_params;



    for( uint i = 0; i < 5; i++ )
    {
        s_params.resize( i + 1 );
//		s2_params.resize(i+1);

        f.readLine( s_params[ i ] );
        delN( s_params[ i ] );

        string@[] @ s2_p = split( s_params[ i ], " " );

//		@s2_params[i] = s2_p;

        int  count = 0;

        uint cur_count = 0;

        switch( i )
        {
        case 0:
        {
            cur_count = STAT_COUNT;
        } break;
        case 1:
        {
            cur_count = SKILL_COUNT;
        } break;
        case 2:
        {
            cur_count = 4;
        } break;
        case 3:
        {
            cur_count = PERK_COUNT;
        } break;
        case 4:
        {
            cur_count = TRAIT_COUNT;
        } break;
        }


        if( cur_count != 0 && s2_p.length() > 0 && StrToInt( s2_p[ 0 ], count ) && count <= cur_count && count == ( s2_p.length() - 1 ) )
        {
            uint param_begin = 0;

            switch( i )
            {
            case 0:
            {
                param_begin = STAT_BEGIN;
                player.Say( SAY_NETMSG, "Восстанавливаем статы..." );
            } break;
            case 1:
            {
                param_begin = SKILL_BEGIN;
                player.Say( SAY_NETMSG, "Восстанавливаем скиллы..." );
            } break;
            case 2:
            {
                param_begin = TAG_SKILL1;
                player.Say( SAY_NETMSG, "Восстанавливаем тагнутые скиллы..." );
            } break;
            case 3:
            {
                param_begin = PERK_BEGIN;
                player.Say( SAY_NETMSG, "Восстанавливаем перки..." );
            } break;
            case 4:
            {
                param_begin = TRAIT_BEGIN;
                player.Say( SAY_NETMSG, "Восстанавливаем трейты..." );
            } break;
            }

            int param_t = 0;

            for( uint k = 0; k < count; k++ )
            {
                if( !StrToInt( s2_p[ k + 1 ], param_t ) )
                {
                    player.Say( SAY_NETMSG, "Ошибка! Один из сохраненных параметров записан неверно! (i: " + i + ", k: " + k + ")" );
                    continue;
                }

                player.ParamBase[ param_begin + k ] = param_t;
            }

            player.Say( SAY_NETMSG, "Ок." );
        }
        else
        {
            player.Say( SAY_NETMSG, "Ошибка! Что то не так с записанными параметрами! (i: " + i + ", cur_count: " + cur_count + ", count: " + count + ", length: " + s2_p.length() + ")" );
            setActivation( player.Id, ACT_BLOCK, null, null, false );
            return;
        }
    }

    if( player.Stat[ ST_BASE_CRTYPE ] == 0 )
        player.ChangeCrType( player.Stat[ ST_GENDER ] == GENDER_MALE ? CRTYPE_DEFAULT_M : CRTYPE_DEFAULT_F );
    else
        player.ChangeCrType( player.Stat[ ST_BASE_CRTYPE ] );

    player.Say( SAY_NETMSG, "Процедура восстановления параметров завершена." );

    f.readLine( s_temp );

    if( s_temp.length() != 1 )
    {
        player.Say( SAY_NETMSG, "Файл с сохранением поврежден. Инвентарь не будет восстановлен. Обратитесь к разработчику для активации персонажа." );
        setActivation( player.Id, ACT_BLOCK, null, null, false );
        return;
    }

    string s_inv;

    f.readLine( s_inv );
    delN( s_inv );

    string@[] @ s2_inv = split( s_inv, " " );

    int items_count = 0;

    if( s2_inv.length() > 0 && StrToInt( s2_inv[ 0 ], items_count ) && items_count * 2 == ( s2_inv.length() - 1 ) )
    {
        if( items_count == 0 )
        {
            player.Say( SAY_NETMSG, "Сохраненных предметов нет." );
        }
        else
        {
            player.Say( SAY_NETMSG, "Восстанавливаем инвентарь..." );

            Item@[] items;

            player.GetItems( -1, items );

            for( uint i = 0; i < items.length(); i++ )
            {
                Item@ item = items[ i ];
                if( !valid( item ) )
                    continue;
                if( item.GetProtoId() == PID_ACTIVATOR )
                    continue;

                DeleteItem( item );
            }

            int  t_pid = 0;
            int  t_count = 0;

            uint t_added = 0;

            for( uint i = 0; i < items_count; i++ )
            {
                if( !StrToInt( s2_inv[ i * 2 + 1 ], t_pid ) || !StrToInt( s2_inv[ i * 2 + 2 ], t_count ) || t_pid < 1 || t_count < 1 )
                {
                    player.Say( SAY_NETMSG, "Ошибка! Один из сохраненных предметов записан неверно! (i: " + i + ")" );
                    continue;
                }
                player.AddItem( t_pid, t_count );

                t_added += t_count;
            }

            player.Say( SAY_NETMSG, "Добавлено " + t_added + " предметов." );
        }
    }
    else
    {
        player.Say( SAY_NETMSG, "Ошибка! Что то не так с записанными предметами! (items_count: " + items_count + ", length: " + s2_inv.length() + ")" );
        setActivation( player.Id, ACT_BLOCK, null, null, false );
        return;
    }

    if( setActivation( player.Id, ACT_CODE, null, null, false ) )
    {
        player.Say( SAY_NETMSG, "Персонаж активирован. Приятной игры." );
    }
    else
    {
        player.Say( SAY_NETMSG, "Произошла ошибка при активации персонажа. Обратитесь к разработчику." );
    }
}

void pre_restore( Critter& player, int param0, int param1, int param2, string@ param3, int[] @ param4 )
{
    if( !(param4 is null) || (param3 is null) )
        return;

    if( !player.IsLife() || player.IsKnockout() )
    {
        player.Say( SAY_NETMSG, "Персонаж мертв или в отключке." );
        return;
    }

    if( player.IsBusy() )
    {
        player.Say( SAY_NETMSG, "Персонаж занят." );
        return;
    }

    int var = act_var_get( player );

    if( var == ACT_CODE && var == ACT_GM )
    {
        player.Say( SAY_NETMSG, "Персонаж уже активирован." );
        return;
    }
    else if( var != ACT_DEACT )
    {
        player.Say( SAY_NETMSG, "Функция недоступна. Ваш персонаж мертв или прошлый запуск процедуры восстановления вызвал ошибку." );
        return;
    }

    if( param0 < 1 )
    {
        player.Say( SAY_NETMSG, "Неправильный Id." );
        return;
    }

    if( param3.length() != CODE_SIZE )
    {
        player.Say( SAY_NETMSG, "Неправильная длина кода." );
        return;
    }

    file f;

    if( !( f.open( "player_" + param0 + ".txt", "r" ) >= 0 ) )
    {
        // Log("activation@save: Ошибка открытия файла ("+param0+").");
        player.Say( SAY_NETMSG, "Файл с сохранением не найден." );
        return;
    }

    f.setPos( 0 );

    if( uint( f.getSize() ) < ( 3 + CODE_SIZE + STAT_COUNT * 2 + SKILL_COUNT * 2 + 4 * 2 + PERK_COUNT * 2 + TRAIT_COUNT * 2 + 10 ) )
    {
        player.Say( SAY_NETMSG, "Файл с сохранением поврежден. Обратитесь к разработчику для активации персонажа." );
        setActivation( player.Id, ACT_BLOCK, null, null, false );
        f.close();
        return;
    }

    string@ login = GetPlayerName( player.Id );

    string  login_old;

    f.readLine( login_old );

    // string @ substring(const string &in str, int start, int length);

    delN( login_old );

    if( login_old.length() < 3 || login_old.length() > 15 )
    {
        player.Say( SAY_NETMSG, "Файл с сохранением поврежден. Обратитесь к разработчику для активации персонажа." );
        setActivation( player.Id, ACT_BLOCK, null, null, false );
        f.close();
        return;
    }

    if( login_old != login )
    {
        player.Say( SAY_NETMSG, "Имя вашего персонажа не совпадает с именем сохраненного персонажа." );
        player.Say( SAY_NETMSG, "Old: " + login_old + " New: " + login );
        f.close();
        return;
    }

    string s_code;

    f.readLine( s_code );

    delN( s_code );

    if( s_code.length() != CODE_SIZE )
    {
        player.Say( SAY_NETMSG, "Файл с сохранением поврежден. Обратитесь к разработчику для активации персонажа." );
        setActivation( player.Id, ACT_BLOCK, null, null, false );
        f.close();
        return;
    }

    if( s_code != param3 )
    {
        player.Say( SAY_NETMSG, "Неправильный код реактивации." );
        f.close();
        return;
    }


    restore( player, f );

    f.close();
}

void unsafe_restore( Critter& player, int param0, int param1, int param2, string@ param3, int[] @ param4 )
{
    if( player.Stat[ ST_VAR5 ] > 3 )
        return;

    player.StatBase[ ST_VAR5 ] += 1;

    if( player.GetAccess() < ACCESS_TESTER )
    {
        player.Say( SAY_NETMSG, "Функция восстановления отключена." );
        return;
    }

    pre_restore( player, param0, param1, param2, param3, param4 );
}
