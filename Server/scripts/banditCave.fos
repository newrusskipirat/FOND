// bandit cave

#include "_macros.fos"

#define LOC_BANDIT_CAVE    ( 7 )
#define CTE_UNSETLOC       ( 50 )

/*void _MapInit(Map& map, bool fitstTime)
   {
        map.SetEvent(MAP_EVENT_IN_CRITTER, "e_CritterIn");
   }

   void e_CritterIn(Map& map, Critter& cr)
   {
        if(cr.IsKnownLoc (false, LOC_BANDIT_CAVE)) {return;}
        cr.SetKnownLoc(false, LOC_BANDIT_CAVE);
        uint time =(cr.SkillBase[SK_OUTDOORSMAN] * 60) + (cr.Stat[ST_PERCEPTION] * 600);
        cr.AddTimeEvent  ("cte_CritterUnsetLoc", time, CTE_UNSETLOC, 0);

   }

   uint cte_CritterUnsetLoc(Critter& cr, int identifier, uint& rate)
   {
        if(!cr.IsKnownLoc (false, LOC_BANDIT_CAVE)) return 0;
        cr.UnsetKnownLoc (false, LOC_BANDIT_CAVE);
        return 0;
   }

   void _InitBanditMap(Item& item, bool firstTime)
   {
        item.SetEvent(ITEM_EVENT_USE, "e_BanditMapUse");
   }*/

bool e_BanditMapUse( Item& item, Critter& cr, Critter@ onCritter, Item@ onItem, Scenery@ onScenery )
{
    if( cr.SkillBase[ SK_OUTDOORSMAN ] >= 120 )
    {
        /*if(cr.IsKnownLoc (false, LOC_BANDIT_CAVE))
           {
                cr.Say(SAY_NETMSG, "¬ы уже знаете местонахождение бандитов.");
           } else

           {
                cr.SetKnownLoc(false, LOC_BANDIT_CAVE);
                cr.Say(SAY_NETMSG, "¬ы узнали местонахождение бандитов.");
           }*/
        Location@ loc = GetLocationByPid( LOC_BANDIT_CAVE, 0 );
        if( loc !is null )
            cr.Say( SAY_NETMSG, "ћестонахождение бандитов: " + ( loc.WorldX / 10 ) + "-" + ( loc.WorldY / 10 ) );
    }
    else
        cr.Say( SAY_NETMSG, "¬ы непонимаете что за каракули здесь изображены." );
    return true;
}
