# include "_macros.fos"
# include "_colors.fos"

import uint GetAllPlayers( Critter@[]& crs ) from "manager";
import void RestartFactions( Critter& cr, int p0, int p1, int p2 ) from "factions";
import void OpenCrate( Critter& player, uint type ) from "map_start";
import void ShowInputBoxScreen( Critter& cr, string funcName, uint16 textLength, uint8 flags ) from "main";
import void Warn( Critter& admin, int param0, int param1, int param2 )  from "warning";  // ErlKing
import void SetWorkbench( Critter& cr, int item_id, int item_type, int p2 )  from "item";  // ErlKing
import void ChangeCritterSpeed( Critter& cr ) from "speed";
import bool ItemLockedCont( Item& item ) from "item";
import bool IsDoorAutomatic( uint pid ) from "interactive_obj";
import void ChangeStatus( Critter& cr, uint16 status, uint8 value, bool set ) from "critter_status";
import void PlayMusic( Map& map, string& musicName, uint pos, uint repeat ) from "media";
# define GM_ACTIVATION            ( 1 )
# define GM_MODOCPASS             ( 2 )
# define GM_FACTIONS              ( 3 )
# define GM_MODOCMODES            ( 4 )
# define GM_STATS                 ( 5 )
# define GM_BANS                  ( 6 )
# define GM_MOBS                  ( 7 )
# define GM_NPC                   ( 8 )
# define GM_LOCATION              ( 9 )
# define GM_ITEMS                 ( 10 )
# define GM_PM                    ( 11 )
# define GM_S2A                   ( 12 )
# define GM_DANGEROUS             ( 13 )

# define DISTANCE_GROUP_RADIUS    ( 20 ) // расстояние на котором группа видит друг друга (и помогает атаковать противника)
# define DISTANCE_GO_HOME         ( 30 ) // расстояние от дома при котором моб идет домой
# define MAX_FURY                 ( 3 )  // сколько раз нужно разозлить НПС чтобы он стал игнорить границы обитания
# define DISTANCE_HELP            ( 15 ) // расстояние помощи
# define TIME_TEST_GO_HOME        ( 10 ) // переодичность тестирования на возврат домой и отмену атаки

//Эти функции реализованы в map_sutter_objects.fos, но что бы вам зря не ковырять его (а он большой), я скопирую их сюда прям так:
void LogErr( string text ) { Log("[ERORR] " + text ); } //Выводит в консоль сервера сообщение об ошибке.
bool invalidCritter( Critter@ cr )
{
	if( @cr is null )
	{
		LogErr("Critter is null");
		return true;
	}
	return false;
}

bool validCritter( Critter@ cr ) { return !invalidCritter(@cr); } //Проверка корректности указателя на криттера.
bool SayCr( Critter@ cr, string text ) 
{
	if( validCritter(@cr) ) 
	{
		cr.Say( SAY_NETMSG, text ); 
		return true; 
	}
	return false;
}

bool wrongString( string@ text ) { return ( !valid(text) || text.length() == 0 ); } //Проверяет корректность строки.
string TextOrDefault( string@ original_text, string@ default_text )
{
	return( wrongString( original_text ) ? ( wrongString( default_text ) ? "[ERROR]" : default_text ) : original_text ); 
} //Возвращает текст, замену, или [ERROR]

// Пост в модоке
enum ModocPost
{
	None,
	Sheriff,
	Major,
}

bool SetPost( Critter& player, ModocPost value ){ return SetPost( player.Id, value ); }
bool SetPost( int player_id, ModocPost value ) 
{
    GameVar@ post = GetLocalVar( LVAR_modoc_post, player_id );
	if( @post is null )
		return false;
	post = value;
    return true;
}

# define GMCommand		#( name )	void name( Critter& player, int param0, int param1, int param2, string@ param3, int[] @ param4 )
# define AdminCommand	#( name )	void name( Critter& player, int param0, int param1, int param2 )

AdminCommand( BecomeMajor )
{
    Critter@ target = @player;
	if( param0 != 0 ) @ target = GetCritter( param0 );
	if( !valid( target ) ) @target = @player;
	if( SetPost( target, ModocPost::Major ) )
		target.Say( SAY_NETMSG, "Вы добились успеха, теперь этот город принадлежит вам!" );
}

AdminCommand( BecomeSheriff )
{
    Critter@ target = @player;
	if( param0 != 0 ) @ target = GetCritter( param0 );
	if( !valid( target ) ) @target = @player;
		target.Say( SAY_NETMSG, "Пришло время жевать жвачку и пинать задницы!" );
}

AdminCommand( ErasePost )
{
    Critter@ target = @player;
	if( param0 != 0 ) @ target = GetCritter( param0 );
	if( !valid( target ) ) @target = @player;
		target.Say( SAY_NETMSG, "Вы потеряли все привелегии, опять всё с нуля.." );
}

//Ядро функции #addkey item_id locker_pin name:
GMCommand( _gmAddKey )
{
    if( param1 == 0 && param0 != 0 ) 
	{
        Item@ locker = GetItem( param0 );
        if( !valid(locker) )
		{
			SayCr( player, "Объект не найден!" );
			return;
        }
		bool isDoor = locker.GetType() == ITEM_TYPE_DOOR;
        if( IsDoorAutomatic( locker.GetProtoId() ) )
		{
			SayCr( player, "Это автоматическая дверь, ей не нужен ключ." );
			return;
        }
		
		if( FLAG( locker.LockerCondition, LOCKER_ELECTRO ) ) 
		{
			SayCr( player, "На " + ( isDoor ? "двери" : "контейнере" ) + " стоит электронный замок!" );
			return;
        }
		if( ( locker.LockerCondition != LOCKER_LOCKED ) )
		{
			SayCr( player, "На " + ( isDoor ? "двери" : "контейнере" ) + " нет замка!" );
			return;
        }
		param1 = locker.LockerId;
    }
	
    if( param1 == 0 )
	{
		SayCr( player, "Нет такого номера ключа, что бы сделать дубликат!" );
		return;
    }
	if( param2 == 0 ) param2 = 1;
	@param3 = TextOrDefault( @param3, "some key" );
	for( int i = 0; i < param2; i++ )
	{
		Item@ newKey = player.AddItem( PID_BLANK_KEY, 1 );
		newKey.LockerId = param1;
		newKey.SetLexems( "$KeyLex" + param3 );
		newKey.Update();
	}
    SayCr( player, "Вы изготовили ключ(count:" + param2 + ") для замка №" + param1 );
    return;    
}

GMCommand( GM_getItemsByPid )
{
    getItemsByPid( player, param0, param1, param2 );
}

AdminCommand ( getItemsByPid )
{
    Item@[] items;
    uint count = GetAllItems( param0,  items );
    player.Say( SAY_NETMSG, "Count: " + count );

    Item@ item = null;

    for( uint i = 0; i < count; i++ )
    {
        @item = items[ i ];
        if( !valid( item ) )
            continue;
        // player.Say(SAY_NETMSG, "#"+item.Id+": acc "+item.Accessory);
        switch( item.Accessory )
        {
        case ACCESSORY_HEX:
        {
            Map@ map = GetMap( item.MapId );
            if( !valid( map ) )
            {
                player.Say( SAY_NETMSG, "#" + item.Id + ": map " + item.MapId + " not valid" );
                continue;
            }
            player.Say( SAY_NETMSG, "#" + item.Id + ": map " + map.Id + " (" + item.HexX + ", " + item.HexY + ")" );
        }
        break;
        case ACCESSORY_CRITTER:
        {
            Critter@ cr = GetCritter( item.CritId );
            if( !valid( cr ) )
            {
                player.Say( SAY_NETMSG, "#" + item.Id + ": crit " + item.CritId + " not valid" );
                continue;
            }
            Map@ map = cr.GetMap();
            if( valid( map ) )
            {
                player.Say( SAY_NETMSG, "#" + item.Id + ": crit " + cr.Id + " (map " + map.Id + ": " + cr.HexX + ", " + cr.HexY + ")" );
            }
            else
            {
                player.Say( SAY_NETMSG, "#" + item.Id + ": crit " + cr.Id + " (global)" );
            }
        }
        break;
        case ACCESSORY_CONTAINER:
        {
            Map@ map = GetMap( item.MapId );
            if( !valid( map ) )
            {
                player.Say( SAY_NETMSG, "#" + item.Id + ": map " + item.MapId + " not valid" );
                continue;
            }

            Item@ cont = map.GetItem( item.ContainerId );
            if( !valid( cont ) )
                continue;

            player.Say( SAY_NETMSG, "#" + item.Id + ": map " + map.Id + " (cont " + cont.Id + ": " + cont.HexX + ", " + cont.HexY + ")" );
        }
        break;
        }
    }
}

AdminCommand( delItemsByPid )
{
    Item@[] items;
    uint count = GetAllItems( param0,  items );
    DeleteItems( items );
    player.Say( SAY_NETMSG, "Deleted " + count + " items." );
}

class Replic
{
    uint   Author;
    uint   Speaker;
    uint8  SayType;
    string Buffer;
    Replic()
    {
        Author = 0;
        Speaker = 0;
        SayType = 0;
        Buffer = "";
    }
}

Replic[] replics;

GMCommand( GM_voice )
{
    player.StatBase[ ST_VAR1 ] = param0;
    player.StatBase[ ST_VAR2 ] = param1;
    ShowInputBoxScreen( player, "gm@unsafe_answer_GM_voice#text", 0, INPUTBOX_CLOSE_ON_ENTER );
}

GMCommand( unsafe_answer_GM_voice )
{
    if( @param3 !is null && param3.length() != 0 )
    {
        Map@ map = player.GetMap();
        map.SetText( player.Stat[ ST_VAR1 ], player.Stat[ ST_VAR2 ], COLOR_GRAY, param3 );
		player.Say( SAY_NETMSG, param3 );
    }
	Log("Checkpoint #1");
}

GMCommand( GM_say )
{
    say( player, param0, param1, param2 );
}

AdminCommand( say )
{
    if( param0 < 1 )
    {
        player.Say( SAY_NETMSG, "Wrong critter Id." );
        return;
    }

    Critter@ cr = GetCritter( param0 );

    if( cr is null )
    {
        player.Say( SAY_NETMSG, "Can't find critter by Id." );
        return;
    }

    if( param1 < 1 || param1 > 11 )
    {
        player.Say( SAY_NETMSG, "Wrong SayType." );
        return;
    }

    player.StatBase[ ST_VAR1 ] = cr.Id;
    player.StatBase[ ST_VAR2 ] = param1;
    if( param1 == 1 )
        ShowInputBoxScreen( player, "gm@unsafe_answer_GM_say#сказать", 0, INPUTBOX_CLOSE_ON_ENTER );
    else if( param1 == 5 )
        ShowInputBoxScreen( player, "gm@unsafe_answer_GM_say#эмоут", 0, INPUTBOX_CLOSE_ON_ENTER );
    else
        ShowInputBoxScreen( player, "gm@unsafe_answer_GM_say#текст", 0, INPUTBOX_CLOSE_ON_ENTER );
}

GMCommand( unsafe_answer_GM_say )
{
    if( @param3 !is null && param3.length() != 0 )
    {
        Critter@ cr = GetCritter( player.Stat[ ST_VAR1 ] );
        cr.Say( player.Stat[ ST_VAR2 ], param3 );
        say( player, player.Stat[ ST_VAR1 ], player.Stat[ ST_VAR2 ], 0 );
    }
}

void answer_gm_say( Critter& player, uint answerI, string& answerS )
{
    if( answerS.length() < 2 || answerS.length() > 64 )
    {
        player.Say( SAY_NETMSG, "Wrong text length." );
        delAuthor( player.Id );
        return;
    }

    uint    len = replics.length();
    Replic@ rep = null;

    for( uint i = 0; i < len; i++ )
    {
        if( replics[ i ].Author != player.Id )
            continue;
        @rep = replics[ i ];
        break;
    }
    if( rep is null )
    {
        player.Say( SAY_NETMSG, "Can't find replic." );
        delAuthor( player.Id );
        return;
    }

    Critter@ cr = GetCritter( rep.Speaker );

    if( cr is null )
    {
        player.Say( SAY_NETMSG, "Can't find critter." );
        delAuthor( player.Id );
        return;
    }

    rep.Buffer += answerS;

    if( answerS[ answerS.length() - 1 ] == '+' )
    {
        rep.Buffer.resize( rep.Buffer.length() - 1 );

        player.ShowScreen( SCREEN_SAY, 0, "answer_gm_say" );
        player.Say( SAY_SAY_TITLE, "Сказать..." );

        return;
    }

    cr.Say( rep.SayType, rep.Buffer );
    player.Say( SAY_NETMSG, "Ok." );

    delAuthor( player.Id );
}

void delAuthor( uint id )
{
    uint len = replics.length();

    for( uint i = 0; i < len; i++ )
    {
        if( replics[ i ].Author != id )
            continue;
        replics.removeAt( i );
        break;
    }
}

AdminCommand( PlayersHP )
{
    Critter@[] crs;
    GetAllPlayers( crs );

    for( uint i = 0; i < crs.length(); i++ )
    {
        Critter@ cr = crs[ i ];
        if( cr is null )
            continue;
        player.Say( SAY_NETMSG, "Id: " + cr.Id + " BaseMaxHP: " + cr.StatBase[ ST_MAX_LIFE ] + " MaxHP: " + cr.Stat[ ST_MAX_LIFE ] );
    }
}

AdminCommand( dec15hp )
{
    if( param0 != 0 )
    {
        Critter@ cr = GetCritter( param0 );
        if( !(cr is null) )
        {
            if( cr.StatBase[ ST_MAX_LIFE ] > 15 )
                cr.StatBase[ ST_MAX_LIFE ] -= 15;
            else
                cr.StatBase[ ST_MAX_LIFE ] = 0;
        }
        return;
    }


    Critter@[] crs;
    GetAllPlayers( crs );

    for( uint i = 0; i < crs.length(); i++ )
    {
        Critter@ cr = crs[ i ];
        if( (cr is null) || cr.StatBase[ ST_MAX_LIFE ] != 15 )
            continue;
        cr.StatBase[ ST_MAX_LIFE ] = 0;
        player.Say( SAY_NETMSG, "Id: " + cr.Id + "  базовые MaxHP сброшены на 0." );
    }
}

AdminCommand( dec75hp )
{
    Critter@[] crs;
    GetAllPlayers( crs );

    for( uint i = 0; i < crs.length(); i++ )
    {
        Critter@ cr = crs[ i ];
        if( (cr is null) || cr.StatBase[ ST_MAX_LIFE ] != 75 )
            continue;
        cr.StatBase[ ST_MAX_LIFE ] = 0;
        player.Say( SAY_NETMSG, "Id: " + cr.Id + "  базовые MaxHP сброшены на 0." );
    }
}


AdminCommand( sleep )
{
    Critter@ cr = null;
    if( param0 > 0 )
    {
        @cr = GetCritter( param0 );
        if( cr is null )
            return;
    }
    else
        @cr = player;

    if( cr.IsKnockout() )
    {
        cr.StatBase[ ST_CURRENT_AP ] = 0;
        if( cr.Stat[ ST_CURRENT_HP ] > 0 )
            cr.ToLife();
    }
    else
        cr.ToKnockout( KNOCKOUT_ANIM2_DEFAULT( param1 == 0 ), 9999, cr.HexX, cr.HexY );
}

GMCommand( _sinf )
{
    sinf( player, 0, param0, 0 );
}

AdminCommand( sinf )
{
    Critter@ cr = null;
    if( param0 > 0 )
    {
        @cr = GetCritter( param0 );
        if( cr is null )
            return;
    }
    else
        @cr = player;

    cr.RunClientScript( "client_main@_sinf", param1, 0, 0, null, null );
}

uint last_s2a_author = 0;

GMCommand( _say2all )
{
    Critter@[] crs;
    GetAllPlayers( crs );

    string str = "|0xFFFF0000 ### |0xFFBB33CC " + param3 + " |0xFFFF0000 ###";

    int   acc = player.GetAccess();

    for( uint i = 0, j = crs.length(); i < j; i++ )
    {
        if( crs[ i ] is null )
            continue;

        if( crs[ i ].GetAccess() >= acc )
            crs[ i ].Say( SAY_NETMSG, "|0xFFFF0000 <|0xFFFFFF00 " + GetPlayerName( player.Id ) + "|0xFFFF0000 >" + str );
        else
            crs[ i ].Say( SAY_NETMSG, str );
    }

    last_s2a_author = player.Id;
}

GMCommand( unsafe_ans )
{
    if( player.Stat[ ST_VAR5 ] > 3 )
        return;
    player.StatBase[ ST_VAR5 ] += 1;

    Critter@ cr = GetCritter( last_s2a_author );
    if( cr is null )
        return;

    cr.Say( SAY_NETMSG, "s2a-answer |0xFFFF0000 <|0xFFFFFF00 " + GetPlayerName( player.Id ) + "(" + player.Id + ")|0xFFFF0000 > |0xFFBB33CC " + param3 );
}

GMCommand( unsafe_help )
{
    if( player.Stat[ ST_VAR5 ] > 3 )
        return;
    player.StatBase[ ST_VAR5 ] += 1;

    Critter@[] crs;
    GetAllPlayers( crs );

    string str = "help |0xFFFF0000 <|0xFFFFFF00 " + GetPlayerName( player.Id ) + "(" + player.Id + ")|0xFFFF0000 > |0xFFBB33CC " + param3;

    for( uint i = 0, j = crs.length(); i < j; i++ )
    {
        if( crs[ i ] is null or crs[ i ].GetAccess() < ACCESS_MODER )
            continue;
        crs[ i ].Say( SAY_NETMSG, str );
    }

    file f;
    if( f.open( "logs\\help_pleads.txt", "a" ) >= 0 )
    {
        string date = TimeToString( player );
        // string ipstring = GetIpsstring(player, player.Id, 0, 0);
        string type;
        if( player.Quest[ QST_GAMEMODE ] == GAME_START )
            type = "Старт";
        else if( player.Quest[ QST_GAMEMODE ] == GAME_ADVENTURE )
            type = "Прикл.";
        else if( player.Quest[ QST_GAMEMODE ] == GAME_SURVIVAL )
            type = "Выжив.";
        else if( player.Quest[ QST_GAMEMODE ] == GAME_ARCADE )
            type = "Аркада";
        else if( player.Quest[ QST_GAMEMODE ] == GAME_TEST )
            type = "Тест";
        else
            type = "ошибка";
        f.writeString( date + "\t" + type + "\t" + player.Id  + "\t" + GetPlayerName( player.Id ) + "\t" + "\t" + param3 + "\n" );
        f.close();
    }
    else
        Log( "can't open!" );
}

GMCommand( read_help )
{
    file f;
    if( f.open( "logs\\help_pleads.txt", "r" ) >= 0 )
    {
        string word = "";
        uint   pos = 0;
        f.setPos( 0 );
        while( !f.isEndOfFile() )
        {
            pos = f.getPos();
            f.readLine( word );
            player.Say( SAY_NETMSG, word );
        }
        f.close();
    }
    else
        Log( "can't open!" );
}

class Poll
{
    uint   Id;
    uint   InitiatorId;
    string Question;
    uint8  AnsNum;
    string[] Answers;
    uint16[] Votes;

    Poll()
    {
        Id = 0;
        InitiatorId = 0;
        AnsNum = 0;
    }

    Poll@ Set( uint id, uint initiatorId, string& question )
    {
        Id = id;
        InitiatorId = initiatorId;
        Question = question;
        return this;
    }
    Poll@ Add( string& answer )
    {
        AnsNum++;
        Answers.insertLast( answer );
        Votes.insertLast( 0 );
        return this;
    }
    void Vote( uint num )
    {
        if( num >= AnsNum )
            return;
        Votes[ num ] += 1;
    }
}

Poll@[] polls;
uint poll_lastId = 0;

GMCommand( _poll )
{
    if( param3 is null || param3.length() < 10 )
        return;

    string@[] @ parts = splitEx( param3, "@" );

    if( parts is null || parts.length() < 2 || parts.length() > 6 || parts[ 0 ] is null || parts[ 1 ] is null )
        return;

    // uint len = polls.length();
    Poll@ poll = Poll().Set( poll_lastId++, player.Id, parts[ 0 ] );

    for( uint i = 1, j = parts.length(); i < j; i++ )
    {
        if( parts[ i ] is null )
            continue;
        poll.Add( parts[ i ] );
    }
    polls.insertLast( @poll );

    Critter@[] crs;
    GetAllPlayers( crs );

    string str = "|0xFFFF0000 # |0xFFBB33CC Началось голосование. |0xFFFF0000 #";

    for( uint i = 0, j = crs.length(); i < j; i++ )
    {
        if( crs[ i ] is null )
            continue;

        crs[ i ].Say( SAY_NETMSG, str );
        crs[ i ].StatBase[ ST_VAR3 ] = poll.Id;
        crs[ i ].ShowScreen( SCREEN_DIALOGBOX, poll.AnsNum, "answer_poll" );
        crs[ i ].Say( SAY_DIALOGBOX_TEXT, poll.Question );
        for( uint k = 0; k < poll.AnsNum; k++ )
        {
            crs[ i ].Say( SAY_DIALOGBOX_BUTTON( k ), poll.Answers[ k ] );
        }
    }

    player.Say( SAY_NETMSG, "Poll Id: " + poll.Id );
}

Poll@ GetPoll( uint8 num )
{
    Poll@ poll = null;
    for( uint i = 0; i < polls.length(); i++ )
    {
        if( polls[ i ] is null or polls[ i ].Id != num )
            continue;
        @poll = polls[ i ];
    }
    return poll;
}

void answer_poll( Critter& cr, uint answerI, string& answerS )
{
    uint  id = cr.Stat[ ST_VAR3 ];
    Poll@ poll = GetPoll( uint8( id ) );
    if( poll is null or poll.AnsNum <= answerI )
        return;

    poll.Votes[ answerI ] += 1;

    Critter@ gm = GetCritter( poll.InitiatorId );

    if( @gm != null )
    {
        gm.Say( SAY_NETMSG, "Игрок " + GetPlayerName( cr.Id ) + "(" + cr.Id + ") выбрал вариант " + answerI );
    }
    cr.StatBase[ ST_VAR3 ] = -1;
}

AdminCommand( poll_check )
{
    Poll@ poll = GetPoll( uint8( param0 ) );
    if( poll is null )
    {
        player.Say( SAY_NETMSG, "Голосование не найдено." );
        return;
    }

    player.Say( SAY_NETMSG, "Голосование #" + param0 + ": " + poll.Question );
    for( uint i = 0; i < poll.AnsNum; i++ )
    {
        player.Say( SAY_NETMSG, i + ") " + poll.Answers[ i ] + " - " + poll.Votes[ i ] );
    }
}

AdminCommand( poll_end )
{
    Poll@ poll = GetPoll( uint8( param0 ) );
    if( poll is null )
    {
        player.Say( SAY_NETMSG, "Голосование не найдено." );
        return;
    }

    Critter@[] crs;

    if( param1 > 0 )
    {
        crs.resize( 1 );
        @crs[ 0 ] = player;
    }
    else
        GetAllPlayers( crs );

    string str = "Голосование #" + param0 + ": \"" + poll.Question + "\" закончено.";
    string[] str0( poll.AnsNum );

    for( uint i = 0; i < poll.AnsNum; i++ )
    {
        str0[ i ] = i + ") " + poll.Answers[ i ] + " - " + poll.Votes[ i ];
    }

    for( uint j = 0, k = crs.length(); j < k; j++ )
    {
        if( crs[ j ] is null )
            continue;

        crs[ j ].Say( SAY_NETMSG, str );
        for( uint i = 0; i < poll.AnsNum; i++ )
        {
            crs[ j ].Say( SAY_NETMSG, str0[ i ] );
        }
    }

    @polls[ poll.Id ] = null;
}


GMCommand( _private )
{
    if( param0 < 1 )
        return;
    Critter@ cr = GetCritter( param0 );
    if( cr is null or cr.IsNpc() )
    {
        player.Say( SAY_NETMSG, "Игрок не найден." );
        return;
    }

    string str = "|0xFFFF0000 <|0xFFFFFF00 " + ( ( cr.GetAccess() > ACCESS_TESTER ) ? GetPlayerName( player.Id ) : ( ( player.GetAccess() == ACCESS_ADMIN ) ? "admin" : "gm" ) ) + "|0xFFFF0000 > |0xFFCC33AA " + param3;

    cr.Say( SAY_NETMSG, str );
    player.Say( SAY_NETMSG, "Отправлено." );
}

GMCommand( GM_name )
{
    if( param0 < 1 )
        return;
    player.Say( SAY_NETMSG, "Id: " + param0 + " Login: " + GetPlayerName( param0 ) );
}

AdminCommand( name )
{
    if( param0 < 1 )
        return;
    player.Say( SAY_NETMSG, "Id: " + param0 + " Login: " + GetPlayerName( param0 ) );
}

GMCommand( GM_showVal )
{
    showVal( player, param0, param1, param2 );
}

AdminCommand( showVal )
{
    if( param0 < 1 ) return;

    Item@ item = GetItem( param0 );
    if( @item is null ) return;

    player.Say( SAY_NETMSG, "ItemId: " + item.Id );
    player.Say( SAY_NETMSG, "Val0: " + item.Val0 );
    player.Say( SAY_NETMSG, "Val1: " + item.Val1 );
    player.Say( SAY_NETMSG, "Val2: " + item.Val2 );
    player.Say( SAY_NETMSG, "Val3: " + item.Val3 );
    player.Say( SAY_NETMSG, "Val4: " + item.Val4 );
    player.Say( SAY_NETMSG, "Val5: " + item.Val5 );
    player.Say( SAY_NETMSG, "Val6: " + item.Val6 );
    player.Say( SAY_NETMSG, "Val7: " + item.Val7 );
    player.Say( SAY_NETMSG, "Val8: " + item.Val8 );
    player.Say( SAY_NETMSG, "Val9: " + item.Val9 );
}

AdminCommand( give )
{
    Critter@ cr = GetCritter( param0 );
    if( @cr is null )
        return;

    Item@ item = GetItem( param1 );
    if( @item is null )
        return;

    uint count = 1;
    if( item.IsStackable() )
    {
        count = item.GetCount();
        if( param2 > 0 && uint( param2 ) < count )
            count = param2;
    }
    MoveItem( item, count, cr );
}

GMCommand( _gmlex )
{
    if( param0 < 1 )
        return;
    Critter@ cr = GetCritter( param0 );
    if( @cr is null || cr.IsNpc() )
    {
        player.Say( SAY_NETMSG, "Игрок не найден." );
        return;
    }

    cr.SetLexems( param3 );
    player.Say( SAY_NETMSG, "Лексема присвоена." );
}

GMCommand( _gmitemlex )
{
    if( param0 < 1 )
        return;
    Item@ item = GetItem( param0 );
    if( !valid( item ) )
    {
        player.Say( SAY_NETMSG, "Игрок не найден." );
        return;
    }

    item.SetLexems( param3 );
    player.Say( SAY_NETMSG, "Лексема присвоена." );
}


GMCommand( unsafe_ADVENTURER_PANNEL_CRITTER )
{
    if( player.IsPlayer() )
    {
        player.StatBase[ ST_VAR0 ] = param0;
        player.ShowScreen( SCREEN_DIALOGBOX, 7, "answer_ADVENTURER_PANNEL_CRITTER" );
        player.Say( SAY_DIALOGBOX_TEXT, "Выберите предупреждение" );
        player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "сленг" );
        player.Say( SAY_DIALOGBOX_BUTTON( 1 ), "повергейминг" );
        player.Say( SAY_DIALOGBOX_BUTTON( 2 ), "выход из роли" );
        player.Say( SAY_DIALOGBOX_BUTTON( 3 ), "мародерство" );
        player.Say( SAY_DIALOGBOX_BUTTON( 4 ), "клептомания" );
        player.Say( SAY_DIALOGBOX_BUTTON( 5 ), "метагейм" );
        player.Say( SAY_DIALOGBOX_BUTTON( 6 ), "мультоводство" );
    }
}

void answer_ADVENTURER_PANNEL_CRITTER( Critter& cr, uint answerI, string& answerS )
{
    Critter@ target = GetCritter( cr.Stat[ ST_VAR0 ] );
    if( @target is null || target.IsNpc() )
    {
        cr.Say( SAY_NETMSG, "Игрок не найден." );
        return;
    }
    if( cr.Stat[ ST_VAR5 ] > 3 )
        return;
    cr.StatBase[ ST_VAR5 ] += 1;
    string plead;
    if( answerI == 0 )
    {
        target.ShowScreen( SCREEN_DIALOGBOX, 0, "unsafe_answer_NULL" );
        target.Say( SAY_DIALOGBOX_TEXT, "НА СЕРВЕРЕ ЗАПЕРЩЕН СЛЕНГ И НЕИГРОВОЕ ОБЩЕНИЕ" );
        plead = " - сленг";
    }
    else if( answerI == 1 )
    {
        target.ShowScreen( SCREEN_DIALOGBOX, 0, "unsafe_answer_NULL" );
        target.Say( SAY_DIALOGBOX_TEXT, "НЕ СТРОЙТЕ ИЗ СЕБЯ РЕМБО, ПОМНИТЕ ОБ ИНСТИНКТЕ САМОСОХРАНЕНИЯ" );
        plead = " - рембо";
    }
    else if( answerI == 2 )
    {
        target.ShowScreen( SCREEN_DIALOGBOX, 0, "unsafe_answer_NULL" );
        target.Say( SAY_DIALOGBOX_TEXT, "ПРИДЕРЖИВАЙТЕСЬ СВОЕЙ ИГРОВОЙ РОЛИ" );
        plead = " - несоответствие роли";
    }
    else if( answerI == 3 )
    {
        target.ShowScreen( SCREEN_DIALOGBOX, 0, "unsafe_answer_NULL" );
        target.Say( SAY_DIALOGBOX_TEXT, "БЕЗСИСТЕМНОЕ ЛУТАНИЕ ТРУПОВ ЭТО МАРОДЕРСТВО, ОСТАНОВИТЕСЬ" );
        plead = " - мародерство";
    }
    else if( answerI == 4 )
    {
        target.ShowScreen( SCREEN_DIALOGBOX, 0, "unsafe_answer_NULL" );
        target.Say( SAY_DIALOGBOX_TEXT, "НЕ ШАРЬТЕСЬ ГДЕ ПОПАЛО, ПРИСТРЕЛЯТ ЗА ВОРОВСТВО" );
        plead = " - клептомания";
    }
    else if( answerI == 5 )
    {
        target.ShowScreen( SCREEN_DIALOGBOX, 0, "unsafe_answer_NULL" );
        target.Say( SAY_DIALOGBOX_TEXT, "ИСПОЛЬЗОВАНИЕ ИНФОРМАЦИИ ПОЛУЧЕННОЙ НЕИГРОВЫМ ПУТЕМ ЗАПРЕЩЕНО" );
        plead = " - метагейм";
    }
    else if( answerI == 6 )
    {
        target.ShowScreen( SCREEN_DIALOGBOX, 0, "unsafe_answer_NULL" );
        target.Say( SAY_DIALOGBOX_TEXT, "ЗАПРЕЩЕНО ВЗАИМОДЕЙСТВИЕ МЕЖДУ СВОИМИ ПЕРСОНАЖАМИ" );
        plead = " - мультоводство";
    }
    if( plead != "" )
    {
        cr.Say( SAY_NETMSG, "предупреждение выдано" );
        Critter@[] crs;
        GetAllPlayers( crs );
        string str = "жалоба от |0xFFFF0000 <|0xFFFFFF00 " + GetPlayerName( cr.Id ) + "(" + cr.Id + ") на " + GetPlayerName( target.Id ) + "(" + target.Id + ")|0xFFFF0000 > |0xFFBB33CC " + plead;
        for( uint i = 0, j = crs.length(); i < j; i++ )
        {
            if( crs[ i ] is null or crs[ i ].GetAccess() < ACCESS_MODER )
                continue;
            crs[ i ].Say( SAY_NETMSG, str );
        }
        file f;
        if( f.open( "logs\\warnings.txt", "a" ) >= 0 )
        {
            f.writeString( "жалоба от " + GetPlayerName( cr.Id ) + "\t" + "\t" + cr.Id + "\t" + " на " + GetPlayerName( target.Id ) + "\t" + "\t" + target.Id + "\t" + plead + "\n" );
            f.close();
        }
    }
}

GMCommand( GM_PANNEL_SELF )
{
    if( player.GetAccess() >= ACCESS_MODER )
    {
        player.ShowScreen( SCREEN_DIALOGBOX, 8, "answer_GM_PANNEL_SELF" );
        player.Say( SAY_DIALOGBOX_TEXT, "ГМ ПАНЕЛЬ" );
        player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "Режимы себя" );
        player.Say( SAY_DIALOGBOX_BUTTON( 1 ), "Режимы города" );
        player.Say( SAY_DIALOGBOX_BUTTON( 2 ), "Смотреть Логи" );
        player.Say( SAY_DIALOGBOX_BUTTON( 3 ), "По ID" );
        player.Say( SAY_DIALOGBOX_BUTTON( 4 ), "Склад" );
        player.Say( SAY_DIALOGBOX_BUTTON( 5 ), "Чарлисты" );
        player.Say( SAY_DIALOGBOX_BUTTON( 6 ), "Телепорт" );
		player.Say( SAY_DIALOGBOX_BUTTON( 7 ), "Музыка" );
		//player.Say( SAY_DIALOGBOX_BUTTON( 8 ), "Спавны2" );
		//player.Say( SAY_DIALOGBOX_BUTTON( 9 ), "убр.лишних мобов" );
    }
}

void answer_GM_PANNEL_SELF( Critter& player, uint answerI, string& answerS )
{
    if( answerI == 0 )
    {
        player.ShowScreen( SCREEN_DIALOGBOX, 6, "answer_GM_PANNEL_SELF_MYMODES" );
        player.Say( SAY_DIALOGBOX_TEXT, "Выберите режимы" );
        player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "ред. как игрока" );
        if( player.Mode[ MODE_INVULNERABLE ] == 0 )
            player.Say( SAY_DIALOGBOX_BUTTON( 1 ), "+ неуязвимость" );
        else
            player.Say( SAY_DIALOGBOX_BUTTON( 1 ), "- неуязвимость" );
        if( player.Quest[ QST_VISION ] == 0 )
            player.Say( SAY_DIALOGBOX_BUTTON( 2 ), "+ всевидение" );
        else
            player.Say( SAY_DIALOGBOX_BUTTON( 2 ), "- всевидение" );
        if( player.Mode[ MODE_NO_PVP ] == 0 )
            player.Say( SAY_DIALOGBOX_BUTTON( 3 ), "+ nopvp" );
        else
            player.Say( SAY_DIALOGBOX_BUTTON( 3 ), "- nopvp" );
        player.Say( SAY_DIALOGBOX_BUTTON( 4 ), "обзор ID" );
        player.Say( SAY_DIALOGBOX_BUTTON( 5 ), "назад" );
    }
    if( answerI == 1 )
    {
        GameVar@ Reg = GetGlobalVar( GVAR_inf_modoc_reg );       // регистрация
        player.ShowScreen( SCREEN_DIALOGBOX, 6, "answer_GM_PANNEL_SELF_TOWNMODES" );
        player.Say( SAY_DIALOGBOX_TEXT, "Выберите режимы" );
        player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "воен положение" );
        player.Say( SAY_DIALOGBOX_BUTTON( 1 ), "активность гвард" );
        player.Say( SAY_DIALOGBOX_BUTTON( 2 ), "расизм" );
        player.Say( SAY_DIALOGBOX_BUTTON( 3 ), "шлюз" );
        if( Reg.GetValue() == 0 )
            player.Say( SAY_DIALOGBOX_BUTTON( 4 ), "закрыть регистрацию" );
        else
            player.Say( SAY_DIALOGBOX_BUTTON( 4 ), "открыть регистрацию" );
        player.Say( SAY_DIALOGBOX_BUTTON( 5 ), "назад" );
    }
    if( answerI == 2 )
    {
        player.ShowScreen( SCREEN_DIALOGBOX, 11, "answer_GM_PANNEL_SELF_LOG" );
        player.Say( SAY_DIALOGBOX_TEXT, "Что желаешь хозяин?" );
        player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "скачать help" );
        player.Say( SAY_DIALOGBOX_BUTTON( 1 ), "скачать warn" );
        player.Say( SAY_DIALOGBOX_BUTTON( 2 ), "скачать kill" );
        player.Say( SAY_DIALOGBOX_BUTTON( 3 ), "скачать factions" );
        player.Say( SAY_DIALOGBOX_BUTTON( 4 ), "скачать bans" );
        player.Say( SAY_DIALOGBOX_BUTTON( 5 ), "скачать crims" );
        if( player.GetAccess() > ACCESS_MODER )
            player.Say( SAY_DIALOGBOX_BUTTON( 9 ), "очистить лог" );
        player.Say( SAY_DIALOGBOX_BUTTON( 10 ), "назад" );
    }
    if( answerI == 3 )
    {
        player.ShowScreen( SCREEN_DIALOGBOX, 7, "answer_GM_PANNEL_SELF_ID" );
        player.Say( SAY_DIALOGBOX_TEXT, "Действия по ID" );
        player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "Режимы игры" );
        player.Say( SAY_DIALOGBOX_BUTTON( 1 ), "Фракции/пропуски" );
        player.Say( SAY_DIALOGBOX_BUTTON( 2 ), "Смотреть анкету" );
        player.Say( SAY_DIALOGBOX_BUTTON( 3 ), "Инвентарь" );
        player.Say( SAY_DIALOGBOX_BUTTON( 4 ), "Бан" );
        player.Say( SAY_DIALOGBOX_BUTTON( 5 ), "Разбан" );
        player.Say( SAY_DIALOGBOX_BUTTON( 6 ), "назад" );
    }
    if( answerI == 4 )
    {
        player.ShowScreen( SCREEN_DIALOGBOX, 10, "answer_GM_PANNEL_SELF_VAULT" );
        player.Say( SAY_DIALOGBOX_TEXT, "Склад" );
        player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "оружие" );
        player.Say( SAY_DIALOGBOX_BUTTON( 1 ), "броня" );
        player.Say( SAY_DIALOGBOX_BUTTON( 2 ), "патроны" );
        player.Say( SAY_DIALOGBOX_BUTTON( 3 ), "инструменты" );
        player.Say( SAY_DIALOGBOX_BUTTON( 4 ), "разное" );
        player.Say( SAY_DIALOGBOX_BUTTON( 5 ), "+эквип" );
        player.Say( SAY_DIALOGBOX_BUTTON( 6 ), "+патроны" );
        player.Say( SAY_DIALOGBOX_BUTTON( 7 ), "+инструменты" );
        player.Say( SAY_DIALOGBOX_BUTTON( 8 ), "социальное" );
        player.Say( SAY_DIALOGBOX_BUTTON( 9 ), "назад" );
    }
    if( answerI == 5 )
    {
        player.ShowScreen( SCREEN_DIALOGBOX, 6, "answer_GM_PANNEL_SELF_CHARLIST" );
        player.Say( SAY_DIALOGBOX_TEXT, "Чарлисты" );
        player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "Скачать" );
        player.Say( SAY_DIALOGBOX_BUTTON( 1 ), "Одобрить по ID" );
        player.Say( SAY_DIALOGBOX_BUTTON( 2 ), "Отказать по ID" );
        player.Say( SAY_DIALOGBOX_BUTTON( 3 ), "Бан по ID" );
        player.Say( SAY_DIALOGBOX_BUTTON( 4 ), "Редактировать" );
        player.Say( SAY_DIALOGBOX_BUTTON( 5 ), "назад" );
    }
    if( answerI == 6 )
    {
		GMPreset@ preset = GetPreset( player );
		if( @preset !is null ) @preset.answer = @preset.teleport;
    }
	
	if( answerI == 7 )
    {
		player.ShowScreen( SCREEN_DIALOGBOX, 7, "answer_GM_PANNEL_MUSIC" );
        player.Say( SAY_DIALOGBOX_TEXT, "Список музыки" );
        player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "Выключить музыку" );
        player.Say( SAY_DIALOGBOX_BUTTON( 1 ), "Музыка 1" );
        player.Say( SAY_DIALOGBOX_BUTTON( 2 ), "After Dark" );
        player.Say( SAY_DIALOGBOX_BUTTON( 3 ), "TNT ACDC" );
        player.Say( SAY_DIALOGBOX_BUTTON( 4 ), "TMNT" );
		player.Say( SAY_DIALOGBOX_BUTTON( 5 ), "Терминатор" );
        player.Say( SAY_DIALOGBOX_BUTTON( 6 ), "назад" );
    }
		if( answerI == 8 )
    {
		Map@ map = player.GetMap();
	uint16[] max_count = {GetLocalVar( LMVAR_CRITTER_Alien, map.Id ).GetValue(),
	GetLocalVar( LMVAR_CRITTER_SmDeathclaw, map.Id ).GetValue(),
	GetLocalVar( LMVAR_CRITTER_Deathclaw, map.Id ).GetValue(),
	GetLocalVar( LMVAR_CRITTER_ToughDeathclaw, map.Id ).GetValue(),
	GetLocalVar( LMVAR_CRITTER_FireGecko, map.Id ).GetValue(),
	GetLocalVar( LMVAR_CRITTER_Centaur, map.Id ).GetValue(),
	GetLocalVar( LMVAR_CRITTER_Floater, map.Id ).GetValue(),
	GetLocalVar( LMVAR_CRITTER_MirelurkWeak, map.Id ).GetValue(),
	GetLocalVar( LMVAR_CRITTER_RipperMale, map.Id ).GetValue(),
	GetLocalVar( LMVAR_CRITTER_RipperFemale, map.Id ).GetValue(),
	GetLocalVar( LMVAR_CRITTER_BanditMale, map.Id ).GetValue(),
	GetLocalVar( LMVAR_CRITTER_BanditFemale, map.Id ).GetValue(),
	GetLocalVar( LMVAR_CRITTER_MauraderMale, map.Id ).GetValue(),
	GetLocalVar( LMVAR_CRITTER_RaiderMale, map.Id ).GetValue(),
	GetLocalVar( LMVAR_CRITTER_RaiderFemale, map.Id ).GetValue()};
        player.ShowScreen( SCREEN_DIALOGBOX, 12, "answer_GM_PANNEL_SELF_MAPSPAWN2" );
        player.Say( SAY_DIALOGBOX_TEXT, "Спавны текущей карты:");
        player.Say( SAY_DIALOGBOX_BUTTON( 0 ), ""+max_count[0]+" чужой" );
        player.Say( SAY_DIALOGBOX_BUTTON( 1 ), ""+max_count[1]+" м.коготь" );
        player.Say( SAY_DIALOGBOX_BUTTON( 2 ), ""+max_count[2]+" б.коготь" );
        player.Say( SAY_DIALOGBOX_BUTTON( 3 ), ""+max_count[3]+" сер.коготь" );
        player.Say( SAY_DIALOGBOX_BUTTON( 4 ), ""+max_count[4]+" огнегекко" );
        player.Say( SAY_DIALOGBOX_BUTTON( 5 ), ""+max_count[5]+" кентавр" );
        player.Say( SAY_DIALOGBOX_BUTTON( 6 ), ""+max_count[6]+" летатель" );
        player.Say( SAY_DIALOGBOX_BUTTON( 7 ), ""+max_count[7]+" болотник" );
        player.Say( SAY_DIALOGBOX_BUTTON( 8 ), ""+max_count[8]+" потрошитель" );
        player.Say( SAY_DIALOGBOX_BUTTON( 9 ), ""+max_count[9]+" ж.потрошитель" );
        player.Say( SAY_DIALOGBOX_BUTTON( 10 ), ""+max_count[10]+" бандит" );
		player.Say( SAY_DIALOGBOX_BUTTON( 11 ), ""+max_count[11]+" бандитка" );
    }
		if( answerI == 9 )
    {
		Map@ map = player.GetMap();
	uint16[] max_count = {GetLocalVar( LMVAR_CRITTER_RegularRat, map.Id ).GetValue(),
	GetLocalVar( LMVAR_CRITTER_Mantis, map.Id ).GetValue(),
	GetLocalVar( LMVAR_CRITTER_Ant, map.Id ).GetValue(),
	GetLocalVar( LMVAR_CRITTER_RegularPigRat, map.Id ).GetValue(),
	GetLocalVar( LMVAR_CRITTER_Molerat, map.Id ).GetValue(),
	GetLocalVar( LMVAR_CRITTER_MutatedMolerat, map.Id ).GetValue(),
	GetLocalVar( LMVAR_CRITTER_SmallSilverGecko, map.Id ).GetValue(),
	GetLocalVar( LMVAR_CRITTER_GoldenGecko, map.Id ).GetValue(),
	GetLocalVar( LMVAR_CRITTER_WildDog, map.Id ).GetValue(),
	GetLocalVar( LMVAR_CRITTER_SmallRadscorpion, map.Id ).GetValue(),
	GetLocalVar( LMVAR_CRITTER_LargeRadscorpion, map.Id ).GetValue(),
	GetLocalVar( LMVAR_CRITTER_Brahmin, map.Id ).GetValue(),
	GetLocalVar( LMVAR_CRITTER_SporePlant, map.Id ).GetValue(),
	GetLocalVar( LMVAR_CRITTER_Alien, map.Id ).GetValue(),
	GetLocalVar( LMVAR_CRITTER_SmDeathclaw, map.Id ).GetValue(),
	GetLocalVar( LMVAR_CRITTER_Deathclaw, map.Id ).GetValue(),
	GetLocalVar( LMVAR_CRITTER_ToughDeathclaw, map.Id ).GetValue(),
	GetLocalVar( LMVAR_CRITTER_FireGecko, map.Id ).GetValue(),
	GetLocalVar( LMVAR_CRITTER_Centaur, map.Id ).GetValue(),
	GetLocalVar( LMVAR_CRITTER_Floater, map.Id ).GetValue(),
	GetLocalVar( LMVAR_CRITTER_MirelurkWeak, map.Id ).GetValue(),
	GetLocalVar( LMVAR_CRITTER_RipperMale, map.Id ).GetValue(),
	GetLocalVar( LMVAR_CRITTER_RipperFemale, map.Id ).GetValue(),
	GetLocalVar( LMVAR_CRITTER_BanditMale, map.Id ).GetValue(),
	GetLocalVar( LMVAR_CRITTER_BanditFemale, map.Id ).GetValue(),
	GetLocalVar( LMVAR_CRITTER_MauraderMale, map.Id ).GetValue(),
	GetLocalVar( LMVAR_CRITTER_RaiderMale, map.Id ).GetValue(),
	GetLocalVar( LMVAR_CRITTER_RaiderFemale, map.Id ).GetValue(),
	GetLocalVar( LMVAR_CRITTER_MaleSlaver, map.Id ).GetValue(),
	GetLocalVar( LMVAR_CRITTER_MaleSlaver2, map.Id ).GetValue(),
	GetLocalVar( LMVAR_CRITTER_ToughMaleThug, map.Id ).GetValue(),
	GetLocalVar( LMVAR_CRITTER_ToughFemaleThug, map.Id ).GetValue(),
	GetLocalVar( LMVAR_CRITTER_MaleTrapper, map.Id ).GetValue(),
	GetLocalVar( LMVAR_CRITTER_GreenGhoul, map.Id ).GetValue(),
	GetLocalVar( LMVAR_CRITTER_WhiteGhoul, map.Id ).GetValue(),
	GetLocalVar( LMVAR_CRITTER_Supermutant, map.Id ).GetValue()};

    Critter@[] critters;
    for( uint i = 0, j = max_count.length(); i < j; i++ )
		{
        map.GetCritters( 310 + i, FIND_ALL | FIND_ONLY_NPC, critters );
		for( uint ii = 0, jj = critters.length()-max_count[i]; ii < jj; ii++ )
			{
			DeleteNpc( critters[ii] );
			}
		critters.resize( 0 );
		}
    }
}

void answer_GM_PANNEL_MUSIC ( Critter& player, uint answerI, string& answerS)
{
	if ( answerI == 0) 
	{
		Map@ map = player.GetMap();
		PlayMusic( map, "DUMMY", 0, 0 );
	}
	if (answerI == 1)
	{
		Map@ map = player.GetMap();
		PlayMusic( map, "02 - Into The Dust.ogg", 0, 0 );
	}
	if (answerI == 2)
	{
		Map@ map = player.GetMap();
		PlayMusic( map, "afterdark.ogg", 0, 0 );
	}
	if (answerI == 3)
	{
		Map@ map = player.GetMap();
		PlayMusic( map, "tnt.ogg", 0, 0 );
	}
	if (answerI == 4)
	{
		Map@ map = player.GetMap();
		PlayMusic( map, "tmnt.ogg", 0, 0 );
	}
	if (answerI == 5)
	{
		Map@ map = player.GetMap();
		PlayMusic( map, "terminator2.ogg", 0, 0 );
	}
}

void answer_GM_PANNEL_SELF_MAPSPAWN1( Critter& player, uint answerI, string& answerS )
{
		player.StatBase[ ST_VAR0 ] = answerI;
        player.ShowScreen( SCREEN_SAY, 0, "gm@ask_GM_PANNEL_SELF_MAPSPAWN" );
        player.Say( SAY_SAY_TITLE, "количество" );
}

void answer_GM_PANNEL_SELF_MAPSPAWN2( Critter& player, uint answerI, string& answerS )
{
		player.StatBase[ ST_VAR0 ] = answerI+13;
        player.ShowScreen( SCREEN_SAY, 0, "gm@ask_GM_PANNEL_SELF_MAPSPAWN" );
        player.Say( SAY_SAY_TITLE, "количество" );
}

void ask_GM_PANNEL_SELF_MAPSPAWN( Critter& player, uint answerI, string& answerS )
{
    if( answerS.length() > 0 )
    {
        int number = 0;
        StrToInt( answerS, number );

		Map@ map = player.GetMap();
        int var_type = player.Stat[ ST_VAR0 ];
		switch( var_type )
        {
		case 0:	GetLocalVar( LMVAR_CRITTER_RegularRat, map.Id ) = ( number ); break;
        case 1:	GetLocalVar( LMVAR_CRITTER_Mantis, map.Id ) = ( number ); break;
        case 2:	GetLocalVar( LMVAR_CRITTER_Ant, map.Id ) = ( number ); break;
	    case 3:	GetLocalVar( LMVAR_CRITTER_RegularPigRat, map.Id ) = ( number ); break;
	    case 4:	GetLocalVar( LMVAR_CRITTER_Molerat, map.Id ) = ( number ); break;
	    case 5:	GetLocalVar( LMVAR_CRITTER_MutatedMolerat, map.Id ) = ( number ); break;
	    case 6:	GetLocalVar( LMVAR_CRITTER_SmallSilverGecko, map.Id ) = ( number ); break;
	    case 7:	GetLocalVar( LMVAR_CRITTER_GoldenGecko, map.Id ) = ( number ); break;
	    case 8:	GetLocalVar( LMVAR_CRITTER_WildDog, map.Id ) = ( number ); break;
	    case 9:	GetLocalVar( LMVAR_CRITTER_SmallRadscorpion, map.Id ) = ( number ); break;
	    case 10:	GetLocalVar( LMVAR_CRITTER_LargeRadscorpion, map.Id ) = ( number ); break;
	    case 11:	GetLocalVar( LMVAR_CRITTER_Brahmin, map.Id ) = ( number ); break;
	    case 12:	GetLocalVar( LMVAR_CRITTER_SporePlant, map.Id ) = ( number ); break;
	    case 13:	GetLocalVar( LMVAR_CRITTER_Alien, map.Id ) = ( number ); break;
	    case 14:	GetLocalVar( LMVAR_CRITTER_SmDeathclaw, map.Id ) = ( number ); break;
	    case 15:	GetLocalVar( LMVAR_CRITTER_Deathclaw, map.Id ) = ( number ); break;
	    case 16:	GetLocalVar( LMVAR_CRITTER_ToughDeathclaw, map.Id ) = ( number ); break;
	    case 17:	GetLocalVar( LMVAR_CRITTER_FireGecko, map.Id ) = ( number ); break;
	    case 18:	GetLocalVar( LMVAR_CRITTER_Centaur, map.Id ) = ( number ); break;
	    case 19:	GetLocalVar( LMVAR_CRITTER_Floater, map.Id ) = ( number ); break;
	    case 20:	GetLocalVar( LMVAR_CRITTER_MirelurkWeak, map.Id ) = ( number ); break;
	    case 21:	GetLocalVar( LMVAR_CRITTER_RipperMale, map.Id ) = ( number ); break;
	    case 22:	GetLocalVar( LMVAR_CRITTER_RipperFemale, map.Id ) = ( number ); break;
	    case 23:	GetLocalVar( LMVAR_CRITTER_BanditMale, map.Id ) = ( number ); break;
	    case 24:	GetLocalVar( LMVAR_CRITTER_BanditFemale, map.Id ) = ( number ); break;
	    case 25:	GetLocalVar( LMVAR_CRITTER_MauraderMale, map.Id ) = ( number ); break;
	    case 26:	GetLocalVar( LMVAR_CRITTER_RaiderMale, map.Id ) = ( number ); break;
	    case 27:	GetLocalVar( LMVAR_CRITTER_RaiderFemale, map.Id ) = ( number ); break;
	    case 28:	GetLocalVar( LMVAR_CRITTER_MaleSlaver, map.Id ) = ( number ); break;
	    case 29:	GetLocalVar( LMVAR_CRITTER_MaleSlaver2, map.Id ) = ( number ); break;
	    case 30:	GetLocalVar( LMVAR_CRITTER_ToughMaleThug, map.Id ) = ( number ); break;
	    case 31:	GetLocalVar( LMVAR_CRITTER_ToughFemaleThug, map.Id ) = ( number ); break;
	    case 32:	GetLocalVar( LMVAR_CRITTER_MaleTrapper, map.Id ) = ( number ); break;
	    case 33:	GetLocalVar( LMVAR_CRITTER_GreenGhoul, map.Id ) = ( number ); break;
	    case 34:	GetLocalVar( LMVAR_CRITTER_WhiteGhoul, map.Id ) = ( number ); break;
	    case 35:	GetLocalVar( LMVAR_CRITTER_Supermutant, map.Id) = ( number ); break;
		}

		if (var_type<=12)
		{
			uint16[] max_count = 
			{
				GetLocalVar( LMVAR_CRITTER_RegularRat, map.Id ).GetValue(),
				GetLocalVar( LMVAR_CRITTER_Mantis, map.Id ).GetValue(),
				GetLocalVar( LMVAR_CRITTER_Ant, map.Id ).GetValue(),
				GetLocalVar( LMVAR_CRITTER_RegularPigRat, map.Id ).GetValue(),
				GetLocalVar( LMVAR_CRITTER_Molerat, map.Id ).GetValue(),
				GetLocalVar( LMVAR_CRITTER_MutatedMolerat, map.Id ).GetValue(),
				GetLocalVar( LMVAR_CRITTER_SmallSilverGecko, map.Id ).GetValue(),
				GetLocalVar( LMVAR_CRITTER_GoldenGecko, map.Id ).GetValue(),
				GetLocalVar( LMVAR_CRITTER_WildDog, map.Id ).GetValue(),
				GetLocalVar( LMVAR_CRITTER_SmallRadscorpion, map.Id ).GetValue(),
				GetLocalVar( LMVAR_CRITTER_LargeRadscorpion, map.Id ).GetValue(),
				GetLocalVar( LMVAR_CRITTER_Brahmin, map.Id ).GetValue(),
				GetLocalVar( LMVAR_CRITTER_SporePlant, map.Id ).GetValue()
			};
			player.ShowScreen( SCREEN_DIALOGBOX, 12, "answer_GM_PANNEL_SELF_MAPSPAWN1" );
			player.Say( SAY_DIALOGBOX_TEXT, "Спавны текущей карты:");
			player.Say( SAY_DIALOGBOX_BUTTON( 0 ), ""+max_count[0]+" крысы" );
			player.Say( SAY_DIALOGBOX_BUTTON( 1 ), ""+max_count[1]+" мантисы" );
			player.Say( SAY_DIALOGBOX_BUTTON( 2 ), ""+max_count[2]+" муравьи" );
			player.Say( SAY_DIALOGBOX_BUTTON( 3 ), ""+max_count[3]+" кротокрысы" );
			player.Say( SAY_DIALOGBOX_BUTTON( 4 ), ""+max_count[4]+" кроты гризли" );
			player.Say( SAY_DIALOGBOX_BUTTON( 5 ), ""+max_count[5]+" кротокр мут" );
			player.Say( SAY_DIALOGBOX_BUTTON( 6 ), ""+max_count[6]+" гекко" );
			player.Say( SAY_DIALOGBOX_BUTTON( 7 ), ""+max_count[7]+" зол гекко" );
			player.Say( SAY_DIALOGBOX_BUTTON( 8 ), ""+max_count[8]+" волки" );
			player.Say( SAY_DIALOGBOX_BUTTON( 9 ), ""+max_count[9]+" м.скорп" );
			player.Say( SAY_DIALOGBOX_BUTTON( 10 ), ""+max_count[10]+" б.скорп" );
			player.Say( SAY_DIALOGBOX_BUTTON( 11 ), ""+max_count[11]+" растение" );
		}
		else
		{
		uint16[] max_count = {GetLocalVar( LMVAR_CRITTER_Alien, map.Id ).GetValue(),
		GetLocalVar( LMVAR_CRITTER_SmDeathclaw, map.Id ).GetValue(),
		GetLocalVar( LMVAR_CRITTER_Deathclaw, map.Id ).GetValue(),
		GetLocalVar( LMVAR_CRITTER_ToughDeathclaw, map.Id ).GetValue(),
		GetLocalVar( LMVAR_CRITTER_FireGecko, map.Id ).GetValue(),
		GetLocalVar( LMVAR_CRITTER_Centaur, map.Id ).GetValue(),
		GetLocalVar( LMVAR_CRITTER_Floater, map.Id ).GetValue(),
		GetLocalVar( LMVAR_CRITTER_MirelurkWeak, map.Id ).GetValue(),
		GetLocalVar( LMVAR_CRITTER_RipperMale, map.Id ).GetValue(),
		GetLocalVar( LMVAR_CRITTER_RipperFemale, map.Id ).GetValue(),
		GetLocalVar( LMVAR_CRITTER_BanditMale, map.Id ).GetValue(),
		GetLocalVar( LMVAR_CRITTER_BanditFemale, map.Id ).GetValue(),
		GetLocalVar( LMVAR_CRITTER_MauraderMale, map.Id ).GetValue(),
		GetLocalVar( LMVAR_CRITTER_RaiderMale, map.Id ).GetValue(),
		GetLocalVar( LMVAR_CRITTER_RaiderFemale, map.Id ).GetValue()};
        player.ShowScreen( SCREEN_DIALOGBOX, 12, "answer_GM_PANNEL_SELF_MAPSPAWN2" );
        player.Say( SAY_DIALOGBOX_TEXT, "Спавны текущей карты:");
        player.Say( SAY_DIALOGBOX_BUTTON( 0 ), ""+max_count[0]+" чужой" );
        player.Say( SAY_DIALOGBOX_BUTTON( 1 ), ""+max_count[1]+" м.коготь" );
        player.Say( SAY_DIALOGBOX_BUTTON( 2 ), ""+max_count[2]+" б.коготь" );
        player.Say( SAY_DIALOGBOX_BUTTON( 3 ), ""+max_count[3]+" сер.коготь" );
        player.Say( SAY_DIALOGBOX_BUTTON( 4 ), ""+max_count[4]+" огнегекко" );
        player.Say( SAY_DIALOGBOX_BUTTON( 5 ), ""+max_count[5]+" кентавр" );
        player.Say( SAY_DIALOGBOX_BUTTON( 6 ), ""+max_count[6]+" летатель" );
        player.Say( SAY_DIALOGBOX_BUTTON( 7 ), ""+max_count[7]+" болотник" );
        player.Say( SAY_DIALOGBOX_BUTTON( 8 ), ""+max_count[8]+" потрошитель" );
        player.Say( SAY_DIALOGBOX_BUTTON( 9 ), ""+max_count[9]+" ж.потрошитель" );
        player.Say( SAY_DIALOGBOX_BUTTON( 10 ), ""+max_count[10]+" бандит" );
		player.Say( SAY_DIALOGBOX_BUTTON( 11 ), ""+max_count[11]+" бандитка" );
		}
    }
}

void answer_GM_PANNEL_SELF_CHARLIST( Critter& player, uint answerI, string& answerS )
{
    if( answerI == 0 )
    {
        GameVar@ TotalPlayers = GetGlobalVar( GVAR_total_players );       // общее число персонажей
        for( uint i = 1; i <= TotalPlayers; i++ )
        {
            GameVar@ request = GetLocalVar( LVAR_requestStatus, i );
            GameVar@ activation = GetLocalVar( LVAR_activationStatus, i );
            if( activation.GetValue() == -2 )
            {
                file f;
                if( f.open( "adventurers\\" + i + ".txt", "r" ) >= 0 )
                {
                    string word = "";
                    uint   pos = 0;
                    uint   line = 0;
                    f.setPos( 0 );
                    while( !f.isEndOfFile() )
                    {
                        pos = f.getPos();
                        if( pos == 0 )
                        {
                            f.readLine( word );
                            if( word.length() > 0 )
                                player.RunClientScript( "client_main@loger", 0, 6, i, word, null );
                        }
                        else
                        {
                            line += 1;
                            f.readLine( word );
                            player.RunClientScript( "client_main@loger", line, 6, i, word, null );
                        }
                    }
                    f.close();
                }
            }
            else if( activation.GetValue() == -1 )
            {
                file f;
                if( f.open( "adventurers\\" + i + ".txt", "r" ) >= 0 )
                {
                    string word = "";
                    uint   pos = 0;
                    uint   line = 0;
                    f.setPos( 0 );
                    while( !f.isEndOfFile() )
                    {
                        pos = f.getPos();
                        if( pos == 0 )
                        {
                            f.readLine( word );
                            if( word.length() > 0 )
                                player.RunClientScript( "client_main@loger", 0, 7, i, word, null );
                        }
                        else
                        {
                            line += 1;
                            f.readLine( word );
                            player.RunClientScript( "client_main@loger", line, 7, i, word, null );
                        }
                    }
                    f.close();
                }
            }
            else
            {
                file f;
                if( f.open( "adventurers\\" + i + ".txt", "r" ) >= 0 )
                {
                    string word = "";
                    uint   pos = 0;
                    uint   line = 0;
                    f.setPos( 0 );
                    while( !f.isEndOfFile() )
                    {
                        pos = f.getPos();
                        if( pos == 0 )
                        {
                            f.readLine( word );
                            if( word.length() > 0 )
                                player.RunClientScript( "client_main@loger", 0, 5, i, word, null );
                        }
                        else
                        {
                            line += 1;
                            f.readLine( word );
                            player.RunClientScript( "client_main@loger", line, 5, i, word, null );
                        }
                    }
                    f.close();
                }
            }
        }
        player.Say( SAY_NETMSG, "Чарлисты записаны." );
    }
    if( answerI == 1 )
    {
        player.ShowScreen( SCREEN_SAY, 0, "gm@ask_GM_PANNEL_SELF_CHARLIST_aprove" );
        player.Say( SAY_SAY_TITLE, "Ид на одобрение" );
    }
    if( answerI == 2 )
    {
        player.ShowScreen( SCREEN_SAY, 0, "gm@ask_GM_PANNEL_SELF_CHARLIST_disaprove" );
        player.Say( SAY_SAY_TITLE, "Ид на отказ" );
    }
    if( answerI == 3 )
    {
        player.Say( SAY_NETMSG, "в разработке." );
    }
    if( answerI == 4 )
    {
        player.ShowScreen( SCREEN_SAY, 0, "gm@ask_GM_PANNEL_SELF_CHARLIST_redact" );
        player.Say( SAY_SAY_TITLE, "Ид на редактирование" );
    }
    if( answerI == 5 )
    {
        GM_PANNEL_SELF( player, 0, 0, 0, null, null );
    }
}

void ask_GM_PANNEL_SELF_CHARLIST_redact( Critter& player, uint answerI, string& answerS )
{
    if( answerS.length() > 0 )
    {
        int number = 0;
        StrToInt( answerS, number );
        if( !valid( GetCritter( number ) ) )
            player.Say( SAY_NETMSG, "персонажа " + GetPlayerName( number ) + "  " + number + " нет онлайн " );
        player.StatBase[ ST_VAR1 ] = number;
        GameVar@ request = GetLocalVar( LVAR_requestStatus, number );
        GameVar@ activation = GetLocalVar( LVAR_activationStatus, number );
        if( activation.GetValue() == -2 )
            player.Say( SAY_NETMSG, "Ранее был одобрен." );
        else if( activation.GetValue() == -1 )
        {
            player.Say( SAY_NETMSG, "Уже было отказан." );
            return;
        }
        player.ShowScreen( SCREEN_DIALOGBOX, 3, "answer_GM_PANNEL_SELF_CHARLIST_redact" );
        player.Say( SAY_DIALOGBOX_TEXT, "Выберите действие с чарсетом номер " + request.GetValue() + " на персонажа " + GetPlayerName( number ) + "  " + number );
        player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "Считать чарсет" );
		player.Say( SAY_DIALOGBOX_BUTTON( 1 ), "Записать чарсет" );
		player.Say( SAY_DIALOGBOX_BUTTON( 2 ), "Перейти к одобрению" );
    }
}

void answer_GM_PANNEL_SELF_CHARLIST_redact( Critter& player, uint answerI, string& answerS )
{
    if( answerI == 0 )
    {
		file f;
		if( f.open( "adventurers\\" + player.Stat[ ST_VAR1 ] + ".txt", "r" ) >= 0 )
		{
			Item@[] items;
			player.GetItems( SLOT_INV, items );
			player.GetItems( SLOT_HAND1, items );
			player.GetItems( SLOT_HAND2, items );
			DeleteItems( items );

			Item@ item;
			string text = "";
			uint   pos = 0;
			uint   line = 0;
			int    number = 0;
			int    count = 0;
			bool   isCount = true;
			f.setPos( 0 );
			while( !f.isEndOfFile() )
			{
				line ++;
				f.readLine( text );
				text.resize( text.length() - 1 );
				StrToInt( text, number );
				if( line == 2 )
				{
					if( text == "Человек" ) player.ChangeCrType( 69 );
					else if( text == "Супермутант" ) player.ChangeCrType( 21 );
					else if( text == "Гуль" ) player.ChangeCrType( 28 );
				}
				else if( line >= 6 && line <= 12)
				{
					player.ParamBase[ line - 6] = number;
				}
				else if( line >= 14 && line <= 31 )
				{
					player.ParamBase[ line + 186 ] = number;
				}
				else if( line >= 34 )
				{
					Log("line="+line+" , num="+number);
					if( number == 12345 ) break;
					if( isCount )
					{
						count = number;
						isCount = false;
					}
					else
					{
						@ item = player.AddItem( number, count );
						if( item.AmmoCount != 0 ) item.AmmoCount = 0;
						isCount = true;
					}
				}
			}
			f.close();
			player.Say( SAY_NETMSG, "Чарсет скачан." );
		}
		else return;
    }
    if( answerI == 1 )
    {
        string date = TimeToString( player );
        string race = "";
        if( player.Stat[ ST_BODY_TYPE ] == BT_GHOUL )
            race = "Гуль";
        else if( player.Stat[ ST_BODY_TYPE ] == BT_SUPER_MUTANT )
            race = "Супермутант";
        else
            race = "Человек";
        string   pass = "";		
		Critter@ critter = GetCritter( player.Stat[ ST_VAR1 ] );		
        if( critter.Quest[QST_MODOC_CITIZENSHIP] == 0 )
            pass = "чужак";
        else if( critter.Quest[QST_MODOC_CITIZENSHIP] == 11 )
            pass = "гость";
        else if( critter.Quest[QST_MODOC_CITIZENSHIP] == 12 )
            pass = "гражданин";
		GameVar@ request = GetLocalVar( LVAR_requestStatus, player.Stat[ ST_VAR1 ] );
        file f;
        if( f.open( "adventurers\\" + player.Id + ".txt", "w" ) >= 0 )
        {
            f.writeString( request.GetValue() + "\n" +
                           race + "  -  " + pass + "\n" +
                           date + "\n" +
                           GetPlayerName( player.Id ) + "\n" +
                           "\n" +
                           player.StatBase[ ST_STRENGTH ] + "\n" +
                           player.StatBase[ ST_PERCEPTION ] + "\n" +
                           player.StatBase[ ST_ENDURANCE ] + "\n" +
                           player.StatBase[ ST_CHARISMA ] + "\n" +
                           player.StatBase[ ST_INTELLECT ] + "\n" +
                           player.StatBase[ ST_AGILITY ] + "\n" +
                           player.StatBase[ ST_LUCK ] + "\n" + "\n" +
                           player.SkillBase[ SK_SMALL_GUNS ] + "\n" +
                           player.SkillBase[ SK_BIG_GUNS ] + "\n" +
                           player.SkillBase[ SK_ENERGY_WEAPONS ] + "\n" +
                           player.SkillBase[ SK_UNARMED ] + "\n" +
                           player.SkillBase[ SK_MELEE_WEAPONS ] + "\n" +
                           player.SkillBase[ SK_THROWING ] + "\n" +
                           player.SkillBase[ SK_FIRST_AID ] + "\n" +
                           player.SkillBase[ SK_DOCTOR ] + "\n" +
                           player.SkillBase[ SK_SNEAK ] + "\n" +
                           player.SkillBase[ SK_LOCKPICK ] + "\n" +
                           player.SkillBase[ SK_STEAL ] + "\n" +
                           player.SkillBase[ SK_TRAPS ] + "\n" +
                           player.SkillBase[ SK_SCIENCE ] + "\n" +
                           player.SkillBase[ SK_REPAIR ] + "\n" +
                           player.SkillBase[ SK_SPEECH ] + "\n" +
                           player.SkillBase[ SK_BARTER ] + "\n" +
                           player.SkillBase[ SK_GAMBLING ] + "\n" +
                           player.SkillBase[ SK_OUTDOORSMAN ] + "\n" + "\n" + "Инвентарь" + "\n" );
						   
            Item@[] items;
            player.GetItems( SLOT_ARMOR, items );
            player.GetItems( SLOT_HAND1, items );
            player.GetItems( SLOT_HAND2, items );
            player.GetItems( SLOT_INV, items );
            for( uint i = 0; i < items.length(); i++ )
            {
                f.writeString( items[ i ].GetCount() + "\n" );
                f.writeString( items[ i ].GetProtoId() + "\n" );
            }
			f.writeString( 12345 + "\n" );
            f.close();
			player.Say( SAY_NETMSG, "Чарсет записан." );
        }
	}
    if( answerI == 2 )
		ask_GM_PANNEL_SELF_CHARLIST_aprove( player, answerI, ""+player.Stat[ ST_VAR1 ] );
}

void ask_GM_PANNEL_SELF_CHARLIST_disaprove( Critter& player, uint answerI, string& answerS )
{
    if( answerS.length() > 0 )
    {
        int number = 0;
        StrToInt( answerS, number );
        if( !valid( GetCritter( number ) ) )
            player.Say( SAY_NETMSG, "персонажа " + GetPlayerName( number ) + "  " + number + " нет онлайн " );
        player.StatBase[ ST_VAR1 ] = number;
        GameVar@ request = GetLocalVar( LVAR_requestStatus, number );
        GameVar@ activation = GetLocalVar( LVAR_activationStatus, number );
        if( activation.GetValue() == -2 )
            player.Say( SAY_NETMSG, "Ранее был одобрен." );
        else if( activation.GetValue() == -1 )
        {
            player.Say( SAY_NETMSG, "Уже было отказан." );
            return;
        }
        player.ShowScreen( SCREEN_DIALOGBOX, 1, "answer_GM_PANNEL_SELF_CHARLIST_disaprove" );
        player.Say( SAY_DIALOGBOX_TEXT, "Подтвердите отказ запроса номер " + request.GetValue() + " на чарлиста " + GetPlayerName( number ) + "  " + number );
        player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "Отказ подтверждаю" );
    }
}

void answer_GM_PANNEL_SELF_CHARLIST_disaprove( Critter& player, uint answerI, string& answerS )
{
    if( answerI == 0 )
    {
        GameVar@ activation = GetLocalVar( LVAR_activationStatus, player.Stat[ ST_VAR1 ] );
        activation = -1;
        player.Say( SAY_NETMSG, "Чарсету персонажа " + GetPlayerName( player.Stat[ ST_VAR1 ] ) + " отказанно в активации." );
    }
}

void ask_GM_PANNEL_SELF_CHARLIST_aprove( Critter& player, uint answerI, string& answerS )
{
    if( answerS.length() > 0 )
    {
        int id = 0;
        StrToInt( answerS, id );
		Critter@ hero = GetCritter( id );
        GameVar@ activation = GetLocalVar( LVAR_activationStatus, id );
		
        player.StatBase[ ST_VAR1 ] = id;
        GameVar@ request = GetLocalVar( LVAR_requestStatus, id );

		string description = "Подтвердите запрос номер " + request.GetValue() + " на активацию чарлиста " + GetPlayerName( id ) + "  " + id + ", выбран пропуск = ";
		switch( activation.GetValue() )
		{
			case 0: 
			{
				player.Say( SAY_NETMSG, "Персонаж " + GetPlayerName( id ) + " ещё не подтвердил анкету!" );
				if( @hero !is null )
					hero.Say( SAY_NETMSG, "ГМ попытался вас активировать до того, как вы подтвердили анкету. Нажмите 'подтведить' в разговоре с гидом активации!" );
				return;
			}
			
			case -2:
			{
				player.Say( SAY_NETMSG, "Уже активирован." );
				return;
			}
			
			case -1:
			{
				player.Say( SAY_NETMSG, "Уже отказанно." );
				return;
			}
			
			case 1:	description += "чужак"; 		break;
			case 12:	description += "гость"; 		break;
			case 13:	description += "гражданин"; break;
			default:  						break;
		}
		
		if( @hero is null )
			description += ". Игрок оффлайн";
		
        player.ShowScreen( SCREEN_DIALOGBOX, @hero is null ? 1 : 5, "answer_GM_PANNEL_SELF_CHARLIST_aprove" );
        player.Say( SAY_DIALOGBOX_TEXT, description );
        player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "Активировать" );
        if( @hero !is null )
		{
			player.Say( SAY_DIALOGBOX_BUTTON( 1 ), "Актив<чужак>" );
			player.Say( SAY_DIALOGBOX_BUTTON( 2 ), "Актив<гость>" );
			player.Say( SAY_DIALOGBOX_BUTTON( 3 ), "Актив<гражданин>" );
			player.Say( SAY_DIALOGBOX_BUTTON( 4 ), "Актив<выживалец>" );
		}
    }
}

void answer_GM_PANNEL_SELF_CHARLIST_aprove( Critter& player, uint answerI, string& answerS )
{
	uint id = player.Stat[ ST_VAR1 ];
	string name = GetPlayerName( id );
	Critter@ critter = GetCritter( id );
	if( @critter is null )
		player.Say( SAY_NETMSG, "Игрок не существует, либо оффлайн" );

	switch( answerI )
	{
		case 1: critter.QuestBase[QST_MODOC_CITIZENSHIP] = 0; break;
		case 2: critter.QuestBase[QST_MODOC_CITIZENSHIP] = 11; break;
		case 3: critter.QuestBase[QST_MODOC_CITIZENSHIP] = 12; break;
		case 4: critter.QuestBase[QST_MODOC_CITIZENSHIP] = 13; break;
		default: break;
	}
	GetLocalVar( LVAR_activationStatus, id ) = -2;
    player.Say( SAY_NETMSG, "Чарсет персонажа " + name + " одобрен." );
    Log_GM( player, id, GM_ACTIVATION, answerI, answerI == 0 ? critter.Quest[QST_MODOC_CITIZENSHIP] : 0, 0 );
    file f;
    if( f.open( "adventurers\\" + id + ".txt", "a" ) >= 0 )
    {
        f.writeString( "12345\n" + "\n" + GetPlayerName( player.Id ) + "\n" );
        f.close();
    }
    ShowInputBoxScreen( player, "gm@unsafe_CharsetComment#Коммент", 0, INPUTBOX_CLOSE_ON_ENTER );
}

GMCommand( unsafe_CharsetComment )
{
    if( @param3 !is null && param3.length() != 0 )
    {
        file f;
        if( f.open( "adventurers\\" + player.Stat[ ST_VAR1 ] + ".txt", "a" ) >= 0 )
        {
            f.writeString( "-------------------------------------------------------- \n" + param3 + "\n" + "\n" );
            f.close();
        }
    }
	Critter@ critter = GetCritter( player.Stat[ ST_VAR1 ] );
	if(valid(critter))
		critter.Say( SAY_NETMSG, "ГМ одобрил вашу анкету. Кликните на Гида что бы выбрать стартовую локацию." );
}

void answer_GM_PANNEL_SELF_VAULT( Critter& player, uint answerI, string& answerS )
{
    if( answerI == 9 )
    {
        GM_PANNEL_SELF( player, 0, 0, 0, null, null );
    }
	else OpenCrate( player, answerI + 1 );
}

void answer_GM_PANNEL_SELF_ID( Critter& player, uint answerI, string& answerS )
{
    if( answerI == 0 )
    {
        player.ShowScreen( SCREEN_DIALOGBOX, 5, "answer_GM_PANNEL_SELF_ID_MODES" );
        player.Say( SAY_DIALOGBOX_TEXT, "Выберете назначаемый режим" );
        player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "0 старт" );
        player.Say( SAY_DIALOGBOX_BUTTON( 1 ), "1 приключенец" );
        player.Say( SAY_DIALOGBOX_BUTTON( 2 ), "2 выживание" );
        player.Say( SAY_DIALOGBOX_BUTTON( 3 ), "3 аркада" );
        player.Say( SAY_DIALOGBOX_BUTTON( 4 ), "4 тест" );
    }
    if( answerI == 1 )
    {
	    player.ShowScreen( SCREEN_DIALOGBOX, AnswerIdFactions::CountAnswer, "answer_GM_PANNEL_SELF_ID_FACTIONS" );
        player.Say( SAY_DIALOGBOX_TEXT, "Выберете назначаемый режим" );
        player.Say( SAY_DIALOGBOX_BUTTON( AnswerIdFactions::NoFaction ), "0 - без фракции" );
        player.Say( SAY_DIALOGBOX_BUTTON( AnswerIdFactions::Administration ), "1 - администрация" );
        player.Say( SAY_DIALOGBOX_BUTTON( AnswerIdFactions::Cop ), "2 - полиция" );
        player.Say( SAY_DIALOGBOX_BUTTON( AnswerIdFactions::Mafia ), "3 - мафия" );
        player.Say( SAY_DIALOGBOX_BUTTON( AnswerIdFactions::Mutant ), "4 - мутанты" );
        player.Say( SAY_DIALOGBOX_BUTTON( AnswerIdFactions::Fort ), "5 - форт" );
        player.Say( SAY_DIALOGBOX_BUTTON( AnswerIdFactions::Raider ), "6 - рейдеры" );
        player.Say( SAY_DIALOGBOX_BUTTON( AnswerIdFactions::Sheriff ), "7 - Шериф" );
        player.Say( SAY_DIALOGBOX_BUTTON( AnswerIdFactions::Mayor ), "8 - Мэр" );
        player.Say( SAY_DIALOGBOX_BUTTON( AnswerIdFactions::Strange ), "0 - чужак" );
        player.Say( SAY_DIALOGBOX_BUTTON( AnswerIdFactions::TimeGuest ), "1 - временный гость" );
        player.Say( SAY_DIALOGBOX_BUTTON( AnswerIdFactions::Guest ), "2 - гость" );
        player.Say( SAY_DIALOGBOX_BUTTON( AnswerIdFactions::Citizen ), "3 - гражданин" );
        player.Say( SAY_DIALOGBOX_BUTTON( AnswerIdFactions::RichCitizen ), "4 - богатый гражданин" );
        player.Say( SAY_DIALOGBOX_BUTTON( AnswerIdFactions::Outcast ), "10 - изгой" );
    }
    if( answerI == 2 )
    {
        player.ShowScreen( SCREEN_SAY, 0, "gm@ask_GM_PANNEL_SELF_ID_CHARLIST" );
        player.Say( SAY_SAY_TITLE, "Введите Ид" );
    }
    if( answerI == 3 )
    {
        player.ShowScreen( SCREEN_SAY, 0, "gm@ask_GM_PANNEL_SELF_ID_INVENTORY" );
        player.Say( SAY_SAY_TITLE, "Введите Ид" );
    }
    if( answerI == 4 )
    {
        player.ShowScreen( SCREEN_SAY, 0, "gm@ask_GM_PANNEL_SELF_ID_BAN" );
        player.Say( SAY_SAY_TITLE, "Бан по Ид" );
    }
    if( answerI == 5 )
    {
        player.ShowScreen( SCREEN_SAY, 0, "gm@ask_GM_PANNEL_SELF_ID_UNBAN" );
        player.Say( SAY_SAY_TITLE, "РазБан по Ид" );
    }
    if( answerI == 6 )
    {
        GM_PANNEL_SELF( player, 0, 0, 0, null, null );
    }
}

void ask_GM_PANNEL_SELF_ID_BAN( Critter& player, uint answerI, string& answerS )
{
    if( answerS.length() > 0 )
    {
        int number = 0;
        StrToInt( answerS, number );
        if( number <= 0 )
        {
            player.Say( SAY_NETMSG, "неверное значение" );
            return;
        }
        if( !valid( GetCritter( number ) ) )
            player.Say( SAY_NETMSG, "персонажа " + GetPlayerName( number ) + "  " + number + " нет онлайн " );
        player.StatBase[ ST_VAR1 ] = number;

        player.ShowScreen( SCREEN_SAY, 0, "gm@ask_GM_PANNEL_SELF_ID_BAN_TIME" );
        player.Say( SAY_SAY_TITLE, "на Часов" );
    }
}

void ask_GM_PANNEL_SELF_ID_BAN_TIME( Critter& player, uint answerI, string& answerS )
{
    if( answerS.length() > 0 )
    {
        int crId = player.Stat[ ST_VAR1 ];
        int number = 0;
        StrToInt( answerS, number );
        if( number <= 0 )
        {
            player.Say( SAY_NETMSG, "неверное значение" );
            return;
        }
        BanId( player, crId, number, 0 );
        if( valid( GetCritter( crId ) ) )
            KickId( player, crId, 0, 0 );
        player.Say( SAY_NETMSG, "персонаж " + GetPlayerName( crId ) + "(" + crId + ")" + " заблокирован на " + number + " часов" );
    }
}

void ask_GM_PANNEL_SELF_ID_UNBAN( Critter& player, uint answerI, string& answerS )
{
    if( answerS.length() > 0 )
    {
        int number = 0;
        StrToInt( answerS, number );
        if( number <= 0 )
        {
            player.Say( SAY_NETMSG, "неверное значение" );
            return;
        }
        if( !valid( GetCritter( number ) ) )
            player.Say( SAY_NETMSG, "персонажа " + GetPlayerName( number ) + "  " + number + " нет онлайн " );
        UnbanId( player, number, 0, 0 );
        player.Say( SAY_NETMSG, "персонаж " + GetPlayerName( number ) + "(" + number + ")" + " разблокирован" );
    }
}

void ask_GM_PANNEL_SELF_ID_INVENTORY( Critter& player, uint answerI, string& answerS )
{
    if( answerS.length() > 0 )
    {
        int number = 0;
        StrToInt( answerS, number );
        if( number <= 0 )
        {
            player.Say( SAY_NETMSG, "неверное значение" );
            return;
        }
        if( !valid( GetCritter( number ) ) )
        {
            player.Say( SAY_NETMSG, "персонажа " + GetPlayerName( number ) + "  " + number + " нет онлайн " );
            return;
        }
        player.ShowContainer( ( GetCritter( number ) ), null, TRANSFER_FAR_CRIT );
    }
}

void ask_GM_PANNEL_SELF_ID_CHARLIST( Critter& player, uint answerI, string& answerS )
{
    if( answerS.length() > 0 )
    {
        int number = 0;
        StrToInt( answerS, number );
        if( number <= 0 )
        {
            player.Say( SAY_NETMSG, "неверное значение" );
            return;
        }
        if( !valid( GetCritter( number ) ) )
            player.Say( SAY_NETMSG, "персонажа " + GetPlayerName( number ) + "  " + number + " нет онлайн " );
        file f;
        if( f.open( "adventurers\\" + number + ".txt", "r" ) >= 0 )
        {
            string word = "";
            uint   pos = 0;
            f.setPos( 0 );
            while( !f.isEndOfFile() )
            {
                pos = f.getPos();
                if( pos == 0 )
                {
                    f.readLine( word );
                    player.RunClientScript( "client_main@loger", 0, 5, number, word, null );
                }
                else
                {
                    f.readLine( word );
                    player.RunClientScript( "client_main@loger", 1, 5, number, word, null );
                }
            }
            player.Say( SAY_NETMSG, "чарлист игрока " + GetPlayerName( number ) + "  " + number + " записан" );
            f.close();
        }
        else
            Log( "can't open!" );
    }
}

void answer_GM_PANNEL_SELF_ID_MODES( Critter& player, uint answerI, string& answerS )
{
    if( answerI == 0 )
    {
        player.StatBase[ ST_VAR1 ] = 0;
        player.ShowScreen( SCREEN_SAY, 0, "gm@ask_GM_PANNEL_SELF_ID_MODES" );
        player.Say( SAY_SAY_TITLE, "Ид - старт фракц" );
    }
    if( answerI == 1 )
    {
        player.StatBase[ ST_VAR1 ] = 1;
        player.ShowScreen( SCREEN_SAY, 0, "gm@ask_GM_PANNEL_SELF_ID_MODES" );
        player.Say( SAY_SAY_TITLE, "Ид - приключенец" );
    }
    if( answerI == 2 )
    {
        player.StatBase[ ST_VAR1 ] = 2;
        player.ShowScreen( SCREEN_SAY, 0, "gm@ask_GM_PANNEL_SELF_ID_MODES" );
        player.Say( SAY_SAY_TITLE, "Ид - выживание" );
    }
    if( answerI == 3 )
    {
        player.StatBase[ ST_VAR1 ] = 3;
        player.ShowScreen( SCREEN_SAY, 0, "gm@ask_GM_PANNEL_SELF_ID_MODES" );
        player.Say( SAY_SAY_TITLE, "Ид - аркада" );
    }
    if( answerI == 4 )
    {
        player.StatBase[ ST_VAR1 ] = 4;
        player.ShowScreen( SCREEN_SAY, 0, "gm@ask_GM_PANNEL_SELF_ID_MODES" );
        player.Say( SAY_SAY_TITLE, "Ид - тест" );
    }
}

void ask_GM_PANNEL_SELF_ID_MODES( Critter& player, uint answerI, string& answerS )
{
    int mode = player.Stat[ ST_VAR1 ];
    if( answerS.length() > 0 )
    {
        int      number = 0;
        StrToInt( answerS, number );
        Critter@ target = GetCritter( number );
        if( !valid( target ) )
        {
            player.Say( SAY_NETMSG, "персонажа " + number + " нет онлайн " );
            return;
        }
        target.StatBase[ QST_GAMEMODE ] = mode;
        player.Say( SAY_NETMSG, "вы изменили игровой режим игрока " + GetPlayerName( player.Id ) + " с номером " + number + " на " + mode );
        Log_factions( player, number, 0, mode, null, null );

        player.ShowScreen( SCREEN_DIALOGBOX, 5, "answer_GM_PANNEL_SELF_ID_MODES" );
        player.Say( SAY_DIALOGBOX_TEXT, "Выберете назначаемый режим" );
        player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "0 старт" );
        player.Say( SAY_DIALOGBOX_BUTTON( 1 ), "1 приключенец" );
        player.Say( SAY_DIALOGBOX_BUTTON( 2 ), "2 выживание" );
        player.Say( SAY_DIALOGBOX_BUTTON( 3 ), "3 аркада" );
        player.Say( SAY_DIALOGBOX_BUTTON( 4 ), "4 тест" );
    }
}

enum AnswerIdFactions
{
	NoFaction,
	Administration,
	Cop,
	Mafia,
	Mutant,
	Fort,
	Raider,
	Sheriff,
	Mayor,
	
	Strange,
	TimeGuest,
	Guest,
	Citizen,
	RichCitizen,
	Outcast,
	
	CountAnswer
}

void answer_GM_PANNEL_SELF_ID_FACTIONS( Critter& player, uint answerI, string& answerS )
{		
    player.ShowScreen( SCREEN_SAY, 0, "ask_GM_PANNEL_SELF_ID_FACTIONS" );
	switch( answerI )
	{
		case AnswerIdFactions::NoFaction :
		{
			player.StatBase[ ST_VAR1 ] = 0;
			player.Say( SAY_SAY_TITLE, "Ид - убрать фракции" );
		} break;
		
		case AnswerIdFactions::Administration :
		{
			player.StatBase[ ST_VAR1 ] = 1;
			player.Say( SAY_SAY_TITLE, "Ид - в администрацию" );
		} break;
		
		case AnswerIdFactions::Cop :
		{
			player.StatBase[ ST_VAR1 ] = 2;
			player.Say( SAY_SAY_TITLE, "Ид - в полицию" );
		} break;
		
		case AnswerIdFactions::Mafia :
		{
			player.StatBase[ ST_VAR1 ] = 3;
			player.Say( SAY_SAY_TITLE, "Ид - в мафию" );
		} break;
		
		case AnswerIdFactions::Mutant :
		{
			player.StatBase[ ST_VAR1 ] = 4;
			player.Say( SAY_SAY_TITLE, "Ид - в мутанты" );
		} break;
		
		case AnswerIdFactions::Fort :
		{
			player.StatBase[ ST_VAR1 ] = 5;
			player.Say( SAY_SAY_TITLE, "Ид - в форт" );
		} break;
		
		case AnswerIdFactions::Raider :
		{
			player.StatBase[ ST_VAR1 ] = 6;
			player.Say( SAY_SAY_TITLE, "Ид - в рейдеры" );
		} break;
		
		case AnswerIdFactions::Sheriff :
		{
			player.StatBase[ ST_VAR1 ] = 7;
			player.Say( SAY_SAY_TITLE, "Ид - в шерифы" );
		} break;
		
		case AnswerIdFactions::Mayor :
		{
			player.StatBase[ ST_VAR1 ] = 8;
			player.Say( SAY_SAY_TITLE, "Ид - в мэры" );
		} break;
		
		case AnswerIdFactions::Strange :
		{
			player.StatBase[ ST_VAR1 ] = 10;
			player.Say( SAY_SAY_TITLE, "Ид - чужак" );
		} break;
		
		case AnswerIdFactions::TimeGuest :
		{
			player.StatBase[ ST_VAR1 ] = 11;
			player.Say( SAY_SAY_TITLE, "Ид - врем.гость" );
		} break;
		
		case AnswerIdFactions::Guest :
		{
			player.StatBase[ ST_VAR1 ] = 12;
			player.Say( SAY_SAY_TITLE, "Ид - гость" );
		} break;
		
		case AnswerIdFactions::Citizen :
		{
			player.StatBase[ ST_VAR1 ] = 13;
			player.Say( SAY_SAY_TITLE, "Ид - гражданин" );
		} break;
		
		case AnswerIdFactions::RichCitizen :
		{
			player.StatBase[ ST_VAR1 ] = 14;
			player.Say( SAY_SAY_TITLE, "Ид - богатый" );
		} break;
		
		case AnswerIdFactions::Outcast :
		{
			player.StatBase[ ST_VAR1 ] = 20;
			player.Say( SAY_SAY_TITLE, "Ид - изгой" );
		} break;
		
		default: 
		{
			player.StatBase[ ST_VAR1 ] = -1;
			player.Say( SAY_SAY_TITLE, "Ид - Error" );
		} break;
	}
}

void ask_GM_PANNEL_SELF_ID_FACTIONS( Critter& player, uint answerI, string& answerS )
{
    int mode = player.Stat[ ST_VAR1 ];
    if( answerS.length() > 0 )
    {
		if( mode != -1 )
		{
			int id = 0;
			StrToInt( answerS, id );
			Critter@ target = GetCritter( id );
			string   name = GetPlayerName( id );
			if( mode < 10 )
			{
				if( mode == AnswerIdFactions::Mayor )
					target.AddItem( 913, 1 );
				else if( mode == AnswerIdFactions::Sheriff )
					target.AddItem( 1455, 1 );
			
				target.QuestBase[QST_FACTION] = mode;
				player.Say( SAY_NETMSG, "вы изменили фракцию игрока " + name + " с номером " + id + " на " + mode );
				Log_factions( player, id, 2, mode, null, null );
			}
			else
			{
				target.QuestBase[QST_MODOC_CITIZENSHIP] = ( mode - 10 );
				player.Say( SAY_NETMSG, "вы изменили пропуск игрока " + name + " с номером " + id + " на " + mode );
				Log_factions( player, id, 1, mode, null, null );
			}
		}
	
	    player.ShowScreen( SCREEN_DIALOGBOX, AnswerIdFactions::CountAnswer, "answer_GM_PANNEL_SELF_ID_FACTIONS" );
        player.Say( SAY_DIALOGBOX_TEXT, "Выберете назначаемый режим" );
        player.Say( SAY_DIALOGBOX_BUTTON( AnswerIdFactions::NoFaction ), "0 - без фракции" );
        player.Say( SAY_DIALOGBOX_BUTTON( AnswerIdFactions::Administration ), "1 - администрация" );
        player.Say( SAY_DIALOGBOX_BUTTON( AnswerIdFactions::Cop ), "2 - полиция" );
        player.Say( SAY_DIALOGBOX_BUTTON( AnswerIdFactions::Mafia ), "3 - мафия" );
        player.Say( SAY_DIALOGBOX_BUTTON( AnswerIdFactions::Mutant ), "4 - мутанты" );
        player.Say( SAY_DIALOGBOX_BUTTON( AnswerIdFactions::Fort ), "5 - форт" );
        player.Say( SAY_DIALOGBOX_BUTTON( AnswerIdFactions::Raider ), "6 - рейдеры" );
        player.Say( SAY_DIALOGBOX_BUTTON( AnswerIdFactions::Sheriff ), "7 - Шериф" );
        player.Say( SAY_DIALOGBOX_BUTTON( AnswerIdFactions::Mayor ), "8 - Мэр" );
        player.Say( SAY_DIALOGBOX_BUTTON( AnswerIdFactions::Strange ), "0 - чужак" );
        player.Say( SAY_DIALOGBOX_BUTTON( AnswerIdFactions::TimeGuest ), "1 - временный гость" );
        player.Say( SAY_DIALOGBOX_BUTTON( AnswerIdFactions::Guest ), "2 - гость" );
        player.Say( SAY_DIALOGBOX_BUTTON( AnswerIdFactions::Citizen ), "3 - гражданин" );
        player.Say( SAY_DIALOGBOX_BUTTON( AnswerIdFactions::RichCitizen ), "4 - богатый гражданин" );
        player.Say( SAY_DIALOGBOX_BUTTON( AnswerIdFactions::Outcast ), "10 - изгой" );
    }
}

void answer_GM_PANNEL_SELF_LOG( Critter& cr, uint answerI, string& answerS )
{
    if( !valid( cr ) )
        return;
    if( answerI == 0 )
    {
        file f;
        if( f.open( "logs\\help_pleads.txt", "r" ) >= 0 )
        {
            string word = "";
            uint   pos = 0;
            f.setPos( 0 );
            while( !f.isEndOfFile() )
            {
                pos = f.getPos();
                if( pos == 0 )
                {
                    f.readLine( word );
                    cr.RunClientScript( "client_main@loger", 0, 0, 0, word, null );
                }
                else
                {
                    f.readLine( word );
                    cr.RunClientScript( "client_main@loger", 1, 0, 0, word, null );
                }
            }
            f.close();
        }
        else
            Log( "can't open!" );
    }
    if( answerI == 1 )
    {
        file f;
        if( f.open( "logs\\warnings.txt", "r" ) >= 0 )
        {
            string word = "";
            uint   pos = 0;
            f.setPos( 0 );
            while( !f.isEndOfFile() )
            {
                pos = f.getPos();
                if( pos == 0 )
                {
                    f.readLine( word );
                    cr.RunClientScript( "client_main@loger", 0, 1, 0, word, null );
                }
                else
                {
                    f.readLine( word );
                    cr.RunClientScript( "client_main@loger", 1, 1, 0, word, null );
                }
            }
            f.close();
        }
        else
            Log( "can't open!" );
    }
    if( answerI == 2 )
    {
        file f;
        if( f.open( "logs\\killings.txt", "r" ) >= 0 )
        {
            string word = "";
            uint   pos = 0;
            f.setPos( 0 );
            while( !f.isEndOfFile() )
            {
                pos = f.getPos();
                if( pos == 0 )
                {
                    f.readLine( word );
                    cr.RunClientScript( "client_main@loger", 0, 2, 0, word, null );
                }
                else
                {
                    f.readLine( word );
                    cr.RunClientScript( "client_main@loger", 1, 2, 0, word, null );
                }
            }
            f.close();
        }
        else
            Log( "can't open!" );
    }
    if( answerI == 3 )
    {
        file f;
        if( f.open( "logs\\factions.txt", "r" ) >= 0 )
        {
            string word = "";
            uint   pos = 0;
            f.setPos( 0 );
            while( !f.isEndOfFile() )
            {
                pos = f.getPos();
                if( pos == 0 )
                {
                    f.readLine( word );
                    cr.RunClientScript( "client_main@loger", 0, 3, 0, word, null );
                }
                else
                {
                    f.readLine( word );
                    cr.RunClientScript( "client_main@loger", 1, 3, 0, word, null );
                }
            }
            f.close();
        }
        else
            Log( "can't open!" );
    }
    if( answerI == 4 )
    {
        file f;
        if( f.open( "save\\bans\\qbans.txt", "r" ) >= 0 )
        {
            string word = "";
            uint   pos = 0;
            f.setPos( 0 );
            while( !f.isEndOfFile() )
            {
                pos = f.getPos();
                if( pos == 0 )
                {
                    f.readLine( word );
                    cr.RunClientScript( "client_main@loger", 0, 4, 0, word, null );
                }
                else
                {
                    f.readLine( word );
                    cr.RunClientScript( "client_main@loger", 1, 4, 0, word, null );
                }
            }
            f.close();
        }
        else
            Log( "can't open!" );
    }
    if( answerI == 5 )
    {
        file f;
        if( f.open( "save\\bans\\crims.txt", "r" ) >= 0 )
        {
            string word = "";
            uint   pos = 0;
            f.setPos( 0 );
            while( !f.isEndOfFile() )
            {
                pos = f.getPos();
                if( pos == 0 )
                {
                    f.readLine( word );
                    cr.RunClientScript( "client_main@loger", 0, 8, 0, word, null );
                }
                else
                {
                    f.readLine( word );
                    cr.RunClientScript( "client_main@loger", 1, 8, 0, word, null );
                }
            }
            f.close();
        }
        else
            Log( "can't open!" );
    }
    if( answerI == 9 && cr.GetAccess() > ACCESS_MODER )
    {
        cr.ShowScreen( SCREEN_DIALOGBOX, 13, "answer_GM_PANNEL_SELF_LOG_CLEAN" );
        cr.Say( SAY_DIALOGBOX_TEXT, "Выберете назначаемый режим" );
        cr.Say( SAY_DIALOGBOX_BUTTON( 0 ), "0 - очистка help" );
        cr.Say( SAY_DIALOGBOX_BUTTON( 1 ), "1 - очистка warn" );
        cr.Say( SAY_DIALOGBOX_BUTTON( 2 ), "2 - очистка kill" );
        cr.Say( SAY_DIALOGBOX_BUTTON( 3 ), "3 - очистка factions" );
    }
    if( answerI == 10 )
    {
        GM_PANNEL_SELF( cr, 0, 0, 0, null, null );
    }
}

void answer_GM_PANNEL_SELF_LOG_CLEAN( Critter& player, uint answerI, string& answerS )
{
    if( answerI == 0 )
    {
        file f;
        if( f.open( "logs\\help_pleads.txt", "w" ) >= 0 )
        {
            // f.writeString("");
            f.close();
        }
        else
            Log( "can't open!" );
    }
    if( answerI == 1 )
    {
        file f;
        if( f.open( "logs\\warnings.txt", "w" ) >= 0 )
        {
            // f.writeString("");
            f.close();
        }
        else
            Log( "can't open!" );
    }
    if( answerI == 2 )
    {
        file f;
        if( f.open( "logs\\killings.txt", "w" ) >= 0 )
        {
            // f.writeString("");
            f.close();
        }
        else
            Log( "can't open!" );
    }
    if( answerI == 3 )
    {
        file f;
        if( f.open( "logs\\factions.txt", "w" ) >= 0 )
        {
            // f.writeString("");
            f.close();
        }
        else
            Log( "can't open!" );
    }
}

void answer_GM_PANNEL_SELF_MYMODES( Critter& player, uint answerI, string& answerS )
{
    if( answerI == 0 )
    {
        GM_PANNEL_CRITTER_PLAYER( player, player.Id, 0, 0, null, null );
    }
    if( answerI == 1 )
    {
        if( player.ModeBase[ MODE_INVULNERABLE ] == 0 )
            player.ModeBase[ MODE_INVULNERABLE ] = 1;
        else
            player.ModeBase[ MODE_INVULNERABLE ] = 0;
    }
    if( answerI == 2 )
    {
        if( player.Quest[ QST_VISION ] == 0 )
            player.QuestBase[ QST_VISION ] = 200;
        else
            player.QuestBase[ QST_VISION ] = 0;
    }
    if( answerI == 3 )
    {
        if( player.Mode[ MODE_NO_PVP ] == 0 )
            player.ModeBase[ MODE_NO_PVP ] = 1;
        else
            player.ModeBase[ MODE_NO_PVP ] = 0;
    }
    if( answerI == 4 )
    {
		if( player.Stat[ST_MAX_TALKERS] == 0 ) 
		{
			player.StatBase[ST_MAX_TALKERS] = 1;
			sinf( player, 0, 119, 0 );
		}
		else 
		{
			player.StatBase[ST_MAX_TALKERS] = 0;
			sinf( player, 0, 0, 0 );
		}
    }
    if( answerI == 5 )
    {
        GM_PANNEL_SELF( player, 0, 0, 0, null, null );
    }
}

void answer_GM_PANNEL_SELF_TOWNMODES( Critter& player, uint answerI, string& answerS )
{
    if( answerI == 0 )
    {
        GameVar@ war_mode = GetGlobalVar( GVAR_inf_modoc_war_mode );
        player.ShowScreen( SCREEN_DIALOGBOX, 5, "answer_GM_PANNEL_SELF_TOWNMODES_WAR" );
        player.Say( SAY_DIALOGBOX_TEXT, "воен положение, текущее - " + war_mode.GetValue() );
        player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "0 мир" );
        player.Say( SAY_DIALOGBOX_BUTTON( 1 ), "1 -чужаки" );
        player.Say( SAY_DIALOGBOX_BUTTON( 2 ), "2 #чужаки" );
        player.Say( SAY_DIALOGBOX_BUTTON( 3 ), "3 defcon 4" );
        player.Say( SAY_DIALOGBOX_BUTTON( 4 ), "4 defcon 5" );
    }
    if( answerI == 1 )
    {
        GameVar@ guards_mode = GetGlobalVar( GVAR_inf_modoc_guards_mode );
        player.ShowScreen( SCREEN_DIALOGBOX, 2, "answer_GM_PANNEL_SELF_TOWNMODES_GUARD" );
        player.Say( SAY_DIALOGBOX_TEXT, "активность гвардии, текущий - " + guards_mode.GetValue() );
        player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "0 мир" );
    }
    if( answerI == 2 )
    {
        GameVar@ races_mode = GetGlobalVar( GVAR_inf_modoc_races_mode );
        player.ShowScreen( SCREEN_DIALOGBOX, 2, "answer_GM_PANNEL_SELF_TOWNMODES_RACES" );
        player.Say( SAY_DIALOGBOX_TEXT, "расизм, текущий - " + races_mode.GetValue() );
        player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "0 мир" );
    }
    if( answerI == 3 )
    {
        GameVar@ border_mode = GetGlobalVar( GVAR_inf_modoc_border_mode );
		player.ShowScreen( SCREEN_DIALOGBOX, 5, "answer_GM_PANNEL_SELF_TOWNMODES_GATES" );
		player.Say( SAY_DIALOGBOX_TEXT, "шлюз, текущий - " + border_mode.GetValue() );
		player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "0 обычный" );
		player.Say( SAY_DIALOGBOX_BUTTON( 1 ), "1 без гостей" );
		player.Say( SAY_DIALOGBOX_BUTTON( 2 ), "2 карантин" );
		player.Say( SAY_DIALOGBOX_BUTTON( 3 ), "3 изоляция" );
		player.Say( SAY_DIALOGBOX_BUTTON( 4 ), "4 открытый" );
    }
    if( answerI == 4 )
    {
        GameVar@ Reg = GetGlobalVar( GVAR_inf_modoc_reg );       // регистрация
        if( Reg.GetValue() == 0 )
            Reg = ( 1 );
        else
            Reg = ( 0 );
    }
    if( answerI == 5 )
    {
        GM_PANNEL_SELF( player, 0, 0, 0, null, null );
    }
}

void answer_GM_PANNEL_SELF_TOWNMODES_WAR( Critter& player, uint answerI, string& answerS )
{
    GameVar@ war_mode = GetGlobalVar( GVAR_inf_modoc_war_mode );
    war_mode = ( answerI );

    player.ShowScreen( SCREEN_DIALOGBOX, 5, "answer_GM_PANNEL_SELF_TOWNMODES_WAR" );
    player.Say( SAY_DIALOGBOX_TEXT, "воен положение, текущее - " + war_mode.GetValue() );
    player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "0 мир" );
    player.Say( SAY_DIALOGBOX_BUTTON( 1 ), "1 -чужаки" );
    player.Say( SAY_DIALOGBOX_BUTTON( 2 ), "2 #чужаки" );
    player.Say( SAY_DIALOGBOX_BUTTON( 3 ), "3 defcon 4" );
    player.Say( SAY_DIALOGBOX_BUTTON( 4 ), "4 defcon 5" );
}

void answer_GM_PANNEL_SELF_TOWNMODES_GUARD( Critter& player, uint answerI, string& answerS )
{
    GameVar@ guards_mode = GetGlobalVar( GVAR_inf_modoc_guards_mode );
    guards_mode = ( answerI );
}

void answer_GM_PANNEL_SELF_TOWNMODES_RACES( Critter& player, uint answerI, string& answerS )
{
    GameVar@ races_mode = GetGlobalVar( GVAR_inf_modoc_races_mode );
    races_mode = ( answerI );
}

void answer_GM_PANNEL_SELF_TOWNMODES_GATES( Critter& player, uint answerI, string& answerS ) // export
{
    GameVar@ border_mode = GetGlobalVar( GVAR_inf_modoc_border_mode );
    border_mode = ( answerI );

	player.ShowScreen( SCREEN_DIALOGBOX, 5, "answer_GM_PANNEL_SELF_TOWNMODES_GATES" );
	player.Say( SAY_DIALOGBOX_TEXT, "шлюз, текущий - " + border_mode.GetValue() );
	player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "0 обычный" );
	player.Say( SAY_DIALOGBOX_BUTTON( 1 ), "1 без гостей" );
	player.Say( SAY_DIALOGBOX_BUTTON( 2 ), "2 карантин" );
	player.Say( SAY_DIALOGBOX_BUTTON( 3 ), "3 изоляция" );
	player.Say( SAY_DIALOGBOX_BUTTON( 4 ), "4 открытый" );
}

GMCommand( GM_PANNEL_CRITTER_PLAYER )
{
    if( player.GetAccess() >= ACCESS_MODER )
    {
        Critter@ cr = GetCritter( param0 );
        if( cr is null )
            return;
        player.StatBase[ ST_VAR0 ] = cr.Id;
        player.ShowScreen( SCREEN_DIALOGBOX, 5, "answer_GM_PANNEL_CRITTER_PLAYER" );
        player.Say( SAY_DIALOGBOX_TEXT, "Действия с игроком" + param0 );
        if( cr.Quest[ QST_GAMEMODE ] == GAME_START )
            player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "Mode START" );
        else if( cr.Quest[ QST_GAMEMODE ] == GAME_ADVENTURE )
            player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "Mode Adventure" );
        else if( cr.Quest[ QST_GAMEMODE ] == GAME_SURVIVAL )
            player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "Mode SURVIVAL" );
        else if( cr.Quest[ QST_GAMEMODE ] == GAME_ARCADE )
            player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "Mode ARCADE" );
        else if( cr.Quest[ QST_GAMEMODE ] == GAME_TEST )
            player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "Mode TEST" );
        else
            player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "ошибка режима" );
        player.Say( SAY_DIALOGBOX_BUTTON( 1 ), "Параметры" );
        player.Say( SAY_DIALOGBOX_BUTTON( 2 ), "Модерация" );
        player.Say( SAY_DIALOGBOX_BUTTON( 3 ), "Инвентарь" );
        player.Say( SAY_DIALOGBOX_BUTTON( 4 ), "Поощрения" );
    }
}

string[] GM_SetParamNames = { "Опыт", "Голод", "Жажда", "Здоровье", "Кровь", "Передоз", "Заражение", "Радиация", "Отравление" };
int[] GM_SetParams = { ST_EXPERIENCE, ST_HUNGER, ST_THRIST, ST_CURRENT_HP, ST_BLEED, ST_OVERDOSE, ST_BLOOD_TOXIC, ST_RADIATION_LEVEL, ST_POISONING_LEVEL };

void answer_GM_PANNEL_CRITTER_PLAYER( Critter& player, uint answerI, string& answerS )
{
    Critter@ cr = GetCritter( player.Stat[ ST_VAR0 ] );
    if( cr is null )
        return;
    if( answerI == 0 )
    {
        player.ShowScreen( SCREEN_DIALOGBOX, 6, "answer_GM_PANNEL_CRITTER_PLAYER_GAMEMODES" );
        player.Say( SAY_DIALOGBOX_TEXT, "Текущий режим =" + cr.Quest[ QST_GAMEMODE ] + " , выберите новый режим игры" );
        player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "0 Mode START" );
        player.Say( SAY_DIALOGBOX_BUTTON( 1 ), "1 Mode Adventure" );
        player.Say( SAY_DIALOGBOX_BUTTON( 2 ), "2 Mode SURVIVAL" );
        player.Say( SAY_DIALOGBOX_BUTTON( 3 ), "3 Mode ARCADE" );
        player.Say( SAY_DIALOGBOX_BUTTON( 4 ), "4 Mode TEST" );
        player.Say( SAY_DIALOGBOX_BUTTON( 5 ), "назад" );
    }
    if( answerI == 1 )
    {
        player.ShowScreen( SCREEN_DIALOGBOX, 10, "answer_GM_PANNEL_CRITTER_PLAYER_STATS" );
        player.Say( SAY_DIALOGBOX_TEXT, "Параметры игрока" );
        player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "SPECIAL" );
        player.Say( SAY_DIALOGBOX_BUTTON( 1 ), "SKILLS 0-9" );
        player.Say( SAY_DIALOGBOX_BUTTON( 2 ), "SKILLS 10-20" );
        player.Say( SAY_DIALOGBOX_BUTTON( 3 ), "Травмы" );
        player.Say( SAY_DIALOGBOX_BUTTON( 4 ), "Режимы" );
        player.Say( SAY_DIALOGBOX_BUTTON( 5 ), "Скин/бодитайп" );
        player.Say( SAY_DIALOGBOX_BUTTON( 6 ), "Фр=" + cr.Quest[QST_FACTION] + ",Пр=" + cr.Quest[QST_MODOC_CITIZENSHIP] );
        player.Say( SAY_DIALOGBOX_BUTTON( 7 ), "Доп парам" );
        player.Say( SAY_DIALOGBOX_BUTTON( 8 ), "Лексема" );
        player.Say( SAY_DIALOGBOX_BUTTON( 9 ), "назад" );
    }
    if( answerI == 2 )
    {
        player.ShowScreen( SCREEN_DIALOGBOX, 9, "answer_GM_PANNEL_CRITTER_PLAYER_BANS" );
        player.Say( SAY_DIALOGBOX_TEXT, "Модерация" );
        player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "Предупреждение" );
        player.Say( SAY_DIALOGBOX_BUTTON( 1 ), "Kick" );
        player.Say( SAY_DIALOGBOX_BUTTON( 2 ), "Kill" );
        player.Say( SAY_DIALOGBOX_BUTTON( 3 ), "Ban" );
        player.Say( SAY_DIALOGBOX_BUTTON( 4 ), "Kick Ban" );
        player.Say( SAY_DIALOGBOX_BUTTON( 5 ), "Ban IP" );
        player.Say( SAY_DIALOGBOX_BUTTON( 6 ), "unBan" );
        player.Say( SAY_DIALOGBOX_BUTTON( 7 ), "Hard_Ban" );
        player.Say( SAY_DIALOGBOX_BUTTON( 8 ), "назад" );
    }
    if( answerI == 3 )
    {
        player.ShowContainer( cr, null, TRANSFER_FAR_CRIT );
    }
	if( answerI == 4 )
    {
        player.ShowScreen( SCREEN_DIALOGBOX, 16, "answer_GM_PANNEL_CRITTER_PLAYER_GIFT" );
        player.Say( SAY_DIALOGBOX_TEXT, "Модерация" );
        player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "назад" );
        player.Say( SAY_DIALOGBOX_BUTTON( 1 ), "Карма&Зависимости" );
        player.Say( SAY_DIALOGBOX_BUTTON( 2 ), "Перк" );
		for(int i=3;i<12;i++)
			player.Say( SAY_DIALOGBOX_BUTTON( i ), GM_SetParamNames[i-3] + " [" + cr.StatBase[GM_SetParams[i-3]] +  "]" );
		player.Say( SAY_DIALOGBOX_BUTTON( 12 ), ( FLAG(cr.StatBase[ ST_CRSTATUS ], CR_STATUS_BULLET_OVER) ? "Выкл." : "Вкл." )+" Пулевое" );
		player.Say( SAY_DIALOGBOX_BUTTON( 13 ), ( FLAG(cr.StatBase[ ST_CRSTATUS ], CR_STATUS_HEAVY_DMG) ? "Выкл." : "Вкл." )+" Тяж.Рана" );
		player.Say( SAY_DIALOGBOX_BUTTON( 14 ), "Full heal" );
		player.Say( SAY_DIALOGBOX_BUTTON( 15 ), "[обновить]" );
	}
}

void answer_GM_PANNEL_CRITTER_PLAYER_GIFT_KARMA( Critter& player, uint answerI, string& answerS )
{
	if( answerI == 0 )
	{	//Вернуться в прошлое меню
		answer_GM_PANNEL_CRITTER_PLAYER( player, 4, "" );
		return;
	}
	Critter@ cr = GetCritter( player.Stat[ ST_VAR0 ] );
	if( answerI == 1 )
	{	//Добавить карму
		player.StatBase[ ST_VAR1 ] = ST_KARMA;
		player.StatBase[ ST_VAR2 ] = 0;
		player.ShowScreen( SCREEN_SAY, 0, "gm@ask_GM_PANNEL_CRITTER_PLAYER_GIFT_ADD" );
		player.Say( SAY_SAY_TITLE, "Карма: [" + cr.Stat[ST_KARMA] + "]" );
		return;
	}

	
	if( answerI == 2 ) 
		cr.AddictionBase[ADDICTION_JET] = 1 - cr.AddictionBase[ADDICTION_JET];
	if( answerI == 3 ) 
		cr.AddictionBase[ADDICTION_BUFFOUT] = 1 - cr.AddictionBase[ADDICTION_BUFFOUT];
	if( answerI == 4 ) 
		cr.AddictionBase[ADDICTION_MENTATS] = 1 - cr.AddictionBase[ADDICTION_MENTATS];
	if( answerI == 5 ) 
		cr.AddictionBase[ADDICTION_PSYCHO] = 1 - cr.AddictionBase[ADDICTION_PSYCHO];
	if( answerI == 6 ) 
		cr.AddictionBase[ADDICTION_RADAWAY] = 1 - cr.AddictionBase[ADDICTION_RADAWAY];
	if( answerI == 7 ) 
		cr.AddictionBase[ADDICTION_NUKA_COLA] = 1 - cr.AddictionBase[ADDICTION_NUKA_COLA];
	if( answerI == 8 ) 
		cr.AddictionBase[ADDICTION_TRAGIC] = 1 - cr.AddictionBase[ADDICTION_TRAGIC];
	answer_GM_PANNEL_CRITTER_PLAYER_GIFT( player, 1, "" );
}

void answer_GM_PANNEL_CRITTER_PLAYER_GIFT( Critter& player, uint answerI, string& answerS )
{
    Critter@ cr = GetCritter( player.Stat[ ST_VAR0 ] );

    if( cr is null )
        return;

    if( answerI == 0 ) { //Назад
        GM_PANNEL_CRITTER_PLAYER( player, cr.Id, 0, 0, null, null );
		return;
	}

    if( answerI == 1 )
    {
        player.ShowScreen( SCREEN_DIALOGBOX, 10, "answer_GM_PANNEL_CRITTER_PLAYER_GIFT_KARMA" );
        player.Say( SAY_DIALOGBOX_TEXT, "Карма = "+cr.Stat[ST_KARMA] );
        player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "назад" );
        player.Say( SAY_DIALOGBOX_BUTTON( 1 ), "Карма" );
        player.Say( SAY_DIALOGBOX_BUTTON( 2 ), ( cr.AddictionBase[ADDICTION_JET] != 0 ? "Выкл." : "Вкл." )+" Джет" );
        player.Say( SAY_DIALOGBOX_BUTTON( 3 ), ( cr.AddictionBase[ADDICTION_BUFFOUT] != 0 ? "Выкл." : "Вкл." )+" Буффаут" );
        player.Say( SAY_DIALOGBOX_BUTTON( 4 ), ( cr.AddictionBase[ADDICTION_MENTATS] != 0 ? "Выкл." : "Вкл." )+" Ментаты" );
        player.Say( SAY_DIALOGBOX_BUTTON( 5 ), ( cr.AddictionBase[ADDICTION_PSYCHO] != 0 ? "Выкл." : "Вкл." )+" Психо" );
        player.Say( SAY_DIALOGBOX_BUTTON( 6 ), ( cr.AddictionBase[ADDICTION_RADAWAY] != 0 ? "Выкл." : "Вкл." )+" Радэвей" );
        player.Say( SAY_DIALOGBOX_BUTTON( 7 ), ( cr.AddictionBase[ADDICTION_NUKA_COLA] != 0 ? "Выкл." : "Вкл." )+" Нюка" );
        player.Say( SAY_DIALOGBOX_BUTTON( 8 ), ( cr.AddictionBase[ADDICTION_TRAGIC] != 0 ? "Выкл." : "Вкл." )+" Азартный" );
		return;
    }
    if( answerI == 2 )
    {
		player.StatBase[ ST_VAR1 ] = PERK_BEGIN;
		player.StatBase[ ST_VAR2 ] = 0;
        player.ShowScreen( SCREEN_DIALOGBOX, 12, "answer_GM_PANNEL_CRITTER_PLAYER_GIFT_PERK" );
        player.Say( SAY_DIALOGBOX_TEXT, "Выбор перка:" );
        player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "назад" );
        for(uint i=1; i<11; i++)
        {
		player.SayMsg( SAY_DIALOGBOX_BUTTON( i ), TEXTMSG_GAME, (10000+player.Stat[ ST_VAR1 ]+i)*10+1);
        }
        player.Say( SAY_DIALOGBOX_BUTTON( 11 ), "далее" );
		return;
    }
    if(answerI >=3 && answerI <= 11) {
		int n = CLAMP( answerI - 3, 0, GM_SetParamNames.length() );
		player.StatBase[ ST_VAR1 ] = GM_SetParams[n];
		player.StatBase[ ST_VAR2 ] = 0;
		player.StatBase[ ST_VAR3 ] = 1;
		player.ShowScreen( SCREEN_SAY, 0, "gm@ask_GM_PANNEL_CRITTER_PLAYER_GIFT_ADD" );
		player.Say( SAY_SAY_TITLE, GM_SetParamNames[n] + ": [" + cr.ParamBase[GM_SetParams[n]] + "]" );
		return;
	}
	if( answerI == 12 )
		ChangeStatus( cr, CR_STATUS_BULLET_OVER, 0, !FLAG(cr.StatBase[ ST_CRSTATUS ], CR_STATUS_BULLET_OVER) );
	if( answerI == 13 )
		ChangeStatus( cr, CR_STATUS_HEAVY_DMG, 0, !FLAG(cr.StatBase[ ST_CRSTATUS ], CR_STATUS_HEAVY_DMG) );
	if( answerI == 14 ) //Отхил всех повреждений и восстановление крови
    {
		FullHeal( cr );
    }
	if( answerI == 15 )
	{
        player.ShowScreen( SCREEN_DIALOGBOX, 16, "answer_GM_PANNEL_CRITTER_PLAYER_GIFT" );
        player.Say( SAY_DIALOGBOX_TEXT, "Модерация" );
        player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "назад" );
        player.Say( SAY_DIALOGBOX_BUTTON( 1 ), "Карма&Зависимости" );
        player.Say( SAY_DIALOGBOX_BUTTON( 2 ), "Перк" );
		for(int i=3;i<12;i++)
			player.Say( SAY_DIALOGBOX_BUTTON( i ), GM_SetParamNames[i-3] + " [" + cr.StatBase[GM_SetParams[i-3]] +  "]" );
		player.Say( SAY_DIALOGBOX_BUTTON( 12 ), ( FLAG(cr.StatBase[ ST_CRSTATUS ], CR_STATUS_BULLET_OVER) ? "Выкл." : "Вкл." )+" Пулевое" );
		player.Say( SAY_DIALOGBOX_BUTTON( 13 ), ( FLAG(cr.StatBase[ ST_CRSTATUS ], CR_STATUS_HEAVY_DMG) ? "Выкл." : "Вкл." )+" Тяж.Рана" );
		player.Say( SAY_DIALOGBOX_BUTTON( 14 ), "[обновить]" );
	}
	answer_GM_PANNEL_CRITTER_PLAYER(player,4,"");
}

void FullHeal( Critter& cr ) //exported
{
	cr.StatBase[ ST_CURRENT_HP ] = cr.Stat[ ST_MAX_LIFE ];
	
	cr.ParamBase[ST_BLOOD_TOXIC] = 0;	
	cr.ParamBase[ST_BLEED] = 0;
	
	cr.StatBase[ST_HUNGER] = 100;
	cr.StatBase[ST_THRIST] = 100;
	cr.StatBase[ST_DYSPNEA] = 100;
	
	cr.StatBase[ST_POISONING_LEVEL] = 0;
	cr.StatBase[ST_RADIATION_LEVEL] = 0;
	
	cr.DamageBase[ DAMAGE_EYE ] = 0;
	cr.DamageBase[ DAMAGE_RIGHT_ARM ] = 0;
	cr.DamageBase[ DAMAGE_LEFT_ARM ] = 0;
	cr.DamageBase[ DAMAGE_RIGHT_LEG ] = 0;
	cr.DamageBase[ DAMAGE_LEFT_LEG ] = 0;
	
	ChangeStatus( cr, CR_STATUS_HEAVY_DMG, 0, false );
	ChangeStatus( cr, CR_STATUS_BULLET_OVER, 0, false );
	ChangeStatus( cr, CR_STATUS_BLOOD_TOXIC, 0, false );
	AffectRadiation( cr, 0 ); //Перепроверка статуса после изменения стата.
	AffectPoison( cr, 0); //Подтираем плашку 
}

void answer_GM_PANNEL_CRITTER_PLAYER_GIFT_PERK( Critter& player, uint answerI, string& answerS )
{
    Critter@ cr = GetCritter( player.Stat[ ST_VAR0 ] );
    if( @cr is null )
        return;

    if( answerI == 0 && uint( player.Stat[ ST_VAR1 ] ) > PERK_BEGIN + 10 )
		player.StatBase[ ST_VAR1 ] -= 11;
    if( answerI == 11 && uint( player.Stat[ ST_VAR1 ] ) < PERK_END - 10 )
		player.StatBase[ ST_VAR1 ] += 11;
	
	player.ShowScreen( SCREEN_DIALOGBOX, 12, "answer_GM_PANNEL_CRITTER_PLAYER_GIFT_PERK" );
	player.Say( SAY_DIALOGBOX_TEXT, "Выбор перка" );
	player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "назад" );
	for(uint i=1; i<11; i++)
		player.SayMsg( SAY_DIALOGBOX_BUTTON( i ), TEXTMSG_GAME, (10000+player.Stat[ ST_VAR1 ]+i)*10+1);
	player.Say( SAY_DIALOGBOX_BUTTON( 11 ), "далее" );
	
	if( player.Stat[ ST_VAR2 ] == 0 )
	{
		if( ( answerI == 11 ) || ( answerI == 0 && uint( player.Stat[ ST_VAR1 ] ) <= PERK_BEGIN + 10 ) ) return; //Что бы не выдавался не тот перк при не том нажатии.
		int perkId = player.Stat[ ST_VAR1 ] + answerI;
		cr.PerkBase[ perkId ]++;
		player.Say( SAY_NETMSG, "вы дали перк " + perkId + " игроку " + cr.Id );
	}
	else
	{
		if( ( answerI == 11 ) || ( answerI == 0 && uint( player.Stat[ ST_VAR1 ] ) <= PERK_BEGIN + 10 ) ) return; //Что бы не выдавался не тот перк при не том нажатии.
		int perkId = player.Stat[ ST_VAR1 ] + answerI;
		cr.PerkBase[ perkId ]--;
		player.Say( SAY_NETMSG, "вы отняли перк " + perkId + " у игрока " + cr.Id );
	}
}

import void AffectRadiation( Critter& cr, int value ) from "radiation";
import void AffectPoison( Critter& cr, int value ) from "poison";

void ask_GM_PANNEL_CRITTER_PLAYER_GIFT_ADD( Critter& player, uint answerI, string& answerS )
{
    Critter@ target = GetCritter( player.Stat[ ST_VAR0 ] );
    int parameter = player.Stat[ ST_VAR1 ];
    if( !valid( target ) )
        return;
    if( answerS.length() > 0 )
    {
        int number = 0;
        StrToInt( answerS, number );
		if( player.Stat[ ST_VAR2 ] == 0 )
		{
			target.ParamBase[ parameter ] += number;
			player.Say( SAY_NETMSG, "вы увеличили параметр " + parameter + " на " + number + " у игрока " + target.Id );
		}
        else
		{
			target.ParamBase[ parameter ] -= number;
			player.Say( SAY_NETMSG, "вы уменьшили параметр " + parameter + " на " + number + " у игрока " + target.Id );
		}
		ChangeCritterSpeed(target);
		if( parameter == ST_RADIATION_LEVEL )
			AffectRadiation( target, 0 ); //Перепроверка статуса после изменения стата.
		if( parameter == ST_POISONING_LEVEL )
			AffectPoison( target, 0 ); //Перепроверка статуса после изменения стата.
	}
	if(player.Stat[ ST_VAR3 ] == 1) answer_GM_PANNEL_CRITTER_PLAYER(player, 4, "");
	else GM_PANNEL_CRITTER_PLAYER( player, target.Id, 0, 0, null, null );
}


void answer_GM_PANNEL_CRITTER_PLAYER_GAMEMODES( Critter& player, uint answerI, string& answerS )
{
    Critter@ cr = GetCritter( player.Stat[ ST_VAR0 ] );
    if( @cr is null )
        return;
    cr.QuestBase[ QST_GAMEMODE ] = answerI;
    Log_factions( player, cr.Id, 0, answerI, null, null );
}

void answer_GM_PANNEL_CRITTER_PLAYER_BANS( Critter& player, uint answerI, string& answerS )
{
    Critter@ cr = GetCritter( player.Stat[ ST_VAR0 ] );
    if( cr is null )
        return;
    if( answerI == 0 )
    {
        Warn( player, cr.Id, 0, 0 );
    }
    if( answerI == 1 )
    {
        KickId( player, cr.Id, 0, 0 );
    }
    if( answerI == 2 )
    {
        player.ShowScreen( SCREEN_DIALOGBOX, 10, "answer_GM_PANNEL_CRITTER_PLAYER_BANS_KILL" );
        player.Say( SAY_DIALOGBOX_TEXT, "Убить предельно жестоким способом" );
        player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "Просто смерть" );
        player.Say( SAY_DIALOGBOX_BUTTON( 1 ), "Вырыв бока" );
        player.Say( SAY_DIALOGBOX_BUTTON( 2 ), "Разрыв Очередью" );
        player.Say( SAY_DIALOGBOX_BUTTON( 3 ), "очередью" );
        player.Say( SAY_DIALOGBOX_BUTTON( 4 ), "в прах" );
        player.Say( SAY_DIALOGBOX_BUTTON( 5 ), "в куски" );
        player.Say( SAY_DIALOGBOX_BUTTON( 6 ), "огонь" );
        player.Say( SAY_DIALOGBOX_BUTTON( 7 ), "в соплю" );
        player.Say( SAY_DIALOGBOX_BUTTON( 8 ), "пополам" );
        player.Say( SAY_DIALOGBOX_BUTTON( 9 ), "назад" );
    }
    if( answerI == 3 )
    {
        player.ShowScreen( SCREEN_SAY, 0, "gm@ask_GM_PANNEL_CRITTER_PLAYER_BANS_BAN" );
        player.Say( SAY_SAY_TITLE, "Бан " + GetPlayerName( cr.Id ) + " на часов:" );
    }
    if( answerI == 4 )
    {
        player.ShowScreen( SCREEN_SAY, 0, "gm@ask_GM_PANNEL_CRITTER_PLAYER_BANS_KICKBAN" );
        player.Say( SAY_SAY_TITLE, "Бан " + GetPlayerName( cr.Id ) + " на часов:" );
    }
    if( answerI == 5 )
    {
        player.ShowScreen( SCREEN_SAY, 0, "gm@ask_GM_PANNEL_CRITTER_PLAYER_BANS_KICKBANIP" );
        player.Say( SAY_SAY_TITLE, "Бан по IP" + GetPlayerName( cr.Id ) + " на часов:" );
    }
    if( answerI == 6 )
    {
        UnbanId( player, cr.Id, 0, 0 );
        player.Say( SAY_NETMSG, "персонаж " + GetPlayerName( cr.Id ) + "(" + cr.Id + ")" + " разблокирован" );

        player.ShowScreen( SCREEN_DIALOGBOX, 8, "answer_GM_PANNEL_CRITTER_PLAYER_BANS" );
        player.Say( SAY_DIALOGBOX_TEXT, "Модерация" );
        player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "Предупреждение" );
        player.Say( SAY_DIALOGBOX_BUTTON( 1 ), "Kick" );
        player.Say( SAY_DIALOGBOX_BUTTON( 2 ), "Kill" );
        player.Say( SAY_DIALOGBOX_BUTTON( 3 ), "Ban" );
        player.Say( SAY_DIALOGBOX_BUTTON( 4 ), "Kick Ban" );
        player.Say( SAY_DIALOGBOX_BUTTON( 5 ), "Ban IP" );
        player.Say( SAY_DIALOGBOX_BUTTON( 6 ), "unBan" );
        player.Say( SAY_DIALOGBOX_BUTTON( 7 ), "назад" );
    }
    if( answerI == 7 )
    {
        GM_HardBanId( player, cr.Id );
        player.Say( SAY_NETMSG, "персонаж " + GetPlayerName( cr.Id ) + "(" + cr.Id + ")" + " заблокирован по системе" );
        player.ShowScreen( SCREEN_SAY, 0, "gm@ask_GM_PANNEL_CRITTER_PLAYER_BANS_BAN" );
        player.Say( SAY_SAY_TITLE, "Бан " + GetPlayerName( cr.Id ) + " на часов:" );
    }
    if( answerI == 8 )
    {
        GM_PANNEL_CRITTER_PLAYER( player, cr.Id, 0, 0, null, null );
    }
}

void answer_GM_PANNEL_CRITTER_PLAYER_BANS_KILL( Critter& player, uint answerI, string& answerS )
{
    Critter@ cr = GetCritter( player.Stat[ ST_VAR0 ] );
    if( cr is null ) return;

    if( answerI == 9 )
    {
        GM_PANNEL_CRITTER_PLAYER( player, cr.Id, 0, 0, null, null );
		return;
    }

	killbytype( player, answerI, 0, 0, null, null );
}

void ask_GM_PANNEL_CRITTER_PLAYER_BANS_UNBAN( Critter& player, uint answerI, string& answerS )
{
    if( answerS.length() > 0 )
    {
        Critter@ cr = GetCritter( player.Stat[ ST_VAR0 ] );
        if( cr is null )
            return;
        int number = 0;
        StrToInt( answerS, number );
        if( number <= 0 )
        {
            player.Say( SAY_NETMSG, "неверное значение" );
            return;
        }
        KickBanIdIp( player, cr.Id, number, 0 );
        player.Say( SAY_NETMSG, "персонаж " + GetPlayerName( cr.Id ) + "(" + cr.Id + ")" + " заблокирован по IP на " + number + " часов" );

        player.ShowScreen( SCREEN_DIALOGBOX, 8, "answer_GM_PANNEL_CRITTER_PLAYER_BANS" );
        player.Say( SAY_DIALOGBOX_TEXT, "Модерация" );
        player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "Предупреждение" );
        player.Say( SAY_DIALOGBOX_BUTTON( 1 ), "Kick" );
        player.Say( SAY_DIALOGBOX_BUTTON( 2 ), "Kill" );
        player.Say( SAY_DIALOGBOX_BUTTON( 3 ), "Ban" );
        player.Say( SAY_DIALOGBOX_BUTTON( 4 ), "Kick Ban" );
        player.Say( SAY_DIALOGBOX_BUTTON( 5 ), "Ban IP" );
        player.Say( SAY_DIALOGBOX_BUTTON( 6 ), "unBan" );
        player.Say( SAY_DIALOGBOX_BUTTON( 7 ), "назад" );
    }
}

void ask_GM_PANNEL_CRITTER_PLAYER_BANS_KICKBANIP( Critter& player, uint answerI, string& answerS )
{
    if( answerS.length() > 0 )
    {
        Critter@ cr = GetCritter( player.Stat[ ST_VAR0 ] );
        if( cr is null )
            return;
        int number = 0;
        StrToInt( answerS, number );
        if( number <= 0 )
        {
            player.Say( SAY_NETMSG, "неверное значение" );
            return;
        }
        KickBanIdIp( player, cr.Id, number, 0 );
        player.Say( SAY_NETMSG, "персонаж " + GetPlayerName( cr.Id ) + "(" + cr.Id + ")" + " заблокирован по IP на " + number + " часов" );

        player.ShowScreen( SCREEN_DIALOGBOX, 8, "answer_GM_PANNEL_CRITTER_PLAYER_BANS" );
        player.Say( SAY_DIALOGBOX_TEXT, "Модерация" );
        player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "Предупреждение" );
        player.Say( SAY_DIALOGBOX_BUTTON( 1 ), "Kick" );
        player.Say( SAY_DIALOGBOX_BUTTON( 2 ), "Kill" );
        player.Say( SAY_DIALOGBOX_BUTTON( 3 ), "Ban" );
        player.Say( SAY_DIALOGBOX_BUTTON( 4 ), "Kick Ban" );
        player.Say( SAY_DIALOGBOX_BUTTON( 5 ), "Ban IP" );
        player.Say( SAY_DIALOGBOX_BUTTON( 6 ), "unBan" );
        player.Say( SAY_DIALOGBOX_BUTTON( 7 ), "назад" );
    }
}

void ask_GM_PANNEL_CRITTER_PLAYER_BANS_KICKBAN( Critter& player, uint answerI, string& answerS )
{
    if( answerS.length() > 0 )
    {
        Critter@ cr = GetCritter( player.Stat[ ST_VAR0 ] );
        if( cr is null )
            return;
        int number = 0;
        StrToInt( answerS, number );
        if( number <= 0 )
        {
            player.Say( SAY_NETMSG, "неверное значение" );
            return;
        }
        BanId( player, cr.Id, number, 1 );
        player.Say( SAY_NETMSG, "персонаж " + GetPlayerName( cr.Id ) + "(" + cr.Id + ")" + " заблокирован на " + number + " часов" );

        player.ShowScreen( SCREEN_DIALOGBOX, 8, "answer_GM_PANNEL_CRITTER_PLAYER_BANS" );
        player.Say( SAY_DIALOGBOX_TEXT, "Модерация" );
        player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "Предупреждение" );
        player.Say( SAY_DIALOGBOX_BUTTON( 1 ), "Kick" );
        player.Say( SAY_DIALOGBOX_BUTTON( 2 ), "Kill" );
        player.Say( SAY_DIALOGBOX_BUTTON( 3 ), "Ban" );
        player.Say( SAY_DIALOGBOX_BUTTON( 4 ), "Kick Ban" );
        player.Say( SAY_DIALOGBOX_BUTTON( 5 ), "Ban IP" );
        player.Say( SAY_DIALOGBOX_BUTTON( 6 ), "unBan" );
        player.Say( SAY_DIALOGBOX_BUTTON( 7 ), "назад" );
    }
}

void ask_GM_PANNEL_CRITTER_PLAYER_BANS_BAN( Critter& player, uint answerI, string& answerS )
{
    if( answerS.length() > 0 )
    {
        Critter@ cr = GetCritter( player.Stat[ ST_VAR0 ] );
        if( cr is null )
            return;
        int number = 0;
        StrToInt( answerS, number );
        if( number <= 0 )
        {
            player.Say( SAY_NETMSG, "неверное значение" );
            return;
        }
        BanId( player, cr.Id, number, 0 );
        player.Say( SAY_NETMSG, "персонаж " + GetPlayerName( cr.Id ) + "(" + cr.Id + ")" + "заблокирован на " + number + " часов" );

        player.ShowScreen( SCREEN_DIALOGBOX, 8, "answer_GM_PANNEL_CRITTER_PLAYER_BANS" );
        player.Say( SAY_DIALOGBOX_TEXT, "Модерация" );
        player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "Предупреждение" );
        player.Say( SAY_DIALOGBOX_BUTTON( 1 ), "Kick" );
        player.Say( SAY_DIALOGBOX_BUTTON( 2 ), "Kill" );
        player.Say( SAY_DIALOGBOX_BUTTON( 3 ), "Ban" );
        player.Say( SAY_DIALOGBOX_BUTTON( 4 ), "Kick Ban" );
        player.Say( SAY_DIALOGBOX_BUTTON( 5 ), "Ban IP" );
        player.Say( SAY_DIALOGBOX_BUTTON( 6 ), "unBan" );
        player.Say( SAY_DIALOGBOX_BUTTON( 7 ), "назад" );
    }
}

void answer_GM_PANNEL_CRITTER_PLAYER_STATS( Critter& player, uint answerI, string& answerS )
{
    Critter@ cr = GetCritter( player.Stat[ ST_VAR0 ] );
    if( cr is null )
        return;
    if( answerI == 0 )
    {
        player.ShowScreen( SCREEN_DIALOGBOX, 7, "answer_GM_PANNEL_CRITTER_PLAYER_STATS_SPECIAL" );
        player.Say( SAY_DIALOGBOX_TEXT, "SPECIAL игрока" );
        player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "" + cr.StatBase[ ST_STRENGTH ] + " - сила" );
        player.Say( SAY_DIALOGBOX_BUTTON( 1 ), "" + cr.StatBase[ ST_PERCEPTION ] + " - восприятие" );
        player.Say( SAY_DIALOGBOX_BUTTON( 2 ), "" + cr.StatBase[ ST_ENDURANCE ] + " - выносливость" );
        player.Say( SAY_DIALOGBOX_BUTTON( 3 ), "" + cr.StatBase[ ST_CHARISMA ] + " - харизма" );
        player.Say( SAY_DIALOGBOX_BUTTON( 4 ), "" + cr.StatBase[ ST_INTELLECT ] + " - интеллект" );
        player.Say( SAY_DIALOGBOX_BUTTON( 5 ), "" + cr.StatBase[ ST_AGILITY ] + " - ловкость" );
        player.Say( SAY_DIALOGBOX_BUTTON( 6 ), "" + cr.StatBase[ ST_LUCK ] + " - удача" );
    }
    if( answerI == 1 )
    {
        player.ShowScreen( SCREEN_DIALOGBOX, 11, "answer_GM_PANNEL_CRITTER_PLAYER_STATS_SKILL1" );
        player.Say( SAY_DIALOGBOX_TEXT, "Навыки игрока" );
        player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "" + cr.SkillBase[ SK_SMALL_GUNS ] + " - легкое" );
        player.Say( SAY_DIALOGBOX_BUTTON( 1 ), "" + cr.SkillBase[ SK_BIG_GUNS ] + " - тяжолое" );
        player.Say( SAY_DIALOGBOX_BUTTON( 2 ), "" + cr.SkillBase[ SK_ENERGY_WEAPONS ] + " - энерго" );
        player.Say( SAY_DIALOGBOX_BUTTON( 3 ), "" + cr.SkillBase[ SK_UNARMED ] + " - рукопашная" );
        player.Say( SAY_DIALOGBOX_BUTTON( 4 ), "" + cr.SkillBase[ SK_MELEE_WEAPONS ] + " - холодное" );
        player.Say( SAY_DIALOGBOX_BUTTON( 5 ), "" + cr.SkillBase[ SK_THROWING ] + " - метание" );
        player.Say( SAY_DIALOGBOX_BUTTON( 6 ), "" + cr.SkillBase[ SK_FIRST_AID ] + " - санитар" );
        player.Say( SAY_DIALOGBOX_BUTTON( 7 ), "" + cr.SkillBase[ SK_DOCTOR ] + " - доктор" );
        player.Say( SAY_DIALOGBOX_BUTTON( 8 ), "" + cr.SkillBase[ SK_SNEAK ] + " - скрытность" );
        player.Say( SAY_DIALOGBOX_BUTTON( 9 ), "" + cr.SkillBase[ SK_LOCKPICK ] + " - взлом" );
        player.Say( SAY_DIALOGBOX_BUTTON( 10 ), "" + cr.SkillBase[ SK_STEAL ] + " - кража" );
    }
    if( answerI == 2 )
    {
        player.ShowScreen( SCREEN_DIALOGBOX, 7, "answer_GM_PANNEL_CRITTER_PLAYER_STATS_SKILL2" );
        player.Say( SAY_DIALOGBOX_TEXT, "Навыки игрока" );
        player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "" + cr.SkillBase[ SK_TRAPS ] + " - ловушки" );
        player.Say( SAY_DIALOGBOX_BUTTON( 1 ), "" + cr.SkillBase[ SK_SCIENCE ] + " - наука" );
        player.Say( SAY_DIALOGBOX_BUTTON( 2 ), "" + cr.SkillBase[ SK_REPAIR ] + " - ремонт" );
        player.Say( SAY_DIALOGBOX_BUTTON( 3 ), "" + cr.SkillBase[ SK_SPEECH ] + " - разговор" );
        player.Say( SAY_DIALOGBOX_BUTTON( 4 ), "" + cr.SkillBase[ SK_BARTER ] + " - торговля" );
        player.Say( SAY_DIALOGBOX_BUTTON( 5 ), "" + cr.SkillBase[ SK_GAMBLING ] + " - игра" );
        player.Say( SAY_DIALOGBOX_BUTTON( 6 ), "" + cr.SkillBase[ SK_OUTDOORSMAN ] + " - скиталец" );
    }
    if( answerI == 3 )
    {
        player.ShowScreen( SCREEN_DIALOGBOX, 7, "answer_GM_PANNEL_CRITTER_PLAYER_STATS_DAMAGES" );
        player.Say( SAY_DIALOGBOX_TEXT, "Травмы игрока" );
        player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "" + cr.Damage[ DAMAGE_EYE ] + " - травма глаза" );
        player.Say( SAY_DIALOGBOX_BUTTON( 1 ), "" + cr.Damage[ DAMAGE_RIGHT_ARM ] + " - правая рука" );
        player.Say( SAY_DIALOGBOX_BUTTON( 2 ), "" + cr.Damage[ DAMAGE_LEFT_ARM ] + " - левая рука" );
        player.Say( SAY_DIALOGBOX_BUTTON( 3 ), "" + cr.Damage[ DAMAGE_RIGHT_LEG ] + " - правая нога" );
        player.Say( SAY_DIALOGBOX_BUTTON( 4 ), "" + cr.Damage[ DAMAGE_LEFT_LEG ] + " - левая нога" );
        player.Say( SAY_DIALOGBOX_BUTTON( 5 ), "" + cr.Damage[ DAMAGE_RADIATED ] + " - радиация" );
        player.Say( SAY_DIALOGBOX_BUTTON( 6 ), "" + cr.Damage[ DAMAGE_POISONED ] + " - отравление" );
    }
    if( answerI == 4 )
    {
        player.ShowScreen( SCREEN_DIALOGBOX, 12, "answer_GM_PANNEL_CRITTER_PLAYER_STATS_MODES" );
        player.Say( SAY_DIALOGBOX_TEXT, "Режимы игрока" );
        player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "" + cr.Mode[ MODE_NO_PVP ] + " - нопвп" );
        player.Say( SAY_DIALOGBOX_BUTTON( 1 ), "" + cr.Mode[ MODE_INVULNERABLE ] + " - неуязвимость" );
        player.Say( SAY_DIALOGBOX_BUTTON( 2 ), "" + cr.Mode[ MODE_NO_LOOT ] + " - нелутаемость" );
        player.Say( SAY_DIALOGBOX_BUTTON( 3 ), "" + cr.Mode[ MODE_NO_STEAL ] + " - неворуемость" );
        player.Say( SAY_DIALOGBOX_BUTTON( 4 ), "" + cr.Mode[ MODE_NO_PUSH ] + " - непихаемость" );
        player.Say( SAY_DIALOGBOX_BUTTON( 5 ), "" + cr.Mode[ MODE_NO_WALK ] + " - стоять" );
        player.Say( SAY_DIALOGBOX_BUTTON( 6 ), "" + cr.Mode[ MODE_NO_RUN ] + " - нет бега" );
        player.Say( SAY_DIALOGBOX_BUTTON( 7 ), "" + cr.Mode[ MODE_NO_LOOSE_LIMBS ] + " - нет травм" );
        player.Say( SAY_DIALOGBOX_BUTTON( 8 ), "" + cr.Mode[ MODE_NO_KNOCK ] + " - несбиваемость" );
        player.Say( SAY_DIALOGBOX_BUTTON( 9 ), "" + cr.Quest[ QST_MEDIUM ] + " - пси-способности" );
        player.Say( SAY_DIALOGBOX_BUTTON( 10 ), "" + cr.Mode[ MODE_UNLIMITED_AMMO ] + " - беск. патроны" );
		player.Say( SAY_DIALOGBOX_BUTTON( 11 ), "[обновить]" );
    }
    if( answerI == 5 )
    {
        player.ShowScreen( SCREEN_DIALOGBOX, 7, "answer_GM_PANNEL_CRITTER_PLAYER_STATS_SKINS" );
        player.Say( SAY_DIALOGBOX_TEXT, "Текущий скин - " + cr.Stat[ ST_BASE_CRTYPE ] );
        player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "" + cr.Stat[ ST_BODY_TYPE ] + " - бодитайп" );
        player.Say( SAY_DIALOGBOX_BUTTON( 1 ), "" + cr.Stat[ ST_BASE_CRTYPE ] + " - скин вручную" );
        player.Say( SAY_DIALOGBOX_BUTTON( 2 ), "стандартный" );
        player.Say( SAY_DIALOGBOX_BUTTON( 3 ), "дикари" );
        player.Say( SAY_DIALOGBOX_BUTTON( 4 ), "гражданские" );
        player.Say( SAY_DIALOGBOX_BUTTON( 5 ), "бандитские" );
        player.Say( SAY_DIALOGBOX_BUTTON( 6 ), "разное" );
    }
    if( answerI == 6 )
    {
        player.ShowScreen( SCREEN_DIALOGBOX, AnswerIdFactions::CountAnswer, "answer_GM_PANNEL_CRITTER_PLAYER_STATS_FACTIONS" );
        player.Say( SAY_DIALOGBOX_TEXT, "Текущая фракция - " + cr.Quest[QST_FACTION] + ". Текущий пропуск - " + cr.Quest[QST_MODOC_CITIZENSHIP] );
		
		
        player.Say( SAY_DIALOGBOX_BUTTON( AnswerIdFactions::NoFaction ), "0 - без фракции" );
        player.Say( SAY_DIALOGBOX_BUTTON( AnswerIdFactions::Administration ), "1 - администрация" );
        player.Say( SAY_DIALOGBOX_BUTTON( AnswerIdFactions::Cop ), "2 - полиция" );
        player.Say( SAY_DIALOGBOX_BUTTON( AnswerIdFactions::Mafia ), "3 - мафия" );
        player.Say( SAY_DIALOGBOX_BUTTON( AnswerIdFactions::Mutant ), "4 - мутанты" );
        player.Say( SAY_DIALOGBOX_BUTTON( AnswerIdFactions::Fort ), "5 - форт" );
        player.Say( SAY_DIALOGBOX_BUTTON( AnswerIdFactions::Raider ), "6 - рейдеры" );
        player.Say( SAY_DIALOGBOX_BUTTON( AnswerIdFactions::Sheriff ), "7 - Шериф" );
        player.Say( SAY_DIALOGBOX_BUTTON( AnswerIdFactions::Mayor ), "8 - Мэр" );
        player.Say( SAY_DIALOGBOX_BUTTON( AnswerIdFactions::Strange ), "0 - чужак" );
        player.Say( SAY_DIALOGBOX_BUTTON( AnswerIdFactions::TimeGuest ), "1 - временный гость" );
        player.Say( SAY_DIALOGBOX_BUTTON( AnswerIdFactions::Guest ), "2 - гость" );
        player.Say( SAY_DIALOGBOX_BUTTON( AnswerIdFactions::Citizen ), "3 - гражданин" );
        player.Say( SAY_DIALOGBOX_BUTTON( AnswerIdFactions::RichCitizen ), "4 - богатый гражданин" );
        player.Say( SAY_DIALOGBOX_BUTTON( AnswerIdFactions::Outcast ), "10 - изгой" );
		
        /*
		player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "0 - без фракции" );
        player.Say( SAY_DIALOGBOX_BUTTON( 1 ), "1 - администрация" );
        player.Say( SAY_DIALOGBOX_BUTTON( 2 ), "2 - полиция" );
        player.Say( SAY_DIALOGBOX_BUTTON( 3 ), "3 - мафия" );
        player.Say( SAY_DIALOGBOX_BUTTON( 4 ), "4 - мутанты" );
        player.Say( SAY_DIALOGBOX_BUTTON( 5 ), "5 - форт" );
        player.Say( SAY_DIALOGBOX_BUTTON( 6 ), "6 - рейдеры" );
        player.Say( SAY_DIALOGBOX_BUTTON( 7 ), "0 - чужак" );
        player.Say( SAY_DIALOGBOX_BUTTON( 8 ), "1 - временный гость" );
        player.Say( SAY_DIALOGBOX_BUTTON( 9 ), "2 - гость" );
        player.Say( SAY_DIALOGBOX_BUTTON( 10 ), "3 - гражданин" );
        player.Say( SAY_DIALOGBOX_BUTTON( 11 ), "4 - богатый гражданин" );
		*/
    }
    if( answerI == 7 )
    {
        player.ShowScreen( SCREEN_DIALOGBOX, 4, "answer_GM_PANNEL_CRITTER_PLAYER_STATS_PARAM" );
        player.Say( SAY_DIALOGBOX_TEXT, "Дополнительные параметры" );
        player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "" + cr.Stat[ ST_CURRENT_HP ] + "Текущее хп" );
        player.Say( SAY_DIALOGBOX_BUTTON( 1 ), "" + cr.Stat[ ST_MAX_LIFE ] + "макс хп" );
        player.Say( SAY_DIALOGBOX_BUTTON( 2 ), "" + cr.Stat[ ST_AGE ] + "возраст" );
        player.Say( SAY_DIALOGBOX_BUTTON( 3 ), "" + cr.Stat[ ST_GENDER ] + "пол" );
    }
    if( answerI == 8 )
    {
        ShowInputBoxScreen( player, "gm@unsafe_Description#Описание, приметы", 0, INPUTBOX_CLOSE_ON_ENTER );
    }
    if( answerI == 9 )
    {
        GM_PANNEL_CRITTER_PLAYER( player, cr.Id, 0, 0, null, null );
    }
}

void answer_GM_PANNEL_CRITTER_PLAYER_STATS_PARAM( Critter& player, uint answerI, string& answerS )
{
    Critter@ cr = GetCritter( player.Stat[ ST_VAR0 ] );
    if( cr is null )
        return;

    player.ShowScreen( SCREEN_SAY, 0, "gm@ask_GM_PANNEL_CRITTER_PLAYER_STATS_SPECIAL" );

    if( answerI == 0 )
    {
        player.ToLife();
        player.StatBase[ ST_VAR1 ] = ST_CURRENT_HP;
        player.Say( SAY_SAY_TITLE, "Хп" );
    }
    if( answerI == 1 )
    {
        player.StatBase[ ST_VAR1 ] = ST_MAX_LIFE;
        player.Say( SAY_SAY_TITLE, "Макс Хп" );
    }
    if( answerI == 2 )
    {
        player.StatBase[ ST_VAR1 ] = ST_AGE;
        player.Say( SAY_SAY_TITLE, "Возраст" );
    }
    if( answerI == 3 )
    {
        player.StatBase[ ST_VAR1 ] = ST_GENDER;
        player.Say( SAY_SAY_TITLE, "Пол" );
    }
}

GMCommand( unsafe_Description )
{
    if( @param3 !is null && param3.length() != 0 )
    {
        Critter@ cr = GetCritter( player.Stat[ ST_VAR0 ] );
        if( @cr is null )
            return;
        cr.SetLexems( param3 );
    }
}

void answer_GM_PANNEL_CRITTER_PLAYER_STATS_DAMAGES( Critter& player, uint answerI, string& answerS )
{
    Critter@ cr = GetCritter( player.Stat[ ST_VAR0 ] );
    if( @cr is null )
        return;
    if( answerI == 0 )
    {
        if( cr.Damage[ DAMAGE_EYE ] == 0 )
            cr.DamageBase[ DAMAGE_EYE ] = 1;
        else
            cr.DamageBase[ DAMAGE_EYE ] = 0;
    }
    else if( answerI == 1 )
    {
        if( cr.Damage[ DAMAGE_RIGHT_ARM ] == 0 )
            cr.DamageBase[ DAMAGE_RIGHT_ARM ] = 1;
        else
            cr.DamageBase[ DAMAGE_RIGHT_ARM ] = 0;
    }
    else if( answerI == 2 )
    {
        if( cr.Damage[ DAMAGE_LEFT_ARM ] == 0 )
            cr.DamageBase[ DAMAGE_LEFT_ARM ] = 1;
        else
            cr.DamageBase[ DAMAGE_LEFT_ARM ] = 0;
    }
    else if( answerI == 3 )
    {
        if( cr.Damage[ DAMAGE_RIGHT_LEG ] == 0 )
            cr.DamageBase[ DAMAGE_RIGHT_LEG ] = 1;
        else
            cr.DamageBase[ DAMAGE_RIGHT_LEG ] = 0;
    }
    else if( answerI == 4 )
    {
        if( cr.Damage[ DAMAGE_LEFT_LEG ] == 0 )
            cr.DamageBase[ DAMAGE_LEFT_LEG ] = 1;
        else
            cr.DamageBase[ DAMAGE_LEFT_LEG ] = 0;
    }
}

void answer_GM_PANNEL_CRITTER_PLAYER_STATS_SKINS( Critter& player, uint answerI, string& answerS )
{
    Critter@ cr = GetCritter( player.Stat[ ST_VAR0 ] );
    if( @cr is null )
        return;
    if( answerI == 0 )
    {
        player.ShowScreen( SCREEN_DIALOGBOX, 15, "answer_GM_PANNEL_CRITTER_PLAYER_STATS_SKINS_BODY" );
        player.Say( SAY_DIALOGBOX_TEXT, "Текущий бодитайп - " + cr.Stat[ ST_BODY_TYPE ] );
        player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "1 мужчина" );
        player.Say( SAY_DIALOGBOX_BUTTON( 1 ), "2 женщина" );
        player.Say( SAY_DIALOGBOX_BUTTON( 2 ), "3 ребенок" );
        player.Say( SAY_DIALOGBOX_BUTTON( 3 ), "4 супермутант" );
        player.Say( SAY_DIALOGBOX_BUTTON( 4 ), "5 гуль" );
        player.Say( SAY_DIALOGBOX_BUTTON( 5 ), "6 брамин" );
        player.Say( SAY_DIALOGBOX_BUTTON( 6 ), "7 радскорпион" );
        player.Say( SAY_DIALOGBOX_BUTTON( 7 ), "8 крыса" );
        player.Say( SAY_DIALOGBOX_BUTTON( 8 ), "9 летун" );
        player.Say( SAY_DIALOGBOX_BUTTON( 9 ), "10 кентавр" );
        player.Say( SAY_DIALOGBOX_BUTTON( 10 ), "11 робот" );
        player.Say( SAY_DIALOGBOX_BUTTON( 11 ), "12 пес" );
        player.Say( SAY_DIALOGBOX_BUTTON( 12 ), "13 мантис" );
        player.Say( SAY_DIALOGBOX_BUTTON( 13 ), "14 коготь смерти" );
        player.Say( SAY_DIALOGBOX_BUTTON( 14 ), "15 растение" );
    }
    if( answerI == 1 )
    {
        player.ShowScreen( SCREEN_SAY, 0, "gm@ask_GM_PANNEL_CRITTER_PLAYER_STATS_SKINS" );
        player.Say( SAY_SAY_TITLE, "Номер скина" );
    }
    if( answerI == 2 )
    {
        cr.ChangeCrType( cr.Stat[ ST_GENDER ] == GENDER_MALE ? CRTYPE_DEFAULT_M : CRTYPE_DEFAULT_F );
        cr.StatBase[ ST_BASE_CRTYPE ] = cr.Stat[ ST_GENDER ] == GENDER_MALE ? CRTYPE_DEFAULT_M : CRTYPE_DEFAULT_F;
    }
    if( answerI == 3 )
    {
        player.ShowScreen( SCREEN_DIALOGBOX, 6, "answer_GM_PANNEL_CRITTER_PLAYER_STATS_SKINS_BODY" );
        player.Say( SAY_DIALOGBOX_TEXT, "Текущий скин - " + cr.Stat[ ST_BASE_CRTYPE ] );
        player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "62 Дикарь" );
        player.Say( SAY_DIALOGBOX_BUTTON( 1 ), "64 сулик" );
        player.Say( SAY_DIALOGBOX_BUTTON( 2 ), "110 патлатый" );
        player.Say( SAY_DIALOGBOX_BUTTON( 3 ), "120 лысый" );
        player.Say( SAY_DIALOGBOX_BUTTON( 4 ), "61 Дикарка" );
        player.Say( SAY_DIALOGBOX_BUTTON( 5 ), "63 Дикарка хв." );
    }
    if( answerI == 4 )
    {
        player.ShowScreen( SCREEN_DIALOGBOX, 15, "answer_GM_PANNEL_CRITTER_PLAYER_STATS_SKINS_CIVIL" );
        player.Say( SAY_DIALOGBOX_TEXT, "Текущий скин - " + cr.Stat[ ST_BASE_CRTYPE ] );
        player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "33 Блондинка" );
        player.Say( SAY_DIALOGBOX_BUTTON( 1 ), "36 Девушка" );
        player.Say( SAY_DIALOGBOX_BUTTON( 2 ), "37 Шлюха" );
        player.Say( SAY_DIALOGBOX_BUTTON( 3 ), "39 Негр в кр." );
        player.Say( SAY_DIALOGBOX_BUTTON( 4 ), "40 свитер" );
        player.Say( SAY_DIALOGBOX_BUTTON( 5 ), "41 рубашка" );
        player.Say( SAY_DIALOGBOX_BUTTON( 6 ), "42 Коротышка" );
        player.Say( SAY_DIALOGBOX_BUTTON( 7 ), "43 Бомж сгорбленный" );
        player.Say( SAY_DIALOGBOX_BUTTON( 8 ), "48 Караванщик" );
        player.Say( SAY_DIALOGBOX_BUTTON( 9 ), "72 костюм" );
        player.Say( SAY_DIALOGBOX_BUTTON( 10 ), "73 Китти" );
        player.Say( SAY_DIALOGBOX_BUTTON( 11 ), "77 Вышибала" );
        player.Say( SAY_DIALOGBOX_BUTTON( 12 ), "57 Доктор" );
        player.Say( SAY_DIALOGBOX_BUTTON( 13 ), "89 Ученый" );
        player.Say( SAY_DIALOGBOX_BUTTON( 14 ), "91 Вик" );
    }
    if( answerI == 5 )
    {
        player.ShowScreen( SCREEN_DIALOGBOX, 9, "answer_GM_PANNEL_CRITTER_PLAYER_STATS_SKINS_BATTLE" );
        player.Say( SAY_DIALOGBOX_TEXT, "Текущий скин - " + cr.Stat[ ST_BASE_CRTYPE ] );
        player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "9 Негр" );
        player.Say( SAY_DIALOGBOX_BUTTON( 1 ), "34 Бандитка панк" );
        player.Say( SAY_DIALOGBOX_BUTTON( 2 ), "35 Мет. жен" );
        player.Say( SAY_DIALOGBOX_BUTTON( 3 ), "45 Бандит" );
        player.Say( SAY_DIALOGBOX_BUTTON( 4 ), "82 Китаец бед" );
        player.Say( SAY_DIALOGBOX_BUTTON( 5 ), "92 Китаец кр." );
        player.Say( SAY_DIALOGBOX_BUTTON( 6 ), "93 Китаец син." );
        player.Say( SAY_DIALOGBOX_BUTTON( 7 ), "94 Китайка" );
        player.Say( SAY_DIALOGBOX_BUTTON( 8 ), "87 Полицейский" );
    }
    if( answerI == 6 )
    {
        player.ShowScreen( SCREEN_DIALOGBOX, 3, "answer_GM_PANNEL_CRITTER_PLAYER_STATS_SKINS_MISC" );
        player.Say( SAY_DIALOGBOX_TEXT, "Текущий скин - " + cr.Stat[ ST_BASE_CRTYPE ] );
        player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "16 собака" );
        player.Say( SAY_DIALOGBOX_BUTTON( 1 ), "66 робот боевой" );
        player.Say( SAY_DIALOGBOX_BUTTON( 2 ), "65 растение" );
    }
}

void answer_GM_PANNEL_CRITTER_PLAYER_STATS_SKINS_CIVIL( Critter& player, uint answerI, string& answerS )
{
    Critter@ cr = GetCritter( player.Stat[ ST_VAR0 ] );
    if( cr is null )
        return;
    if( answerI == 0 )
    {
        cr.ChangeCrType( 33 );
        cr.StatBase[ ST_BASE_CRTYPE ] = 33;
    }
    if( answerI == 1 )
    {
        cr.ChangeCrType( 36 );
        cr.StatBase[ ST_BASE_CRTYPE ] = 36;
    }
    if( answerI == 2 )
    {
        cr.ChangeCrType( 37 );
        cr.StatBase[ ST_BASE_CRTYPE ] = 37;
    }
    if( answerI == 3 )
    {
        cr.ChangeCrType( 39 );
        cr.StatBase[ ST_BASE_CRTYPE ] = 39;
    }
    if( answerI == 4 )
    {
        cr.ChangeCrType( 40 );
        cr.StatBase[ ST_BASE_CRTYPE ] = 40;
    }
    if( answerI == 5 )
    {
        cr.ChangeCrType( 41 );
        cr.StatBase[ ST_BASE_CRTYPE ] = 41;
    }
    if( answerI == 6 )
    {
        cr.ChangeCrType( 42 );
        cr.StatBase[ ST_BASE_CRTYPE ] = 42;
    }
    if( answerI == 7 )
    {
        cr.ChangeCrType( 43 );
        cr.StatBase[ ST_BASE_CRTYPE ] = 43;
    }
    if( answerI == 8 )
    {
        cr.ChangeCrType( 48 );
        cr.StatBase[ ST_BASE_CRTYPE ] = 48;
    }
    if( answerI == 9 )
    {
        cr.ChangeCrType( 72 );
        cr.StatBase[ ST_BASE_CRTYPE ] = 72;
    }
    if( answerI == 10 )
    {
        cr.ChangeCrType( 73 );
        cr.StatBase[ ST_BASE_CRTYPE ] = 73;
    }
    if( answerI == 11 )
    {
        cr.ChangeCrType( 77 );
        cr.StatBase[ ST_BASE_CRTYPE ] = 77;
    }
    if( answerI == 12 )
    {
        cr.ChangeCrType( 57 );
        cr.StatBase[ ST_BASE_CRTYPE ] = 57;
    }
    if( answerI == 13 )
    {
        cr.ChangeCrType( 89 );
        cr.StatBase[ ST_BASE_CRTYPE ] = 89;
    }
    if( answerI == 14 )
    {
        cr.ChangeCrType( 91 );
        cr.StatBase[ ST_BASE_CRTYPE ] = 91;
    }
}

void answer_GM_PANNEL_CRITTER_PLAYER_STATS_SKINS_BATTLE( Critter& player, uint answerI, string& answerS )
{
    Critter@ cr = GetCritter( player.Stat[ ST_VAR0 ] );
    if( cr is null )
        return;
    if( answerI == 0 )
    {
        cr.ChangeCrType( 9 );
        cr.StatBase[ ST_BASE_CRTYPE ] = 9;
    }
    if( answerI == 1 )
    {
        cr.ChangeCrType( 34 );
        cr.StatBase[ ST_BASE_CRTYPE ] = 34;
    }
    if( answerI == 2 )
    {
        cr.ChangeCrType( 35 );
        cr.StatBase[ ST_BASE_CRTYPE ] = 35;
    }
    if( answerI == 3 )
    {
        cr.ChangeCrType( 45 );
        cr.StatBase[ ST_BASE_CRTYPE ] = 45;
    }
    if( answerI == 4 )
    {
        cr.ChangeCrType( 82 );
        cr.StatBase[ ST_BASE_CRTYPE ] = 82;
    }
    if( answerI == 5 )
    {
        cr.ChangeCrType( 92 );
        cr.StatBase[ ST_BASE_CRTYPE ] = 92;
    }
    if( answerI == 6 )
    {
        cr.ChangeCrType( 93 );
        cr.StatBase[ ST_BASE_CRTYPE ] = 93;
    }
    if( answerI == 7 )
    {
        cr.ChangeCrType( 94 );
        cr.StatBase[ ST_BASE_CRTYPE ] = 94;
    }
    if( answerI == 8 )
    {
        cr.ChangeCrType( 87 );
        cr.StatBase[ ST_BASE_CRTYPE ] = 87;
    }
}

void answer_GM_PANNEL_CRITTER_PLAYER_STATS_SKINS_MISC( Critter& player, uint answerI, string& answerS )
{
    Critter@ cr = GetCritter( player.Stat[ ST_VAR0 ] );
    if( cr is null )
        return;
    if( answerI == 0 )
    {
        cr.ChangeCrType( 16 );
        cr.StatBase[ ST_BASE_CRTYPE ] = 16;
    }
    if( answerI == 1 )
    {
        cr.ChangeCrType( 66 );
        cr.StatBase[ ST_BASE_CRTYPE ] = 66;
    }
    if( answerI == 2 )
    {
        cr.ChangeCrType( 66 );
        cr.StatBase[ ST_BASE_CRTYPE ] = 66;
    }
}

void ask_GM_PANNEL_CRITTER_PLAYER_STATS_SKINS( Critter& player, uint answerI, string& answerS )
{
    if( answerS.length() > 0 )
    {
        int      number = 0;
        StrToInt( answerS, number );
        Critter@ cr = GetCritter( player.Stat[ ST_VAR0 ] );
        if( !valid( cr ) )
        {
            player.Say( SAY_NETMSG, "персонажа " + GetPlayerName( player.Stat[ ST_VAR0 ] ) + "  " + player.Stat[ ST_VAR0 ] + " нет онлайн " );
            return;
        }
        cr.ChangeCrType( number );
        cr.StatBase[ ST_BASE_CRTYPE ] = number;
        player.Say( SAY_NETMSG, "Скин персонажа " + GetPlayerName( player.Stat[ ST_VAR0 ] ) + "  " + player.Stat[ ST_VAR0 ] + " был изменен на " + number );
    }
}

void answer_GM_PANNEL_CRITTER_PLAYER_STATS_SKINS_BODY( Critter& player, uint answerI, string& answerS )
{
    Critter@ cr = GetCritter( player.Stat[ ST_VAR0 ] );
    if( @cr is null )
        return;
    cr.StatBase[ ST_BODY_TYPE ] = answerI;
}

void answer_GM_PANNEL_CRITTER_PLAYER_STATS_MODES( Critter& player, uint answerI, string& answerS )
{
    Critter@ cr = GetCritter( player.Stat[ ST_VAR0 ] );
    if( @cr is null )
        return;
    if( answerI == 0 )
    {
        if( cr.Mode[ MODE_NO_PVP ] == 0 )
            cr.ModeBase[ MODE_NO_PVP ] = 1;
        else
            cr.ModeBase[ MODE_NO_PVP ] = 0;
    }
    if( answerI == 1 )
    {
        if( cr.Mode[ MODE_INVULNERABLE ] == 0 )
            cr.ModeBase[ MODE_INVULNERABLE ] = 1;
        else
            cr.ModeBase[ MODE_INVULNERABLE ] = 0;
    }
    if( answerI == 2 )
    {
        if( cr.Mode[ MODE_NO_LOOT ] == 0 )
            cr.ModeBase[ MODE_NO_LOOT ] = 1;
        else
            cr.ModeBase[ MODE_NO_LOOT ] = 0;
    }
    if( answerI == 3 )
    {
        if( cr.Mode[ MODE_NO_STEAL ] == 0 )
            cr.ModeBase[ MODE_NO_STEAL ] = 1;
        else
            cr.ModeBase[ MODE_NO_STEAL ] = 0;
    }
    if( answerI == 4 )
    {
        if( cr.Mode[ MODE_NO_PUSH ] == 0 )
            cr.ModeBase[ MODE_NO_PUSH ] = 1;
        else
            cr.ModeBase[ MODE_NO_PUSH ] = 0;
    }
    if( answerI == 5 )
    {
        if( cr.Mode[ MODE_NO_WALK ] == 0 )
            cr.ModeBase[ MODE_NO_WALK ] = 1;
        else
            cr.ModeBase[ MODE_NO_WALK ] = 0;
    }
    if( answerI == 6 )
    {
        if( cr.Mode[ MODE_NO_RUN ] == 0 )
            cr.ModeBase[ MODE_NO_RUN ] = 1;
        else
            cr.ModeBase[ MODE_NO_RUN ] = 0;
    }
    if( answerI == 7 )
    {
        if( cr.Mode[ MODE_NO_LOOSE_LIMBS ] == 0 )
            cr.ModeBase[ MODE_NO_LOOSE_LIMBS ] = 1;
        else
            cr.ModeBase[ MODE_NO_LOOSE_LIMBS ] = 0;
    }
    if( answerI == 8 )
    {
        if( cr.Mode[ MODE_NO_KNOCK ] == 0 )
            cr.ModeBase[ MODE_NO_KNOCK ] = 1;
        else
            cr.ModeBase[ MODE_NO_KNOCK ] = 0;
    }
    if( answerI == 9 )
    {
        player.ShowScreen( SCREEN_DIALOGBOX, 5, "answer_GM_PANNEL_CRITTER_PLAYER_STATS_MODES_MEDIUM" );
        player.Say( SAY_DIALOGBOX_TEXT, "Текущий - " + cr.Quest[ QST_MEDIUM ] );
        player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "0 - нет" );
        player.Say( SAY_DIALOGBOX_BUTTON( 1 ), "1 - мастер зверей" );
        player.Say( SAY_DIALOGBOX_BUTTON( 2 ), "2 - безликий" );
        player.Say( SAY_DIALOGBOX_BUTTON( 3 ), "3 - голос" );
        player.Say( SAY_DIALOGBOX_BUTTON( 4 ), "4 - притворщик" );
    }
	if( answerI == 10 )
	{
        cr.ModeBase[ MODE_UNLIMITED_AMMO ] = 1 - cr.ModeBase[ MODE_UNLIMITED_AMMO ];
	}
	if( answerI == 11 )
	{
        player.ShowScreen( SCREEN_DIALOGBOX, 12, "answer_GM_PANNEL_CRITTER_PLAYER_STATS_MODES" );
        player.Say( SAY_DIALOGBOX_TEXT, "Режимы игрока" );
        player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "" + cr.Mode[ MODE_NO_PVP ] + " - нопвп" );
        player.Say( SAY_DIALOGBOX_BUTTON( 1 ), "" + cr.Mode[ MODE_INVULNERABLE ] + " - неуязвимость" );
        player.Say( SAY_DIALOGBOX_BUTTON( 2 ), "" + cr.Mode[ MODE_NO_LOOT ] + " - нелутаемость" );
        player.Say( SAY_DIALOGBOX_BUTTON( 3 ), "" + cr.Mode[ MODE_NO_STEAL ] + " - неворуемость" );
        player.Say( SAY_DIALOGBOX_BUTTON( 4 ), "" + cr.Mode[ MODE_NO_PUSH ] + " - непихаемость" );
        player.Say( SAY_DIALOGBOX_BUTTON( 5 ), "" + cr.Mode[ MODE_NO_WALK ] + " - стоять" );
        player.Say( SAY_DIALOGBOX_BUTTON( 6 ), "" + cr.Mode[ MODE_NO_RUN ] + " - нет бега" );
        player.Say( SAY_DIALOGBOX_BUTTON( 7 ), "" + cr.Mode[ MODE_NO_LOOSE_LIMBS ] + " - нет травм" );
        player.Say( SAY_DIALOGBOX_BUTTON( 8 ), "" + cr.Mode[ MODE_NO_KNOCK ] + " - несбиваемость" );
        player.Say( SAY_DIALOGBOX_BUTTON( 9 ), "" + cr.Quest[ QST_MEDIUM ] + " - пси-способности" );
        player.Say( SAY_DIALOGBOX_BUTTON( 10 ), "" + cr.Mode[ MODE_UNLIMITED_AMMO ] + " - беск. патроны" );
		player.Say( SAY_DIALOGBOX_BUTTON( 11 ), "[обновить]" );
	}
}

void answer_GM_PANNEL_CRITTER_PLAYER_STATS_MODES_MEDIUM( Critter& player, uint answerI, string& answerS )
{
    Critter@ cr = GetCritter( player.Stat[ ST_VAR0 ] );
    if( @cr is null )
        return;
    if( answerI == 4 )
    {
        player.StatBase[ ST_VAR1 ] = QST_MEDIUM;
        player.ShowScreen( SCREEN_SAY, 0, "gm@ask_GM_PANNEL_CRITTER_PLAYER_STATS_SPECIAL" );
        player.Say( SAY_SAY_TITLE, "Ид" );
    }
	else cr.QuestBase[ QST_MEDIUM ] = answerI;
}

void answer_GM_PANNEL_CRITTER_PLAYER_STATS_FACTIONS( Critter& player, uint arg_answerI, string& answerS )
{
	int answerI = arg_answerI;
    Critter@ cr = GetCritter( player.Stat[ ST_VAR0 ] );
    if( @cr is null )
        return;
    if( answerI == AnswerIdFactions::NoFaction )
    {
        cr.QuestBase[QST_FACTION] = AnswerIdFactions::NoFaction;
        RestartFactions( cr, 0, 0, 0 );
        cr.MercBase[ MERC_MASTER_ID ] = player.Id;
        Log_factions( player, cr.Id, 2, AnswerIdFactions::NoFaction, null, null );
    }
    if( answerI == AnswerIdFactions::Administration )
    {
        cr.QuestBase[QST_FACTION] = AnswerIdFactions::Administration;
        RestartFactions( cr, 0, 0, 0 );
        cr.MercBase[ MERC_MASTER_ID ] = player.Id;
        Log_factions( player, cr.Id, 2, AnswerIdFactions::Administration, null, null );
    }
    if( answerI == AnswerIdFactions::Cop )
    {
        cr.QuestBase[QST_FACTION] = AnswerIdFactions::Cop;
        RestartFactions( cr, 0, 0, 0 );
        cr.MercBase[ MERC_MASTER_ID ] = player.Id;
        Log_factions( player, cr.Id, 2, AnswerIdFactions::Cop, null, null );
    }
    if( answerI == AnswerIdFactions::Mafia )
    {
        cr.QuestBase[QST_FACTION] = AnswerIdFactions::Mafia;
        RestartFactions( cr, 0, 0, 0 );
        cr.MercBase[ MERC_MASTER_ID ] = player.Id;
        Log_factions( player, cr.Id, 2, AnswerIdFactions::Mafia, null, null );
    }
    if( answerI == AnswerIdFactions::Mutant )
    {
        cr.QuestBase[QST_FACTION] = AnswerIdFactions::Mutant;
        RestartFactions( cr, 0, 0, 0 );
        cr.MercBase[ MERC_MASTER_ID ] = player.Id;
        Log_factions( player, cr.Id, 2, AnswerIdFactions::Mutant, null, null );
    }
    if( answerI == AnswerIdFactions::Fort )
    {
        cr.QuestBase[QST_FACTION] = AnswerIdFactions::Fort;
        RestartFactions( cr, 0, 0, 0 );
        cr.MercBase[ MERC_MASTER_ID ] = player.Id;
        Log_factions( player, cr.Id, 2, AnswerIdFactions::Fort, null, null );
    }
    if( answerI == AnswerIdFactions::Raider )
    {
        cr.QuestBase[QST_FACTION] = ( AnswerIdFactions::Raider );
        RestartFactions( cr, 0, 0, 0 );
        cr.MercBase[ MERC_MASTER_ID ] = player.Id;
        Log_factions( player, cr.Id, 2, AnswerIdFactions::Raider, null, null );
    }
    if( answerI == AnswerIdFactions::Sheriff )
    {
        cr.QuestBase[QST_FACTION] = ( AnswerIdFactions::Sheriff );
		cr.AddItem( 1455, 1 );
        RestartFactions( cr, 0, 0, 0 );
        cr.MercBase[ MERC_MASTER_ID ] = player.Id;
        Log_factions( player, cr.Id, 2, AnswerIdFactions::Sheriff, null, null );
    }
    if( answerI == AnswerIdFactions::Mayor )
    {
        cr.QuestBase[QST_FACTION] = ( AnswerIdFactions::Mayor );
		cr.AddItem( 913, 1 );
        RestartFactions( cr, 0, 0, 0 );
        cr.MercBase[ MERC_MASTER_ID ] = player.Id;
        Log_factions( player, cr.Id, 2, AnswerIdFactions::Mayor, null, null );
    }
    if( answerI == AnswerIdFactions::Strange )
    {
        cr.QuestBase[QST_MODOC_CITIZENSHIP] =( 0 );
        RestartFactions( cr, 0, 0, 0 );
        cr.MercBase[ MERC_MASTER_ID ] = player.Id;
        Log_factions( player, cr.Id, 1, 0, null, null );
    }
    if( answerI == AnswerIdFactions::TimeGuest )
    {
        cr.QuestBase[QST_MODOC_CITIZENSHIP] =( 1 );
        RestartFactions( cr, 0, 0, 0 );
        cr.MercBase[ MERC_MASTER_ID ] = player.Id;
        Log_factions( player, cr.Id, 1, 1, null, null );
    }
    if( answerI == AnswerIdFactions::Guest )
    {
        cr.QuestBase[QST_MODOC_CITIZENSHIP] =( 2 );
        RestartFactions( cr, 0, 0, 0 );
        cr.MercBase[ MERC_MASTER_ID ] = player.Id;
        Log_factions( player, cr.Id, 1, 2, null, null );
    }
    if( answerI == AnswerIdFactions::Outcast )
    {
        cr.QuestBase[QST_MODOC_CITIZENSHIP] =( 10 );
        RestartFactions( cr, 0, 0, 0 );
        cr.MercBase[ MERC_MASTER_ID ] = player.Id;
        Log_factions( player, cr.Id, 1, 10, null, null );
    }
    if( answerI == AnswerIdFactions::Citizen )
    {
        cr.QuestBase[QST_MODOC_CITIZENSHIP] =( 3 );
        Item@ pass = cr.AddItem( PID_MODOC_DOCUMENTS, 1 );
        pass.Val1 = cr.Id;
        cr.MercBase[ MERC_MASTER_ID ] = player.Id;
        player.ShowScreen( SCREEN_SAY, 0, "handcuffs@PassportLex" );
        player.Say( SAY_SAY_TITLE, "Имя в документы" );
        player.StatBase[ ST_VAR3 ] = pass.Id;
        RestartFactions( cr, 0, 0, 0 );
        Log_factions( player, cr.Id, 1, 3, null, null );
    }
    if( answerI == AnswerIdFactions::RichCitizen )
    {
        cr.QuestBase[QST_MODOC_CITIZENSHIP] =( 4 );
        Item@ pass = cr.AddItem( PID_MODOC_DOCUMENTS, 1 );
        pass.Val1 = cr.Id;
        cr.MercBase[ MERC_MASTER_ID ] = player.Id;
        player.ShowScreen( SCREEN_SAY, 0, "handcuffs@PassportLex" );
        player.Say( SAY_SAY_TITLE, "Имя в документы" );
        player.StatBase[ ST_VAR3 ] = pass.Id;
        RestartFactions( cr, 0, 0, 0 );
        Log_factions( player, cr.Id, 1, 4, null, null );
    }
}

void answer_GM_PANNEL_CRITTER_PLAYER_STATS_SKILL2( Critter& player, uint answerI, string& answerS )
{
    Critter@ cr = GetCritter( player.Stat[ ST_VAR0 ] );
    if( @cr is null )
        return;
    if( answerI == 0 )
    {
        player.StatBase[ ST_VAR1 ] = 211;
        player.ShowScreen( SCREEN_SAY, 0, "gm@ask_GM_PANNEL_CRITTER_PLAYER_STATS_SPECIAL" );
        player.Say( SAY_SAY_TITLE, "Ловушки" );
    }
    if( answerI == 1 )
    {
        player.StatBase[ ST_VAR1 ] = 212;
        player.ShowScreen( SCREEN_SAY, 0, "gm@ask_GM_PANNEL_CRITTER_PLAYER_STATS_SPECIAL" );
        player.Say( SAY_SAY_TITLE, "Наука" );
    }
    if( answerI == 2 )
    {
        player.StatBase[ ST_VAR1 ] = 213;
        player.ShowScreen( SCREEN_SAY, 0, "gm@ask_GM_PANNEL_CRITTER_PLAYER_STATS_SPECIAL" );
        player.Say( SAY_SAY_TITLE, "Ремонт" );
    }
    if( answerI == 3 )
    {
        player.StatBase[ ST_VAR1 ] = 214;
        player.ShowScreen( SCREEN_SAY, 0, "gm@ask_GM_PANNEL_CRITTER_PLAYER_STATS_SPECIAL" );
        player.Say( SAY_SAY_TITLE, "Разговор" );
    }
    if( answerI == 4 )
    {
        player.StatBase[ ST_VAR1 ] = 215;
        player.ShowScreen( SCREEN_SAY, 0, "gm@ask_GM_PANNEL_CRITTER_PLAYER_STATS_SPECIAL" );
        player.Say( SAY_SAY_TITLE, "Торговля" );
    }
    if( answerI == 5 )
    {
        player.StatBase[ ST_VAR1 ] = 216;
        player.ShowScreen( SCREEN_SAY, 0, "gm@ask_GM_PANNEL_CRITTER_PLAYER_STATS_SPECIAL" );
        player.Say( SAY_SAY_TITLE, "Азартные игры" );
    }
    if( answerI == 6 )
    {
        player.StatBase[ ST_VAR1 ] = 217;
        player.ShowScreen( SCREEN_SAY, 0, "gm@ask_GM_PANNEL_CRITTER_PLAYER_STATS_SPECIAL" );
        player.Say( SAY_SAY_TITLE, "Скиталец" );
    }
}


void answer_GM_PANNEL_CRITTER_PLAYER_STATS_SKILL1( Critter& player, uint answerI, string& answerS )
{
    Critter@ cr = GetCritter( player.Stat[ ST_VAR0 ] );
    if( cr is null )
        return;

    player.ShowScreen( SCREEN_SAY, 0, "gm@ask_GM_PANNEL_CRITTER_PLAYER_STATS_SPECIAL" );
    if( answerI == 0 )
    {
        player.StatBase[ ST_VAR1 ] = 200;
        player.Say( SAY_SAY_TITLE, "Легкое" );
    }
    if( answerI == 1 )
    {
        player.StatBase[ ST_VAR1 ] = 201;
        player.Say( SAY_SAY_TITLE, "Тяжелое" );
    }
    if( answerI == 2 )
    {
        player.StatBase[ ST_VAR1 ] = 202;
        player.Say( SAY_SAY_TITLE, "Энерго" );
    }
    if( answerI == 3 )
    {
        player.StatBase[ ST_VAR1 ] = 203;
        player.Say( SAY_SAY_TITLE, "Рукопашная" );
    }
    if( answerI == 4 )
    {
        player.StatBase[ ST_VAR1 ] = 204;
        player.Say( SAY_SAY_TITLE, "Холодное" );
    }
    if( answerI == 5 )
    {
        player.StatBase[ ST_VAR1 ] = 205;
        player.Say( SAY_SAY_TITLE, "Метание" );
    }
    if( answerI == 6 )
    {
        player.StatBase[ ST_VAR1 ] = 206;
        player.Say( SAY_SAY_TITLE, "Санитар" );
    }
    if( answerI == 7 )
    {
        player.StatBase[ ST_VAR1 ] = 207;
        player.Say( SAY_SAY_TITLE, "Доктор" );
    }
    if( answerI == 8 )
    {
        player.StatBase[ ST_VAR1 ] = 208;
        player.Say( SAY_SAY_TITLE, "Скрытность" );
    }
    if( answerI == 9 )
    {
        player.StatBase[ ST_VAR1 ] = 209;
        player.Say( SAY_SAY_TITLE, "Взлом" );
    }
    if( answerI == 10 )
    {
        player.StatBase[ ST_VAR1 ] = 210;
        player.Say( SAY_SAY_TITLE, "Воровство" );
    }
}

void answer_GM_PANNEL_CRITTER_PLAYER_STATS_SPECIAL( Critter& player, uint answerI, string& answerS )
{
    Critter@ cr = GetCritter( player.Stat[ ST_VAR0 ] );
    if( @cr is null )
        return;

    player.ShowScreen( SCREEN_SAY, 0, "gm@ask_GM_PANNEL_CRITTER_PLAYER_STATS_SPECIAL" );

    if( answerI == 0 )
    {
        player.StatBase[ ST_VAR1 ] = 0;
        player.Say( SAY_SAY_TITLE, "Сила" );
    }
    if( answerI == 1 )
    {
        player.StatBase[ ST_VAR1 ] = 1;
        player.Say( SAY_SAY_TITLE, "Восприятие" );
    }
    if( answerI == 2 )
    {
        player.StatBase[ ST_VAR1 ] = 2;
        player.Say( SAY_SAY_TITLE, "Выносливость" );
    }
    if( answerI == 3 )
    {
        player.StatBase[ ST_VAR1 ] = 3;
        player.Say( SAY_SAY_TITLE, "Харизма" );
    }
    if( answerI == 4 )
    {
        player.StatBase[ ST_VAR1 ] = 4;
        player.Say( SAY_SAY_TITLE, "Интеллект" );
    }
    if( answerI == 5 )
    {
        player.StatBase[ ST_VAR1 ] = 5;
        player.Say( SAY_SAY_TITLE, "Ловкость" );
    }
    if( answerI == 6 )
    {
        player.StatBase[ ST_VAR1 ] = 6;
        player.Say( SAY_SAY_TITLE, "Удача" );
    }
}

void ask_GM_PANNEL_CRITTER_PLAYER_STATS_SPECIAL( Critter& player, uint answerI, string& answerS )
{
    Critter@ target = GetCritter( player.Stat[ ST_VAR0 ] );
    int      parameter = player.Stat[ ST_VAR1 ];
    if( !valid( target ) )
        return;
    if( answerS.length() > 0 )
    {
        int number = 0;
        StrToInt( answerS, number );
        target.ParamBase[ parameter ] = number;
        player.Say( SAY_NETMSG, "вы изменили параметр " + parameter + " на " + number + " у игрока " + target.Id );
		ChangeCritterSpeed(target);
        if( parameter >= 0 && parameter <= 6 )
        {
            player.ShowScreen( SCREEN_DIALOGBOX, 7, "answer_GM_PANNEL_CRITTER_PLAYER_STATS_SPECIAL" );
            player.Say( SAY_DIALOGBOX_TEXT, "SPECIAL игрока" );
            player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "" + target.StatBase[ ST_STRENGTH ] + " - сила" );
            player.Say( SAY_DIALOGBOX_BUTTON( 1 ), "" + target.StatBase[ ST_PERCEPTION ] + " - восприятие" );
            player.Say( SAY_DIALOGBOX_BUTTON( 2 ), "" + target.StatBase[ ST_ENDURANCE ] + " - выносливость" );
            player.Say( SAY_DIALOGBOX_BUTTON( 3 ), "" + target.StatBase[ ST_CHARISMA ] + " - харизма" );
            player.Say( SAY_DIALOGBOX_BUTTON( 4 ), "" + target.StatBase[ ST_INTELLECT ] + " - интеллект" );
            player.Say( SAY_DIALOGBOX_BUTTON( 5 ), "" + target.StatBase[ ST_AGILITY ] + " - ловкость" );
            player.Say( SAY_DIALOGBOX_BUTTON( 6 ), "" + target.StatBase[ ST_LUCK ] + " - удача" );
        }
        if( parameter >= 200 && parameter <= 210 )
        {
            player.ShowScreen( SCREEN_DIALOGBOX, 11, "answer_GM_PANNEL_CRITTER_PLAYER_STATS_SKILL1" );
            player.Say( SAY_DIALOGBOX_TEXT, "Навыки игрока" );
            player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "" + target.SkillBase[ SK_SMALL_GUNS ] + " - легкое" );
            player.Say( SAY_DIALOGBOX_BUTTON( 1 ), "" + target.SkillBase[ SK_BIG_GUNS ] + " - тяжолое" );
            player.Say( SAY_DIALOGBOX_BUTTON( 2 ), "" + target.SkillBase[ SK_ENERGY_WEAPONS ] + " - энерго" );
            player.Say( SAY_DIALOGBOX_BUTTON( 3 ), "" + target.SkillBase[ SK_UNARMED ] + " - рукопашная" );
            player.Say( SAY_DIALOGBOX_BUTTON( 4 ), "" + target.SkillBase[ SK_MELEE_WEAPONS ] + " - холодное" );
            player.Say( SAY_DIALOGBOX_BUTTON( 5 ), "" + target.SkillBase[ SK_THROWING ] + " - метание" );
            player.Say( SAY_DIALOGBOX_BUTTON( 6 ), "" + target.SkillBase[ SK_FIRST_AID ] + " - санитар" );
            player.Say( SAY_DIALOGBOX_BUTTON( 7 ), "" + target.SkillBase[ SK_DOCTOR ] + " - доктор" );
            player.Say( SAY_DIALOGBOX_BUTTON( 8 ), "" + target.SkillBase[ SK_SNEAK ] + " - скрытность" );
            player.Say( SAY_DIALOGBOX_BUTTON( 9 ), "" + target.SkillBase[ SK_LOCKPICK ] + " - взлом" );
            player.Say( SAY_DIALOGBOX_BUTTON( 10 ), "" + target.SkillBase[ SK_STEAL ] + " - кража" );
        }
        if( parameter >= 211 && parameter <= 217 )
        {
            player.ShowScreen( SCREEN_DIALOGBOX, 7, "answer_GM_PANNEL_CRITTER_PLAYER_STATS_SKILL2" );
            player.Say( SAY_DIALOGBOX_TEXT, "Навыки игрока" );
            player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "" + target.SkillBase[ SK_TRAPS ] + " - ловушки" );
            player.Say( SAY_DIALOGBOX_BUTTON( 1 ), "" + target.SkillBase[ SK_SCIENCE ] + " - наука" );
            player.Say( SAY_DIALOGBOX_BUTTON( 2 ), "" + target.SkillBase[ SK_REPAIR ] + " - ремонт" );
            player.Say( SAY_DIALOGBOX_BUTTON( 3 ), "" + target.SkillBase[ SK_SPEECH ] + " - разговор" );
            player.Say( SAY_DIALOGBOX_BUTTON( 4 ), "" + target.SkillBase[ SK_BARTER ] + " - торговля" );
            player.Say( SAY_DIALOGBOX_BUTTON( 5 ), "" + target.SkillBase[ SK_GAMBLING ] + " - игра" );
            player.Say( SAY_DIALOGBOX_BUTTON( 6 ), "" + target.SkillBase[ SK_OUTDOORSMAN ] + " - скиталец" );
        }
        if( parameter == ST_CURRENT_HP || parameter == ST_MAX_LIFE || parameter == ST_AGE || parameter == ST_GENDER )
        {
            player.ShowScreen( SCREEN_DIALOGBOX, 4, "answer_GM_PANNEL_CRITTER_PLAYER_STATS_PARAM" );
            player.Say( SAY_DIALOGBOX_TEXT, "Дополнительные параметры" );
            player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "" + target.StatBase[ ST_CURRENT_HP ] + "Текущее хп" );
            player.Say( SAY_DIALOGBOX_BUTTON( 1 ), "" + target.StatBase[ ST_MAX_LIFE ] + "макс хп" );
            player.Say( SAY_DIALOGBOX_BUTTON( 2 ), "" + target.StatBase[ ST_AGE ] + "возраст" );
            player.Say( SAY_DIALOGBOX_BUTTON( 3 ), "" + target.StatBase[ ST_GENDER ] + "пол" );
        }
    }
}

GMCommand( GM_PANNEL_CRITTER_NPC )
{
    Critter@ cr = GetCritter( param0 );
    if( @cr is null ) return;
	
    if( player.GetAccess() >= ACCESS_MODER )
    {
        player.StatBase[ ST_VAR0 ] = param0;
        player.ShowScreen( SCREEN_DIALOGBOX, 5, "answer_GM_PANNEL_CRITTER_NPC" );
        player.Say( SAY_DIALOGBOX_TEXT, "НПЦ, protoId - " + cr.GetProtoId() + ", диалог - " + cr.Stat[ ST_DIALOG_ID ] + ", Ai - " + GetScriptName ( cr.GetScriptId( ) ) );
        player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "Ai" );
        player.Say( SAY_DIALOGBOX_BUTTON( 1 ), "Режимы" );
        player.Say( SAY_DIALOGBOX_BUTTON( 2 ), "Параметры" );
        player.Say( SAY_DIALOGBOX_BUTTON( 3 ), "НПЦ-Параметры" );
        player.Say( SAY_DIALOGBOX_BUTTON( 4 ), "Инвентарь" );
    }
}

void answer_GM_PANNEL_CRITTER_NPC( Critter& player, uint answerI, string& answerS )
{
    Critter@ cr = GetCritter( player.StatBase[ ST_VAR0 ] );
    if( cr is null )
        return;
    if( answerI == 0 )
    {
        player.ShowScreen( SCREEN_SAY, 0, "answer_GM_PANNEL_CRITTER_NPC_AI" );
    }
    else if( answerI == 1 )
    {
        player.ShowScreen( SCREEN_DIALOGBOX, 14, "answer_GM_PANNEL_CRITTER_NPC_MODES" );
        player.Say( SAY_DIALOGBOX_TEXT, "Режимы игрока" );
        player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "" + cr.Mode[ MODE_NO_HOME ] + " - нет дом гекса" );
        player.Say( SAY_DIALOGBOX_BUTTON( 1 ), "" + cr.Mode[ MODE_NO_ENEMY_STACK ] + " - не запоминает врагов" );
        player.Say( SAY_DIALOGBOX_BUTTON( 2 ), "" + cr.Mode[ MODE_NO_LOOT ] + " - нелутаемость" );
        player.Say( SAY_DIALOGBOX_BUTTON( 3 ), "" + cr.Mode[ MODE_NO_STEAL ] + " - неворуемость" );
        player.Say( SAY_DIALOGBOX_BUTTON( 4 ), "" + cr.Mode[ MODE_NO_PUSH ] + " - непихаемость" );
        player.Say( SAY_DIALOGBOX_BUTTON( 5 ), "" + cr.Mode[ MODE_NO_WALK ] + " - стоять" );
        player.Say( SAY_DIALOGBOX_BUTTON( 6 ), "" + cr.Mode[ MODE_NO_RUN ] + " - нет бега" );
        player.Say( SAY_DIALOGBOX_BUTTON( 7 ), "" + cr.Mode[ MODE_NO_LOOSE_LIMBS ] + " - нет травм" );
        player.Say( SAY_DIALOGBOX_BUTTON( 8 ), "" + cr.Mode[ MODE_NO_KNOCK ] + " - несбиваемость" );
        player.Say( SAY_DIALOGBOX_BUTTON( 9 ), "" + cr.Mode[ MODE_NO_BARTER ] + " - неторгует" );
        player.Say( SAY_DIALOGBOX_BUTTON( 10 ), "" + cr.Mode[ MODE_BARTER_ONLY_CASH ] + " - только наличные" );
        player.Say( SAY_DIALOGBOX_BUTTON( 11 ), "" + cr.Mode[ MODE_NO_TALK ] + " - не разговаривает" );
        player.Say( SAY_DIALOGBOX_BUTTON( 12 ), "" + cr.Mode[ MODE_UNLIMITED_AMMO ] + " - беск патроны" );
        player.Say( SAY_DIALOGBOX_BUTTON( 13 ), "" + cr.Mode[ MODE_INVULNERABLE ] + " - неуязвимость" );
    }
    else if( answerI == 2 )
    {
        player.ShowScreen( SCREEN_DIALOGBOX, 9, "answer_GM_PANNEL_CRITTER_PLAYER_STATS" );
        player.Say( SAY_DIALOGBOX_TEXT, "Параметры, protoId - " + cr.GetProtoId() + ", диалог - " + cr.Stat[ ST_DIALOG_ID ] );
        player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "SPECIAL" );
        player.Say( SAY_DIALOGBOX_BUTTON( 1 ), "SKILLS 0-9" );
        player.Say( SAY_DIALOGBOX_BUTTON( 2 ), "SKILLS 10-20" );
        player.Say( SAY_DIALOGBOX_BUTTON( 3 ), "Травмы" );
        player.Say( SAY_DIALOGBOX_BUTTON( 4 ), "Режимы" );
        player.Say( SAY_DIALOGBOX_BUTTON( 5 ), "Скин/бодитайп" );
		player.Say( SAY_DIALOGBOX_BUTTON( 6 ), "Фр=" + cr.Quest[QST_FACTION] + ",Пр=" + cr.Quest[QST_MODOC_CITIZENSHIP] );
        player.Say( SAY_DIALOGBOX_BUTTON( 7 ), "Доп парам" );
        player.Say( SAY_DIALOGBOX_BUTTON( 8 ), "Лексема" );
    }
    else if( answerI == 3 )
    {
        player.ShowScreen( SCREEN_DIALOGBOX, 5, "answer_GM_PANNEL_CRITTER_NPC_STATS" );
        player.Say( SAY_DIALOGBOX_TEXT, "НПЦ параметры, protoId - " + cr.GetProtoId() + ", диалог - " + cr.Stat[ ST_DIALOG_ID ] );
        player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "" + cr.Stat[ ST_DIALOG_ID ] + "Диалог" );
        player.Say( SAY_DIALOGBOX_BUTTON( 1 ), "" + cr.Stat[ ST_AI_ID ] + "AI ID" );
        player.Say( SAY_DIALOGBOX_BUTTON( 2 ), "" + cr.Stat[ ST_NPC_ROLE ] + "NPC ROLE" );
        player.Say( SAY_DIALOGBOX_BUTTON( 3 ), "" + cr.Merc[ MERC_MASTER_ID ] + "Master" );
        player.Say( SAY_DIALOGBOX_BUTTON( 4 ), "" + cr.Stat[ ST_TEAM_ID ] + " Team ID" );
    }
	else if( answerI == 4 )
	{
		player.ShowContainer( cr, null, TRANSFER_FAR_CRIT );
	}
}

void answer_GM_PANNEL_CRITTER_NPC_AI( Critter& player, uint answerI, string& answerS )
{
	Critter@ cr = GetCritter( player.Stat[ ST_VAR0 ] );
	if( @cr !is null )
	{
		string@[] args = splitEx( answerS, "@" );
		if( args.length() == 1 )
			cr.SetScript( "Ai@" + answerS );
		else cr.SetScript( answerS );
	}
}

void answer_GM_PANNEL_CRITTER_NPC_STATS( Critter& player, uint answerI, string& answerS )
{
    Critter@ cr = GetCritter( player.Stat[ ST_VAR0 ] );
    if( cr is null )
        return;
    if( answerI == 0 )
    {
        player.ToLife();
        player.StatBase[ ST_VAR1 ] = ST_DIALOG_ID;
        player.ShowScreen( SCREEN_SAY, 0, "gm@ask_GM_PANNEL_CRITTER_PLAYER_STATS_SPECIAL" );
        player.Say( SAY_SAY_TITLE, "DIALOG_ID" );
    }
    if( answerI == 1 )
    {
        player.StatBase[ ST_VAR1 ] = ST_AI_ID;
        player.ShowScreen( SCREEN_SAY, 0, "gm@ask_GM_PANNEL_CRITTER_PLAYER_STATS_SPECIAL" );
        player.Say( SAY_SAY_TITLE, "AI_ID" );
    }
    if( answerI == 2 )
    {
        player.StatBase[ ST_VAR1 ] = ST_NPC_ROLE;
        player.ShowScreen( SCREEN_SAY, 0, "gm@ask_GM_PANNEL_CRITTER_PLAYER_STATS_SPECIAL" );
        player.Say( SAY_SAY_TITLE, "NPC_ROLE" );
    }
    if( answerI == 3 )
    {
        player.StatBase[ ST_VAR1 ] = MERC_MASTER_ID;
        player.ShowScreen( SCREEN_SAY, 0, "gm@ask_GM_PANNEL_CRITTER_PLAYER_STATS_SPECIAL" );
        player.Say( SAY_SAY_TITLE, "MERC_MASTER_ID" );
    }
    if( answerI == 4 )
    {
        player.StatBase[ ST_VAR1 ] = ST_TEAM_ID;
        player.ShowScreen( SCREEN_SAY, 0, "gm@ask_GM_PANNEL_CRITTER_PLAYER_STATS_SPECIAL" );
        player.Say( SAY_SAY_TITLE, "TEAM_ID" );
    }
    if( answerI == 5 )
    {
        GM_PANNEL_CRITTER_NPC( player, cr.Id, 0, 0, null, null );
    }
}

void answer_GM_PANNEL_CRITTER_NPC_MODES( Critter& player, uint answerI, string& answerS )
{
    Critter@ cr = GetCritter( player.Stat[ ST_VAR0 ] );
    if( cr is null )
        return;
    if( answerI == 0 )
    {
        if( cr.Mode[ MODE_NO_HOME ] == 0 )
            cr.ModeBase[ MODE_NO_HOME ] = 1;
        else
            cr.ModeBase[ MODE_NO_HOME ] = 0;
    }
    if( answerI == 1 )
    {
        if( cr.Mode[ MODE_NO_ENEMY_STACK ] == 0 )
            cr.ModeBase[ MODE_NO_ENEMY_STACK ] = 1;
        else
            cr.ModeBase[ MODE_NO_ENEMY_STACK ] = 0;
    }
    if( answerI == 2 )
    {
        if( cr.Mode[ MODE_NO_LOOT ] == 0 )
            cr.ModeBase[ MODE_NO_LOOT ] = 1;
        else
            cr.ModeBase[ MODE_NO_LOOT ] = 0;
    }
    if( answerI == 3 )
    {
        if( cr.Mode[ MODE_NO_STEAL ] == 0 )
            cr.ModeBase[ MODE_NO_STEAL ] = 1;
        else
            cr.ModeBase[ MODE_NO_STEAL ] = 0;
    }
    if( answerI == 4 )
    {
        if( cr.Mode[ MODE_NO_PUSH ] == 0 )
            cr.ModeBase[ MODE_NO_PUSH ] = 1;
        else
            cr.ModeBase[ MODE_NO_PUSH ] = 0;
    }
    if( answerI == 5 )
    {
        if( cr.Mode[ MODE_NO_WALK ] == 0 )
            cr.ModeBase[ MODE_NO_WALK ] = 1;
        else
            cr.ModeBase[ MODE_NO_WALK ] = 0;
    }
    if( answerI == 6 )
    {
        if( cr.Mode[ MODE_NO_RUN ] == 0 )
            cr.ModeBase[ MODE_NO_RUN ] = 1;
        else
            cr.ModeBase[ MODE_NO_RUN ] = 0;
    }
    if( answerI == 7 )
    {
        if( cr.Mode[ MODE_NO_LOOSE_LIMBS ] == 0 )
            cr.ModeBase[ MODE_NO_LOOSE_LIMBS ] = 1;
        else
            cr.ModeBase[ MODE_NO_LOOSE_LIMBS ] = 0;
    }
    if( answerI == 8 )
    {
        if( cr.Mode[ MODE_NO_KNOCK ] == 0 )
            cr.ModeBase[ MODE_NO_KNOCK ] = 1;
        else
            cr.ModeBase[ MODE_NO_KNOCK ] = 0;
    }
    if( answerI == 9 )
    {
        if( cr.Mode[ MODE_NO_BARTER ] == 0 )
            cr.ModeBase[ MODE_NO_BARTER ] = 1;
        else
            cr.ModeBase[ MODE_NO_BARTER ] = 0;
    }
    if( answerI == 10 )
    {
        if( cr.Mode[ MODE_BARTER_ONLY_CASH ] == 0 )
            cr.ModeBase[ MODE_BARTER_ONLY_CASH ] = 1;
        else
            cr.ModeBase[ MODE_BARTER_ONLY_CASH ] = 0;
    }
    if( answerI == 11 )
    {
        if( cr.Mode[ MODE_NO_TALK ] == 0 )
            cr.ModeBase[ MODE_NO_TALK ] = 1;
        else
            cr.ModeBase[ MODE_NO_TALK ] = 0;
    }
    if( answerI == 12 )
    {
        if( cr.Mode[ MODE_UNLIMITED_AMMO ] == 0 )
            cr.ModeBase[ MODE_UNLIMITED_AMMO ] = 1;
        else
            cr.ModeBase[ MODE_UNLIMITED_AMMO ] = 0;
    }
    if( answerI == 13 )
    {
        if( cr.Mode[ MODE_INVULNERABLE ] == 0 )
            cr.ModeBase[ MODE_INVULNERABLE ] = 1;
        else
            cr.ModeBase[ MODE_INVULNERABLE ] = 0;
    }
}


GMCommand( GM_PANNEL_ITEM )
{
    if( player.GetAccess() >= ACCESS_MODER )
    {
        Item@ item = GetItem( param0 );
        if( @item is null )
            return;
        GM_MAIN_PANNEL_ITEM( player, item );
    }
}


void GM_MAIN_PANNEL_ITEM( Critter& player, Item& item )
{
	player.StatBase[ ST_VAR0 ] = item.Id;
	player.ShowScreen( SCREEN_DIALOGBOX, 4, "answer_GM_PANNEL_ITEM" );
	player.Say( SAY_DIALOGBOX_TEXT, "Предмет, protoID =" + item.GetProtoId() + ", ид =" + item.Id );
	player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "переменные" );
	player.Say( SAY_DIALOGBOX_BUTTON( 1 ), "назначить скрипт" );
	player.Say( SAY_DIALOGBOX_BUTTON( 2 ), "флаги - 1" );
	player.Say( SAY_DIALOGBOX_BUTTON( 3 ), "флаги - 2" );
}

/*


*/

import int intsetval( uint id, uint val, int value ) from "interactive_obj";
import string@ intGetValueName( uint val ) from "interactive_obj";
import bool intgetval( uint id, int val, int&out value ) from "interactive_obj";

uint[] ItemFlags = 
{
	ITEM_HIDDEN								,// 0x00000001 )
	ITEM_FLAT                                ,// 0x00000002 )
	ITEM_NO_BLOCK                            ,// 0x00000004 )
	ITEM_SHOOT_THRU                          ,// 0x00000008 )
	ITEM_LIGHT_THRU                          ,// 0x00000010 )
	ITEM_TWO_HANDS                           ,// 0x00000080 )
	ITEM_BIG_GUN                             ,// 0x00000100 )
	ITEM_ALWAYS_VIEW                         ,// 0x00000200 )
	ITEM_HAS_TIMER                           ,// 0x00000400 )
	ITEM_BAD_ITEM                            ,// 0x00000800 )
	ITEM_NO_HIGHLIGHT                        ,// 0x00001000 )
	ITEM_SHOW_ANIM                           ,// 0x00002000 )
	ITEM_SHOW_ANIM_EXT                       ,// 0x00004000 )
	ITEM_LIGHT                               ,// 0x00008000 )
	ITEM_GECK                                ,// 0x00010000 )
	
	// Group2
	ITEM_TRAP                                ,// 0x00020000 )
	ITEM_NO_LIGHT_INFLUENCE                  ,// 0x00040000 )
	ITEM_NO_LOOT                             ,// 0x00080000 )
	ITEM_NO_STEAL                            ,// 0x00100000 )
	ITEM_GAG                                 ,// 0x00200000 )
	ITEM_COLORIZE                            ,// 0x00400000 )
	ITEM_COLORIZE_INV                        ,// 0x00800000 )
	ITEM_CAN_USE_ON_SMTH                     ,// 0x01000000 )
	ITEM_CAN_LOOK                            ,// 0x02000000 )
	ITEM_CAN_TALK                            ,// 0x04000000 )
	ITEM_CAN_PICKUP                          ,// 0x08000000 )
	ITEM_CAN_USE                             ,// 0x10000000 )
	ITEM_HOLODISK                            ,// 0x20000000 )
	ITEM_RADIO                               // 0x40000000 )
};
string[] ItemFlagsName = 
{
	"HIDDEN"								,// 0x00000001 )
	"FLAT"                                ,// 0x00000002 )
	"NO_BLOCK"                            ,// 0x00000004 )
	"SHOOT_THRU"                          ,// 0x00000008 )
	"LIGHT_THRU"                          ,// 0x00000010 )
	"TWO_HANDS"                           ,// 0x00000080 )
	"BIG_GUN"                             ,// 0x00000100 )
	"ALWAYS_VIEW"                         ,// 0x00000200 )
	"HAS_TIMER"                           ,// 0x00000400 )
	"BAD_ITEM"                            ,// 0x00000800 )
	"NO_HIGHLIGHT"                        ,// 0x00001000 )
	"SHOW_ANIM"                           ,// 0x00002000 )
	"SHOW_ANIM_EXT"                       ,// 0x00004000 )
	"LIGHT"                              ,// 0x00008000 )
	"GECK"                                ,// 0x00010000 )
	
	// Group2
	"TRAP"                                ,// 0x00020000 )
	"NO_LIGHT_INFLUENCE"                  ,// 0x00040000 )
	"NO_LOOT"                             ,// 0x00080000 )
	"NO_STEAL"                            ,// 0x00100000 )
	"GAG"                                 ,// 0x00200000 )
	"COLORIZE"                            ,// 0x00400000 )
	"COLORIZE_INV"                        ,// 0x00800000 )
	"CAN_USE_ON_SMTH"                     ,// 0x01000000 )
	"CAN_LOOK"                            ,// 0x02000000 )
	"CAN_TALK"                            ,// 0x04000000 )
	"CAN_PICKUP"                          ,// 0x08000000 )
	"CAN_USE"                             ,// 0x10000000 )
	"HOLODISK"                           ,// 0x20000000 )
	"RADIO"                               // 0x40000000 )
};

void answer_GM_PANNEL_ITEM( Critter& player, uint answerI, string& answerS )
{
    Item@ item = GetItem( player.StatBase[ ST_VAR0 ] );
    if( @item is null ) return;
    switch( answerI )
    {	
		case 0:
		{
			player.ShowScreen( SCREEN_DIALOGBOX, 10, "answer_GM_PANNEL_ITEM_VALS" );
			player.Say( SAY_DIALOGBOX_TEXT, "Предмет, protoID =" + item.GetProtoId() + ", ид =" + item.Id );

			int value = 0;
			if( intgetval( item.Id, 0, value ) )
			{
				for( uint i = 0; i < 10; i++ )
				{
					intgetval( item.Id, i, value );
					player.Say( SAY_DIALOGBOX_BUTTON( i ), intGetValueName( i ) + ": " + value );
				}
			}
			else
			{
				player.Say( SAY_DIALOGBOX_BUTTON( 0 ), ""+item.Val0 +" Val0" );
				player.Say( SAY_DIALOGBOX_BUTTON( 1 ), ""+item.Val1 +" Val1" );
				player.Say( SAY_DIALOGBOX_BUTTON( 2 ), ""+item.Val2 +" Val2" );
				player.Say( SAY_DIALOGBOX_BUTTON( 3 ), ""+item.Val3 +" Val3" );
				player.Say( SAY_DIALOGBOX_BUTTON( 4 ), ""+item.Val4 +" Val4" );
				player.Say( SAY_DIALOGBOX_BUTTON( 5 ), ""+item.Val5 +" Val5" );
				player.Say( SAY_DIALOGBOX_BUTTON( 6 ), ""+item.Val6 +" Val6" );
				player.Say( SAY_DIALOGBOX_BUTTON( 7 ), ""+item.Val7 +" Val7" );
				player.Say( SAY_DIALOGBOX_BUTTON( 8 ), ""+item.Val8 +" Val8" );
				player.Say( SAY_DIALOGBOX_BUTTON( 9 ), ""+item.Val9 +" Val9" );
			}
		} break;
	
		case 1:
		{
			player.ShowScreen( SCREEN_DIALOGBOX, 6, "answer_GM_PANNEL_ITEM_SCRIPT" );
			player.Say( SAY_DIALOGBOX_TEXT, "Предмет, protoID =" + item.GetProtoId() + ", ид =" + item.Id );
			player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "верстак");
			player.Say( SAY_DIALOGBOX_BUTTON( 1 ), "плавильня");
			player.Say( SAY_DIALOGBOX_BUTTON( 2 ), "монетный пресс");
			player.Say( SAY_DIALOGBOX_BUTTON( 3 ), "пилорама");
			player.Say( SAY_DIALOGBOX_BUTTON( 4 ), "токарный станок");
			player.Say( SAY_DIALOGBOX_BUTTON( 5 ), "Хим.лаборатория");
		} break;
	
		case 2:
		{
			player.ShowScreen( SCREEN_DIALOGBOX, 15, "answer_GM_PANNEL_ITEM_Flags0" );
			player.Say( SAY_DIALOGBOX_TEXT, "Предмет, protoID =" + item.GetProtoId() + ", ид =" + item.Id );
			for( uint i = 0; i < 15; i++ )
				player.Say( SAY_DIALOGBOX_BUTTON( i ), ItemFlagsName[i] + ": " + FLAG( item.Flags, ItemFlags[i] ) );
				
		} break;
	
		case 3:
		{
			player.ShowScreen( SCREEN_DIALOGBOX, 14, "answer_GM_PANNEL_ITEM_Flags1" );
			player.Say( SAY_DIALOGBOX_TEXT, "Предмет, protoID =" + item.GetProtoId() + ", ид =" + item.Id );
			for( uint i = 0; i < 14; i++ )
				player.Say( SAY_DIALOGBOX_BUTTON( i ), ItemFlagsName[ i + 15 ] + ": " + FLAG( item.Flags, ItemFlags[i + 15] ) );
		} break;
		
		default: break;
	}
}


void answer_GM_PANNEL_ITEM_Flags0( Critter& player, uint answerI, string& answerS )
{
    Item@ item = GetItem( player.Stat[ ST_VAR0 ] );
    if( @item is null ) return;
	if( FLAG( item.Flags, ItemFlags[answerI] ) )
		UNSETFLAG( item.Flags, ItemFlags[answerI] );
	else SETFLAG( item.Flags, ItemFlags[answerI] );
	GM_MAIN_PANNEL_ITEM( player, item );
}

void answer_GM_PANNEL_ITEM_Flags1( Critter& player, uint answerI, string& answerS )
{
    answer_GM_PANNEL_ITEM_Flags0( player, answerI + 15, answerS );
}

void answer_GM_PANNEL_ITEM_SCRIPT( Critter& player, uint answerI, string& answerS )
{
	Item@ item = GetItem( player.Stat[ ST_VAR0 ] );
	if( item is null )
		return;
    if( answerI == 0 ) {
		if( item.GetProtoId() != 157 ) { player.Say( SAY_NETMSG, "Не тот прототип." ); return; }
		else SetWorkbench( player, item.Id, 0, 0 );
    }
	if( answerI == 1 ) {
		if( item.GetProtoId() != 1309 ) { player.Say( SAY_NETMSG, "Не тот прототип." ); return; }
		else SetWorkbench( player, item.Id, 1, 0 );
    }
	if( answerI == 2 ) {
		if( item.GetProtoId() != 157 ) { player.Say( SAY_NETMSG, "Не тот прототип." ); return; }
		else SetWorkbench( player, item.Id, 0, 0 );
    }
	if( answerI == 3 ) {
		if( item.GetProtoId() != 157 ) { player.Say( SAY_NETMSG, "Не тот прототип." ); return; }
		else SetWorkbench( player, item.Id, 0, 0 );
    }
	if( answerI == 4 ) {
		if( item.GetProtoId() != 157 ) { player.Say( SAY_NETMSG, "Не тот прототип." ); return; }
		else SetWorkbench( player, item.Id, 0, 0 );
    }
	if( answerI == 5 ){
		if( item.GetProtoId () != 16805) { player.Say( SAY_NETMSG, "Не тот прототип." ); return; }
		else SetWorkbench( player, item.Id, 2, 0 );
	}
}

void answer_GM_PANNEL_ITEM_VALS( Critter& player, uint answerI, string& answerS )
{
        Item@ item = GetItem( player.Stat[ ST_VAR0 ] );
        if( @item is null )
            return;
			
        player.StatBase[ ST_VAR1 ] = answerI;
        player.ShowScreen( SCREEN_SAY, 0, "gm@ask_GM_PANNEL_ITEM" );
        player.Say( SAY_SAY_TITLE, "Val"+answerI);
}

void ask_GM_PANNEL_ITEM( Critter& player, uint answerI, string& answerS )
{
    Item@ item = GetItem( player.StatBase[ ST_VAR0 ] );
    if( @item is null ) return;
    if( answerS.length() > 0 )
    {
        int val_number = player.StatBase[ ST_VAR1 ];
        int number = 0;
        StrToInt( answerS, number );
		int value = 0;
		if( intgetval( item.Id, val_number, value ) )
		{
			intsetval( item.Id, val_number, number );
			player.Say( SAY_NETMSG, "вы изменили " + intGetValueName( val_number ) + " на " + number + " у предмета " + item.Id );
		}
		else
		{
			switch( val_number )
			{
			  case  0: item.Val0=number;  break;
			  case  1: item.Val1=number;  break;
			  case  2: item.Val2=number;  break;
			  case  3: item.Val3=number;  break;
			  case  4: item.Val4=number;  break;
			  case  5: item.Val5=number;  break;
			  case  6: item.Val6=number;  break;
			  case  7: item.Val7=number;  break;
			  case  8: item.Val8=number;  break;
			  case  9: item.Val9=number;  break;
			}
			player.Say( SAY_NETMSG, "вы изменили val" + val_number + " на " + number + " у предмета " + item.Id );
		}
		
       answer_GM_PANNEL_ITEM( player, 0, answerS );
    }
}

GMCommand( GM_PANNEL_HEX )
{
    if( player.GetAccess() >= ACCESS_MODER )
    {
        player.ShowScreen( SCREEN_DIALOGBOX, 5, "answer_GM_PANNEL_HEX" );
        player.Say( SAY_DIALOGBOX_TEXT, "Действия с пустым гексом x " + param0 + " y " + param1 );
        player.MercBase[ MERC_LOSE_DIST ] = param0;
        player.MercBase[ MERC_MASTER_DIST ] = param1;
        player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "повтор спавн" );
        player.Say( SAY_DIALOGBOX_BUTTON( 1 ), "создать нпц" );
        player.Say( SAY_DIALOGBOX_BUTTON( 2 ), "Переместиться" );
        player.Say( SAY_DIALOGBOX_BUTTON( 3 ), "TeleportByID" );
		player.Say( SAY_DIALOGBOX_BUTTON( 4 ), "Спавн предмета");
    }
}

void ask_GM_PANNEL_HEX_GET_CRITTER_ID( Critter& player, uint answerI, string& answerS )
{		
	if( answerS.length() > 0 )
	{
		int id = -1;
		if( StrToInt( answerS, id ) && id != -1 )
		{
			Critter@ critter = GetCritter( id );
			if( @critter !is null )
				critter.TransitToMap( player.GetMap().Id, player.Merc[ MERC_LOSE_DIST ], player.Merc[ MERC_MASTER_DIST ], 0 );
		}
	}
}

void ask_GM_ADD_ITEM_HEX( Critter& player, uint answerI, string& answerS )
{
	int	pid = 0,
		hexX = player.ParamBase[ MERC_LOSE_DIST ],
		hexY = player.ParamBase[ MERC_MASTER_DIST ];

	Map@ map = player.GetMap(); if(!valid(map)) return;
	Item@ item;
	
	if( StrToInt( answerS, pid ) && pid > 0 )
	{
		@item = map.AddItem( hexX, hexY, pid, 1 );
		if( !valid(item) )
		{
			player.Say( SAY_NETMSG, "Не удалось." );
			return;
		}
	}
	else
	{
		player.Say( SAY_NETMSG, "Айди предмета некорректен." );
		return;
	}
}

void answer_GM_PANNEL_HEX( Critter& player, uint answerI, string& answerS )
{
    int weapon = player.Merc[ MERC_ASSIST_MASTER ],
        AI_type = player.Merc[ MERC_TYPE ],
        hexX = player.Merc[ MERC_LOSE_DIST ],
        hexY = player.Merc[ MERC_MASTER_DIST ],
        bonus_hp = player.Merc[ MERC_CANCEL_TIME ],
        bonus_dmg = player.Merc[ MERC_CANCEL_ON_GLOBAL ],
        bonus_skill = player.Merc[ MERC_WAIT_FOR_MASTER ];

    switch( answerI )
	{
		case 0:
		{
			Map@ map = player.GetMap();
			GM_SPAWN( player, map, weapon, AI_type, hexX, hexY, bonus_hp, bonus_dmg, bonus_skill );
			GM_PANNEL_HEX( player, hexX + Random( -1, 1 ), hexY + Random( -1, 1 ), 0, null, null );
		} break;
		
		case 1:
		{
			string plead;
			player.ShowScreen( SCREEN_DIALOGBOX, 12, "answer_GM_PANNEL_HEX_SPAWN" );
			player.Say( SAY_DIALOGBOX_TEXT, "Выберите тип спавна нпц, АИ=" + GetAiName(AI_type,player) + ", ХП+=" + bonus_hp + ", Дмг+=" + bonus_dmg + ", skill+=" + bonus_skill );
			player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "АИ " );
			player.Say( SAY_DIALOGBOX_BUTTON( 1 ), "животные" );
			player.Say( SAY_DIALOGBOX_BUTTON( 2 ), "монстры" );
			player.Say( SAY_DIALOGBOX_BUTTON( 3 ), "рейдеры" );
			player.Say( SAY_DIALOGBOX_BUTTON( 4 ), "мутанты" );
			player.Say( SAY_DIALOGBOX_BUTTON( 5 ), "гражданские" );
			player.Say( SAY_DIALOGBOX_BUTTON( 6 ), "разное" );
			player.Say( SAY_DIALOGBOX_BUTTON( 7 ), "бонус хп" );
			player.Say( SAY_DIALOGBOX_BUTTON( 8 ), "бонус дмг" );
			player.Say( SAY_DIALOGBOX_BUTTON( 9 ), "бонус скил" );
			player.Say( SAY_DIALOGBOX_BUTTON( 10 ), "назад" );
		} break;
		
		case 2:
		{
			player.TransitToHex (hexX, hexY, player.Dir);
		} break;	
		
		case 3:
		{
			
			player.ShowScreen( SCREEN_SAY, 0, "ask_GM_PANNEL_HEX_GET_CRITTER_ID" );
			player.Say( SAY_SAY_TITLE, "Введите айди криттера" );
		} break;
		
		case 4:
		{
			player.ShowScreen( SCREEN_SAY, 0, "gm@ask_GM_ADD_ITEM_HEX" );
			player.Say( SAY_SAY_TITLE, "PID предмета:" );
			break;
		}
		
		default: break;
	}
}

string@ GetAiName( uint index, Critter@ cr )
{
	switch( index )
	{
		case 0: return "контроль";
		case 1: return "животное";
		case 2: return "агрессия";
		case 3: return "охрана";
		case 4: return "лидер";
		case 5: return "миньон";
		case 6: return "болванка";
		case 7: 
		{
			if( @cr is null )
				return "Произвольное";
				
			
			GMPreset@ preset = GetPreset( cr );
			if( @preset.spawn.script !is null )
				return @preset.spawn.script;
			return "Error";
		} 
		default: break;
	}
	return "nope";
}

void answer_GM_PANNEL_HEX_SPAWN( Critter& player, uint answerI, string& answerS )
{
    int AI_type = player.Merc[ MERC_TYPE ],
        weapon = player.Merc[ MERC_ASSIST_MASTER ],
        bonus_hp = player.Merc[ MERC_CANCEL_TIME ],
        bonus_dmg = player.Merc[ MERC_CANCEL_ON_GLOBAL ],
        bonus_skill = player.Merc[ MERC_WAIT_FOR_MASTER ];
    if( answerI == 0 )
    {
        player.ShowScreen( SCREEN_DIALOGBOX, 8, "answer_GM_PANNEL_HEX_SPAWN_AI" );
        player.Say( SAY_DIALOGBOX_TEXT, "АИ, текущее - " + GetAiName(player.Merc[ MERC_TYPE ],player) );
		for( uint i = 0; i < 7; i++ )
			player.Say( SAY_DIALOGBOX_BUTTON( i ), GetAiName(i,player) );
		player.Say( SAY_DIALOGBOX_BUTTON( 7 ), GetAiName(7,null) );
    }
    if( answerI == 1 )
    {
        player.ShowScreen( SCREEN_DIALOGBOX, 14, "answer_GM_PANNEL_HEX_SPAWN_ANIMAL" );
        player.Say( SAY_DIALOGBOX_TEXT, "Выберите вид животного, АИ=" + GetAiName(AI_type,player) + ", ХП+=" + bonus_hp + ", Дмг+=" + bonus_dmg + ", skill+=" + bonus_skill );
        player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "крыса" );
        player.Say( SAY_DIALOGBOX_BUTTON( 1 ), "мантис" );
        player.Say( SAY_DIALOGBOX_BUTTON( 2 ), "муравей" );
        player.Say( SAY_DIALOGBOX_BUTTON( 3 ), "свинокрыс" );
        player.Say( SAY_DIALOGBOX_BUTTON( 4 ), "кротокрыс" );
        player.Say( SAY_DIALOGBOX_BUTTON( 5 ), "большой кротокрыс" );
        player.Say( SAY_DIALOGBOX_BUTTON( 6 ), "гекко" );
        player.Say( SAY_DIALOGBOX_BUTTON( 7 ), "золотой гекко" );
        player.Say( SAY_DIALOGBOX_BUTTON( 8 ), "собака" );
        player.Say( SAY_DIALOGBOX_BUTTON( 9 ), "малый скорпион" );
        player.Say( SAY_DIALOGBOX_BUTTON( 10 ), "большой скорпион" );
        player.Say( SAY_DIALOGBOX_BUTTON( 11 ), "брамин" );
		player.Say( SAY_DIALOGBOX_BUTTON( 12 ), "хищ.цвет" );
        player.Say( SAY_DIALOGBOX_BUTTON( 13 ), "назад" );
    }
    if( answerI == 2 )
    {
        player.ShowScreen( SCREEN_DIALOGBOX, 9, "answer_GM_PANNEL_HEX_SPAWN_MONSTER" );
        player.Say( SAY_DIALOGBOX_TEXT, "Выберите вид монстра, АИ=" + GetAiName(AI_type,player) + ", ХП+=" + bonus_hp + ", Дмг+=" + bonus_dmg + ", skill+=" + bonus_skill );
        player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "чужой" );
        player.Say( SAY_DIALOGBOX_BUTTON( 1 ), "малый коготь" );
        player.Say( SAY_DIALOGBOX_BUTTON( 2 ), "большой коготь" );
		player.Say( SAY_DIALOGBOX_BUTTON( 3 ), "серый коготь" );
		player.Say( SAY_DIALOGBOX_BUTTON( 4 ), "огнегекко" );
        player.Say( SAY_DIALOGBOX_BUTTON( 5 ), "кентавр" );
        player.Say( SAY_DIALOGBOX_BUTTON( 6 ), "летун" );
        player.Say( SAY_DIALOGBOX_BUTTON( 7 ), "болотник" );
        player.Say( SAY_DIALOGBOX_BUTTON( 8 ), "назад" );
    }
    if( answerI == 3 )
    {
        player.ShowScreen( SCREEN_DIALOGBOX, 11, "answer_GM_PANNEL_HEX_SPAWN_RAIDER" );
        player.Say( SAY_DIALOGBOX_TEXT, "Выберите вид рейдера, АИ=" + GetAiName(AI_type,player) + ", ХП+=" + bonus_hp + ", Дмг+=" + bonus_dmg + ", skill+=" + bonus_skill + ", оружие=" + weapon );
        player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "кан.+нож" );
        player.Say( SAY_DIALOGBOX_BUTTON( 1 ), "кан.+копье" );
        player.Say( SAY_DIALOGBOX_BUTTON( 2 ), "кан.ж +нож" );
        player.Say( SAY_DIALOGBOX_BUTTON( 3 ), "кан.ж +мяч" );
        player.Say( SAY_DIALOGBOX_BUTTON( 4 ), "рейдер+дубин" );
        player.Say( SAY_DIALOGBOX_BUTTON( 5 ), "рейдер+нож" );
        player.Say( SAY_DIALOGBOX_BUTTON( 6 ), "рейдер+винтов" );
        player.Say( SAY_DIALOGBOX_BUTTON( 7 ), "рейдер+пистолет" );
        player.Say( SAY_DIALOGBOX_BUTTON( 8 ), "рейдерша+пистолет" );
        player.Say( SAY_DIALOGBOX_BUTTON( 9 ), "рейдерша+копье" );
        player.Say( SAY_DIALOGBOX_BUTTON( 10 ), "рейдерша+пп" );
    }
    if( answerI == 4 )
    {
        player.Say( SAY_NETMSG, "Игрок не найден." );
    }
    if( answerI == 5 )
    {
        player.Say( SAY_NETMSG, "Игрок не найден." );
    }
    if( answerI == 6 )
    {
        player.Say( SAY_NETMSG, "Игрок не найден." );
    }
    if( answerI == 7 )
    {
        player.StatBase[ ST_VAR1 ] = MERC_CANCEL_TIME;
        player.ShowScreen( SCREEN_SAY, 0, "gm@ask_GM_PANNEL_CRITTER_PLAYER_STATS_SPECIAL" );
        player.Say( SAY_SAY_TITLE, "бонус хп" );
    }
    if( answerI == 8 )
    {
        player.StatBase[ ST_VAR1 ] = MERC_CANCEL_ON_GLOBAL;
        player.ShowScreen( SCREEN_SAY, 0, "gm@ask_GM_PANNEL_CRITTER_PLAYER_STATS_SPECIAL" );
        player.Say( SAY_SAY_TITLE, "бонус дмг" );
    }
    if( answerI == 9 )
    {
        player.StatBase[ ST_VAR1 ] = MERC_WAIT_FOR_MASTER;
        player.ShowScreen( SCREEN_SAY, 0, "gm@ask_GM_PANNEL_CRITTER_PLAYER_STATS_SPECIAL" );
        player.Say( SAY_SAY_TITLE, "бонус скилл" );
    }
    if( answerI == 10 )
    {
        GM_PANNEL_HEX( player, player.Merc[ MERC_LOSE_DIST ], player.Merc[ MERC_MASTER_DIST ], 0, null, null );
    }

}

void answer_GM_PANNEL_HEX_SPAWN_AI( Critter& player, uint answerI, string& answerS )
{
	player.MercBase[ MERC_TYPE ] = answerI;
	if( answerI == 7 )
		player.ShowScreen( SCREEN_SAY, 0, "answer_GM_PANNEL_CUSTOM_CRITTER_NPC_AI" );
	else
		player.Say( SAY_NETMSG, "Режим спавна - <" + GetAiName( answerI, player ) + ">." );
	
}

void answer_GM_PANNEL_CUSTOM_CRITTER_NPC_AI( Critter& player, uint answerI, string& answerS )
{
	@GetPreset( player ).spawn.script = answerS;
	player.Say( SAY_NETMSG, "Режим спавна - <" + answerS + ">." );
}

void answer_GM_PANNEL_HEX_SPAWN_ANIMAL( Critter& player, uint answerI, string& answerS )
{
    if( answerI >= 0 && answerI <= 12 )
    {
        Map@ map = player.GetMap();
        GetPreset( player ).spawn.ProtoId = answerI + 310;
        player.MercBase[ MERC_ASSIST_MASTER ] = 0;

        int weapon = player.Merc[ MERC_ASSIST_MASTER ],
            AI_type = player.Merc[ MERC_TYPE ],
            hexX = player.Merc[ MERC_LOSE_DIST ],
            hexY = player.Merc[ MERC_MASTER_DIST ],
            bonus_hp = player.Merc[ MERC_CANCEL_TIME ],
            bonus_dmg = player.Merc[ MERC_CANCEL_ON_GLOBAL ],
            bonus_skill = player.Merc[ MERC_WAIT_FOR_MASTER ];

        GM_SPAWN( player, map, weapon, AI_type, hexX, hexY, bonus_hp, bonus_dmg, bonus_skill );
        GM_PANNEL_HEX( player, hexX + Random( -1, 1 ), hexY + Random( -1, 1 ), 0, null, null );
    }
    else if( answerI == 13 )
        GM_PANNEL_HEX( player, player.Merc[ MERC_LOSE_DIST ], player.Merc[ MERC_MASTER_DIST ], 0, null, null );
}

void answer_GM_PANNEL_HEX_SPAWN_MONSTER( Critter& player, uint answerI, string& answerS )
{
    if( answerI >= 0 && answerI <= 7 )
    {
        Map@ map = player.GetMap();
        GetPreset( player ).spawn.ProtoId = answerI + 323;
        player.MercBase[ MERC_ASSIST_MASTER ] = 0;

        int weapon = player.Merc[ MERC_ASSIST_MASTER ],
            AI_type = player.Merc[ MERC_TYPE ],
            hexX = player.Merc[ MERC_LOSE_DIST ],
            hexY = player.Merc[ MERC_MASTER_DIST ],
            bonus_hp = player.Merc[ MERC_CANCEL_TIME ],
            bonus_dmg = player.Merc[ MERC_CANCEL_ON_GLOBAL ],
            bonus_skill = player.Merc[ MERC_WAIT_FOR_MASTER ];

        GM_SPAWN( player, map, weapon, AI_type, hexX, hexY, bonus_hp, bonus_dmg, bonus_skill );
        GM_PANNEL_HEX( player, hexX + Random( -1, 1 ), hexY + Random( -1, 1 ), 0, null, null );
    }
    else if( answerI == 8 )
        GM_PANNEL_HEX( player, player.Merc[ MERC_LOSE_DIST ], player.Merc[ MERC_MASTER_DIST ], 0, null, null );
}

void answer_GM_PANNEL_HEX_SPAWN_RAIDER( Critter& player, uint answerI, string& answerS )
{
    int weapon = player.Merc[ MERC_ASSIST_MASTER ],
        AI_type = player.Merc[ MERC_TYPE ],
        hexX = player.Merc[ MERC_LOSE_DIST ],
        hexY = player.Merc[ MERC_MASTER_DIST ],
        bonus_hp = player.Merc[ MERC_CANCEL_TIME ],
        bonus_dmg = player.Merc[ MERC_CANCEL_ON_GLOBAL ],
        bonus_skill = player.Merc[ MERC_WAIT_FOR_MASTER ];

    if( answerI == 0 )
    {
        Map@ map = player.GetMap();
        GetPreset( player ).spawn.ProtoId = 335;
        if( weapon == 0 )
        {
            weapon = PID_REVKNIFE1;
            if( Random( 0, 1 ) == 0 )
                weapon = PID_REVKNIFE2;
        }
        GM_SPAWN( player, map, weapon, AI_type, hexX, hexY, bonus_hp, bonus_dmg, bonus_skill );
        GM_PANNEL_HEX( player, hexX + Random( -1, 1 ), hexY + Random( -1, 1 ), 0, null, null );
    }
    if( answerI == 1 )
    {
        Map@ map = player.GetMap();
        GetPreset( player ).spawn.ProtoId = 335;
        if( weapon == 0 )
        {
            weapon = PID_SPEAR;
            if( Random( 0, 5 ) == 0 )
                weapon = PID_SPEAK_P;
        }
        GM_SPAWN( player, map, weapon, AI_type, hexX, hexY, bonus_hp, bonus_dmg, bonus_skill );
        GM_PANNEL_HEX( player, hexX + Random( -1, 1 ), hexY + Random( -1, 1 ), 0, null, null );
    }
    if( answerI == 2 )
    {
        Map@ map = player.GetMap();
        GetPreset( player ).spawn.ProtoId = 336;
        if( weapon == 0 )
        {
            weapon = PID_REVKNIFE1;
            if( Random( 0, 1 ) == 0 )
                weapon = PID_REVKNIFE2;
        }
        GM_SPAWN( player, map, weapon, AI_type, hexX, hexY, bonus_hp, bonus_dmg, bonus_skill );
        GM_PANNEL_HEX( player, hexX + Random( -1, 1 ), hexY + Random( -1, 1 ), 0, null, null );
    }
    if( answerI == 3 )
    {
        Map@ map = player.GetMap();
        GetPreset( player ).spawn.ProtoId = 336;
        if( weapon == 0 )
        {
            weapon = PID_REV_BALL1;
            if( Random( 0, 1 ) == 0 )
                weapon = PID_REV_BALL2;
        }
        GM_SPAWN( player, map, weapon, AI_type, hexX, hexY, bonus_hp, bonus_dmg, bonus_skill );
        GM_PANNEL_HEX( player, hexX + Random( -1, 1 ), hexY + Random( -1, 1 ), 0, null, null );
    }
    if( answerI == 4 )
    {
        Map@ map = player.GetMap();
        GetPreset( player ).spawn.ProtoId = 337;
        if( weapon == 0 )
        {
            weapon = PID_IRON_PROD;
            if( Random( 0, 1 ) == 0 )
                weapon = PID_CHAIN;
        }
        GM_SPAWN( player, map, weapon, AI_type, hexX, hexY, bonus_hp, bonus_dmg, bonus_skill );
        GM_PANNEL_HEX( player, hexX + Random( -1, 1 ), hexY + Random( -1, 1 ), 0, null, null );
    }
    if( answerI == 5 )
    {
        Map@ map = player.GetMap();
        GetPreset( player ).spawn.ProtoId = 337;
        if( weapon == 0 )
        {
            weapon = PID_KNIFE;
            if( Random( 0, 3 ) == 0 )
                weapon = PID_SWITCHBLADE;
            else if( Random( 0, 2 ) == 0 )
                weapon = PID_SHIV;
        }
        GM_SPAWN( player, map, weapon, AI_type, hexX, hexY, bonus_hp, bonus_dmg, bonus_skill );
        GM_PANNEL_HEX( player, hexX + Random( -1, 1 ), hexY + Random( -1, 1 ), 0, null, null );
    }
    if( answerI == 6 )
    {
        Map@ map = player.GetMap();
        GetPreset( player ).spawn.ProtoId = 337;
        if( weapon == 0 )
        {
            weapon = PID_PISTOL_LOW;
            if( Random( 0, 2 ) == 0 )
                weapon = PID_REVOLVER_LOW;
            else if( Random( 0, 1 ) == 0 )
                weapon = PID_ZIP_GUN;
        }
        GM_SPAWN( player, map, weapon, AI_type, hexX, hexY, bonus_hp, bonus_dmg, bonus_skill );
        GM_PANNEL_HEX( player, hexX + Random( -1, 1 ), hexY + Random( -1, 1 ), 0, null, null );
    }
    if( answerI == 7 )
    {
        Map@ map = player.GetMap();
        GetPreset( player ).spawn.ProtoId = 337;
        if( weapon == 0 )
        {
            weapon = PID_SPRINGER_RIFLE;
            if( Random( 0, 2 ) == 0 )
                weapon = PID_REV_RIFLE_LOW;
            else if( Random( 0, 5 ) == 0 )
                weapon = PID_GECKO_LOW;
        }
        GM_SPAWN( player, map, weapon, AI_type, hexX, hexY, bonus_hp, bonus_dmg, bonus_skill );
        GM_PANNEL_HEX( player, hexX + Random( -1, 1 ), hexY + Random( -1, 1 ), 0, null, null );
    }
    if( answerI == 8 )
    {
        Map@ map = player.GetMap();
        GetPreset( player ).spawn.ProtoId = 338;
        if( weapon == 0 )
        {
            weapon = PID_PISTOL_LOW;
            if( Random( 0, 2 ) == 0 )
                weapon = PID_REVOLVER_LOW;
            else if( Random( 0, 1 ) == 0 )
                weapon = PID_ZIP_GUN;
        }
        GM_SPAWN( player, map, weapon, AI_type, hexX, hexY, bonus_hp, bonus_dmg, bonus_skill );
        GM_PANNEL_HEX( player, hexX + Random( -1, 1 ), hexY + Random( -1, 1 ), 0, null, null );
    }
    if( answerI == 9 )
    {
        Map@ map = player.GetMap();
        GetPreset( player ).spawn.ProtoId = 338;
        if( weapon == 0 )
        {
            weapon = PID_SPEAR;
            if( Random( 0, 5 ) == 0 )
                weapon = PID_SPEAK_P;
        }
        GM_SPAWN( player, map, weapon, AI_type, hexX, hexY, bonus_hp, bonus_dmg, bonus_skill );
        GM_PANNEL_HEX( player, hexX + Random( -1, 1 ), hexY + Random( -1, 1 ), 0, null, null );
    }
    if( answerI == 10 )
    {
        Map@ map = player.GetMap();
        GetPreset( player ).spawn.ProtoId = 338;
        if( weapon == 0 )
            weapon = PID_DRUM_GUN_LOW;
        GM_SPAWN( player, map, weapon, AI_type, hexX, hexY, bonus_hp, bonus_dmg, bonus_skill );
        GM_PANNEL_HEX( player, hexX + Random( -1, 1 ), hexY + Random( -1, 1 ), 0, null, null );
    }
}

void answer_GM_PANNEL_HEX_SPAWN_MUTANT( Critter& player, uint answerI, string& answerS )
{
    if( answerI == 0 )
    {
        player.Say( SAY_NETMSG, "Игрок не найден." );
    }
}

GMCommand( Log_Killings )
{
    file f;
    if( f.open( "logs\\killings.txt", "a" ) >= 0 )
    {
        string type;
        if( player.Quest[ QST_GAMEMODE ] == GAME_START )
            type = "Старт";
        else if( player.Quest[ QST_GAMEMODE ] == GAME_ADVENTURE )
            type = "Прикл.";
        else if( player.Quest[ QST_GAMEMODE ] == GAME_SURVIVAL )
            type = "Выжив.";
        else if( player.Quest[ QST_GAMEMODE ] == GAME_ARCADE )
            type = "Аркада";
        else if( player.Quest[ QST_GAMEMODE ] == GAME_TEST )
            type = "Тест";
        if( player.GetAccess() == ACCESS_MODER )
            type += " ГМ";
        else if( player.GetAccess() > ACCESS_MODER )
            type += " Админ";
        else
            type = "ошибка";
			
        string type2 = "error";
		Critter@ target = GetCritter( param0 );
		if( @target !is null )
		{
			if( target.Quest[ QST_GAMEMODE ] == GAME_START )
				type2 = "Старт";
			else if( target.Quest[ QST_GAMEMODE ] == GAME_ADVENTURE )
				type2 = "Прикл.";
			else if( target.Quest[ QST_GAMEMODE ] == GAME_SURVIVAL )
				type2 = "Выжив.";
			else if( target.Quest[ QST_GAMEMODE ] == GAME_ARCADE )
				type2 = "Аркада";
			else if( target.Quest[ QST_GAMEMODE ] == GAME_TEST )
				type2 = "Тест";
        }
		
        string date = TimeToString( player );
        Map@   map = player.GetMap();
        string place;
        if( map.GetProtoId() == 1 )
            place = "богатый район";
        else if( map.GetProtoId() == 4 )
            place = "административный";
        else if( map.GetProtoId() == 6 )
            place = "рабочий район";
        else if( map.GetProtoId() == 9 )
            place = "бедный район";
        else if( map.GetProtoId() == 10 )
            place = "ворота модока";
        else if( map.GetProtoId() == 13 )
            place = "лесопилка модока";
        else
            place = map.GetProtoId();
        f.writeString( "" + date + "\t" + place + "\t" + type + "\t" + player.Id + "\t" + GetPlayerName( player.Id ) + "\t" + "\t" + " убил " + type2 + " " + "\t" + param0 + "\t" + GetPlayerName( param0 ) + "\n" );
        f.close();
        Critter@[] crs;
        GetAllPlayers( crs );
        string str = "|0xFFFF0000 <|0xFFFFFF00" + type  + " " + GetPlayerName( player.Id ) + " (" + player.Id + ")  " + " убил " + type2 + " " + GetPlayerName( param0 ) + " (" + param0 + ")|0xFFFF0000 > |0xFFBB33CC ";
        for( uint i = 0, j = crs.length(); i < j; i++ )
        {
            if( crs[ i ] is null or crs[ i ].GetAccess() < ACCESS_MODER )
                continue;
            crs[ i ].Say( SAY_NETMSG, str );
        }
    }
}

void Log_GM( Critter& player, int crId, int action, int param0, int param1, int param2 )
{
    string   crname;
    Critter@ cr = GetCritter( crId );
    if( cr !is null )
        crname = GetPlayerName( crId );
    string date = TimeToString( player );

    if( action == GM_ACTIVATION )
    {
        string pass;
        if( param0 == 0 )
        {
            if( param1 == 0 )
                pass = "чужака";
            if( param1 == 11 )
                pass = "гостя";
            if( param1 == 12 )
                pass = "гражданина";
        }
        else if( param0 == 1 )
            pass = "принудительно чужака";
        else if( param0 == 2 )
            pass = "принудительно гостя";
        else if( param0 == 3 )
            pass = "принудительно гражданина";
        else if( param0 == 4 )
            pass = "принудительно выживальца";

        file f;
        if( f.open( "logs\\gm\\" + GetPlayerName( player.Id ) + ".txt", "r" ) < 0 )
        {
            if( f.open( "logs\\gm\\" + GetPlayerName( player.Id ) + ".txt", "w" ) >= 0 )
            {
                f.close();
            }
            else
                Log( "cant create log file for GM , ID = " + player.Id );
        }
        if( f.open( "logs\\gm\\" + GetPlayerName( player.Id ) + ".txt", "a" ) >= 0 )
        {
            f.writeString( "" + date + "\t" + " активировал " + crId + " " + crname + " как " + pass + "\n" );
            f.close();
        }
        if( f.open( "logs\\gm\\activations.txt", "a" ) >= 0 )
        {
            f.writeString( "" + date + "\t" + player.Id + "\t" + GetPlayerName( player.Id ) + "\t" + "\t" + " активировал " + crId + " " + crname + " как " + pass + "\n" );
            f.close();
        }
    }
}

GMCommand( Log_Crims )
{
    file f;
    if( f.open( "logs\\crims.txt", "a" ) >= 0 )
    {
        string date = TimeToString( player );
        f.writeString( "" + date + "\t" + player.Id + "\t" + GetPlayerName( player.Id ) + "\t" + "\t" + " лутал охотки с гвардов" + "\n" );
        f.close();
    }
}

GMCommand( Log_Lockpick )
{
    string type;
    if( player.Quest[ QST_GAMEMODE ] == GAME_START )
        type = "Старт";
    else if( player.Quest[ QST_GAMEMODE ] == GAME_ADVENTURE )
        type = "Прикл.";
    else if( player.Quest[ QST_GAMEMODE ] == GAME_SURVIVAL )
        type = "Выжив.";
    else if( player.Quest[ QST_GAMEMODE ] == GAME_ARCADE )
        type = "Аркада";
    else if( player.Quest[ QST_GAMEMODE ] == GAME_TEST )
        type = "Тест";
    if( player.GetAccess() == ACCESS_MODER )
        type += " ГМ";
    else if( player.GetAccess() > ACCESS_MODER )
        type += " Админ";
    else
        type = "ошибка";
    Map@   map = player.GetMap();
    string[] place_names = { "Модок", "Саттер", "Пирс", "Свалка", "Феникс", "Ферма", "Вилла Фокса" };
	uint[] place_PIDs = { 1232, 32, 1216, 43, 131, 1260, 1263 };
	string place;
	uint map_PID = map.GetProtoId();
	int n = place_PIDs.find(map_PID);
    if( n != -1 ) place = place_names[n];
	else place = map.GetProtoId();

    string date = TimeToString( player );

    Item@  locker = GetItem( param0 );

    string prefix = "" + date + "\t" + player.Id + "\t" + type + "\t" + GetPlayerName( player.Id ) + "\t" + "\t";
	string postfix = " замок " + param0 + " сложностью " + ( !valid(locker) ? "null" : ""+locker.LockerComplexity ) + " в " + "\t" + place + "\t [" + player.HexX + ", " + player.HexY + "]\n";
	string action = "осматривал";
	if( param1 == 0 )
		action = "пытался вскрыть";
    if( param1 == 0 && param2 == 1 )
		action = "успешно вскрыл";
    if( param1 == 1 )
		action = "ломал";
	file f;
	if( f.open( "logs\\lockpick.txt", "a" ) >= 0 )
	{
		f.writeString( prefix + action + postfix );
		f.close();
	}
}

GMCommand( Log_Steal )
{
    string type;
    if( player.Quest[ QST_GAMEMODE ] == GAME_START )
        type = "Старт";
    else if( player.Quest[ QST_GAMEMODE ] == GAME_ADVENTURE )
        type = "Прикл.";
    else if( player.Quest[ QST_GAMEMODE ] == GAME_SURVIVAL )
        type = "Выжив.";
    else if( player.Quest[ QST_GAMEMODE ] == GAME_ARCADE )
        type = "Аркада";
    else if( player.Quest[ QST_GAMEMODE ] == GAME_TEST )
        type = "Тест";
    if( player.GetAccess() == ACCESS_MODER )
        type += " ГМ";
    else if( player.GetAccess() > ACCESS_MODER )
        type += " Админ";
    else
        type = "ошибка";
    Map@   map = player.GetMap();
    string place;
    if( map.GetProtoId() == 1 )
        place = "богатый район";
    else if( map.GetProtoId() == 4 )
        place = "административный";
    else if( map.GetProtoId() == 6 )
        place = "рабочий район";
    else if( map.GetProtoId() == 9 )
        place = "бедный район";
    else if( map.GetProtoId() == 10 )
        place = "ворота модока";
    else if( map.GetProtoId() == 13 )
        place = "лесопилка модока";
    else
        place = map.GetProtoId();
    string date = TimeToString( player );

    string targetname = "";
    Critter@ cr = GetCritter( param0 );
    if( cr.IsPlayer() )
        targetname = GetPlayerName( param0 );

    file f;
    if( f.open( "logs\\steal.txt", "a" ) >= 0 )
    {
        f.writeString( "" + date + "\t" + player.Id + "\t" + type + "\t" + GetPlayerName( player.Id ) + "\t" + "\t" + " украл у " + "\t" + param0 + "\t" + targetname + "предмет " + param1 + " в " + "\t" + place + "\n" );
        f.close();
    }
}

GMCommand( Log_factions )
{
	int level = param2;

    string type;
    string acces;
    if( player.GetAccess() == ACCESS_MODER )
        acces = "ГМ  ";
    else if( player.GetAccess() > ACCESS_MODER )
        acces = "Админ  ";
    string date = TimeToString( player );
    file   f;
    if( f.open( "logs\\factions.txt", "a" ) >= 0 )
    {
        if( param1 == 0 )              // режимы игры
        {
            if( level == 0 )
                type = "Старт";
            else if( level == 1 )
                type = "Прикл.";
            else if( level == 2 )
                type = "Выжив.";
            else if( level == 3 )
                type = "Аркада";
            else if( level == 4 )
                type = "Тест";
            else
                type = "ошибка";
            f.writeString( "" + date + "\t" + player.Id + acces + "\t" + GetPlayerName( player.Id ) + "\t" + "\t" + " изменил режим игры -  " + param0 + "\t" + GetPlayerName( param0 ) + "\t" + "\t на   " + type + "\n" );
        }
        else if( param1 == 1 )              // доступ в город
        {
            if( level == 0 )
                type = "Чужой";
            else if( level == 1 )
                type = "врем. гость";
            else if( level == 2 )
                type = "гость";
            else if( level == 3 )
                type = "гражданин";
            else if( level == 4 )
                type = "богатый гражданин";
            else if( level == 10 )
                type = "изгой";
            else
                type = "ошибка";
            f.writeString( "" + date + "\t" + player.Id + acces + "\t" + GetPlayerName( player.Id ) + "\t" + "\t" + " изменил пропуск -  " + param0 + "\t" + GetPlayerName( param0 ) + "\t" + "\t на   " + type + "\n" );
        }		
        else if( param1 == 2 )              // фракции
        {
            if( level == AnswerIdFactions::NoFaction )
                type = "без фракции";
            else if( level == AnswerIdFactions::Administration )
                type = "администрация";
            else if( level == AnswerIdFactions::Cop )
                type = "полиция";
            else if( level == AnswerIdFactions::Mafia )
                type = "мафия";
            else if( level == AnswerIdFactions::Mutant )
                type = "мутанты";
            else if( level == AnswerIdFactions::Fort )
                type = "форт";
            else if( level == AnswerIdFactions::Raider )
                type = "рейдеры";
            else if( level == AnswerIdFactions::Sheriff )
                type = "шериф";
            else if( level == AnswerIdFactions::Mayor )
                type = "мэр";
            else
                type = "ошибка";
            f.writeString( "" + date + "\t" + player.Id + acces + "\t" + GetPlayerName( player.Id ) + "\t" + "\t" + " изменил фракцию -  " + param0 + "\t" + GetPlayerName( param0 ) + "\t" + "\t на   " + type + "\n" );
        }
        f.close();
    }
}

// ban

import void BanId( Critter& player, int id, int hours, int kick ) from "banhammer";
import void KickId( Critter& player, int id, int, int ) from "banhammer";
import void KickBanIdIp( Critter& player, int id, int hours, int mask_level ) from "banhammer";
import void UnbanId( Critter& player, int id, int, int ) from "banhammer";
import void GetIps( Critter& player, int id, int, int ) from "banhammer";
import void GM_HardBanId( Critter& player, int id ) from "banhammer";

GMCommand( banid )
{
    BanId( player, param0, param1, param2 );
}

GMCommand( kickid )
{
    KickId( player, param0, 0, 0 );
}

GMCommand( kickbanipid )
{
    KickBanIdIp( player, param0, param1, param2 );
}

GMCommand( unbanid )
{
    UnbanId( player, param0, 0, 0 );
}

GMCommand( getips )
{
    GetIps( player, param0, 0, 0 );
}

GMCommand( statcompareradius )
{
    Critter@[] crs;

    // int findType = 0;

    if( player.GetMap().GetCrittersHex( player.HexX, player.HexY, param1, FIND_ALL | FIND_ONLY_PLAYERS, crs ) > 0 )
    {
        CrittersStatCompare( player, crs, uint16( param0 ) );
    }
}

GMCommand( statcompare )
{
    Critter@[] crs;
    for( uint8 i = 0, j = param4.length(); i < j; ++i )
    {
        Critter@ cr = GetCritter( param4[ i ] );
        if( cr is null )
            continue;
        crs.insertLast( cr );
    }
    CrittersStatCompare( player, crs, uint16( param0 ) );
}

void CrittersStatCompare( Critter& player, Critter@[]& crs, uint16 stat )
{
    // if(stat > STAT_END || stat < STAT_BEGIN) {cr.Say(Say_NETMSG, "не верный стат."); return;}

    uint16 minVal = 0, maxVal = 0;
    uint   minId = 0, maxId = 0;

    for( uint16 i = 0, j = crs.length(); i < j; ++i )
    {
        uint16 statVal = crs[ i ].Param[ stat ];
        if( statVal > maxVal )
        {
            minVal = statVal;
            minId = crs[ i ].Id;
        }
        else if( statVal < minVal )
        {
            minVal = statVal;
            minId = crs[ i ].Id;
        }
    }

    player.Say( SAY_NETMSG, "стат : " + stat + "\nминимальное значение : " + minVal + " id : " + minId + "\nмаксимальное значени : " + maxVal + " id : " + minId );
}


GMCommand( killbytype )
{
    Critter@ target = GetCritter( param0 );
    if( target is null )
    {
        player.Say( SAY_NETMSG, "не верный криттер" );
        return;
    }

    uint16 deadType = 0;
    if( param1 > 0 && param1 < 9 )
        deadType = ANIM2_DEAD_BLOODY_SINGLE - 1 + param1;
    else
        deadType = ( Random( 0, 1 ) > 0 ? ANIM2_DEAD_FRONT : ANIM2_DEAD_BACK );

    /*
       switch(param1)
       {
       case	1 : deadType = ANIM2_DEAD_BLOODY_SINGLE; break;
       case	2 : deadType = ANIM2_DEAD_BLOODY_BURST; break;
       case	3 : deadType = ANIM2_DEAD_BURST; break;
       case	4 : deadType = ANIM2_DEAD_PULSE_DUST; break;
       case	5 : deadType = ANIM2_DEAD_EXPLODE; break;
       case	6 : deadType = ANIM2_DEAD_BURN_RUN;break;
       case	7 : deadType = ANIM2_DEAD_FUSED;break;
       case	8 : deadType = ANIM2_DEAD_LASER;break;
       default : deadType = (Random(0,1) > 0 ? ANIM2_DEAD_FRONT : ANIM2_DEAD_BACK); break;
       }*/

    target.ToDead( deadType, null );
    // target.SetTimeout(TO_REPLICATION, 3);
}

GMCommand( GM_teleport_to_next_player )
{
    Critter@[] crs;
    GetAllPlayers( crs );
    if( uint( player.Stat[ ST_VAR0 ] ) >= crs.length() )
	{
		player.StatBase[ ST_VAR0 ] = 0;
		player.EraseTimeEvents( 7);
	}
    Critter@ daddy = crs[ player.StatBase[ ST_VAR0 ] ];
    if( !valid( daddy ) )
    {
        player.Say( SAY_NETMSG, "не верный криттер" );
        player.StatBase[ ST_VAR0 ]++;
        return;
    }
    player.StatBase[ ST_VAR0 ]++;
    if( daddy.Id == player.Id )
        return;
    Map@ map = daddy.GetMap();
    if( !valid( map ) )
    {
        player.Say( SAY_NETMSG, "игрок " + GetPlayerName( daddy.Id ) + " на глобале" );
        return;
    }
    else if( map.GetProtoId() == 90 )
    {
        player.Say( SAY_NETMSG, "игрок " + GetPlayerName( daddy.Id ) + " на карте обучения" );
        return;
    }
    else if( map.GetProtoId() == 92 )
    {
        player.Say( SAY_NETMSG, "игрок " + GetPlayerName( daddy.Id ) + " на стартовой карте" );
        return;
    }
	uint[] rates;
	player.GetTimeEvents( 7, null, null, rates );
    for( uint ii = 0; ii < rates.length(); ii++ )
    {
		if( rates[ii] == daddy.Id )
		{
			player.Say( SAY_NETMSG, "игрока " + GetPlayerName( daddy.Id ) + " уже просматривали ранее" );
			return;
		}
    }

    uint8 temp_dir = Random( 0, 5 );
    for( uint i = 0; i < 6; i++ )
    {
        uint16 hexX = daddy.HexX, hexY = daddy.HexY;
        map.MoveHexByDir( hexX, hexY, ( temp_dir + i ) % 6, 1 );
        if( !map.IsHexPassed( hexX, hexY ) ) continue;
        player.TransitToMap( map.Id, hexX, hexY, 0 );
        player.Say( SAY_NETMSG, "вы прыгнули к игроку " + GetPlayerName( daddy.Id ) + " " + daddy.Id );
		Critter@[] critters;
		map.GetCrittersHex( hexX, hexY, 20, FIND_ALL | FIND_ONLY_PLAYERS, critters );
		for( uint j = 0; j < critters.length(); j++ )
			player.AddTimeEvent("cte_visited", 10*60*__TimeMultiplier, 7, critters[j].Id );
        break;
    }
}

uint cte_visited( Critter& cr, int identifier, uint& rate ){ return 0;}


GMCommand( GM_CONTROLPANNEL_CRITTER )
{
    if( player.GetAccess() >= ACCESS_MODER )
    {
        player.ShowScreen( SCREEN_DIALOGBOX, 1, "answer_GM_PANNEL_SELF" );
        player.Say( SAY_DIALOGBOX_TEXT, "ГМ ПАНЕЛЬ" );
        player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "Режимы себя" );
    }
}

GMCommand( GM_CONTROLPANNEL_HEX )
{
    if( player.GetAccess() >= ACCESS_MODER )
    {
        player.ShowScreen( SCREEN_DIALOGBOX, 1, "answer_GM_PANNEL_SELF" );
        player.Say( SAY_DIALOGBOX_TEXT, "ГМ ПАНЕЛЬ" );
        player.Say( SAY_DIALOGBOX_BUTTON( 0 ), "Режимы себя" );
    }
}

/*
        case 1:	NPC1=NPC_PID_RegularRat; break;
        case 2:	NPC1=NPC_PID_Mantis; break;
        case 3:	NPC1=NPC_PID_Ant; break;
        case 4:	NPC1=NPC_PID_Molerat; break;
        case 5:	NPC1=NPC_PID_GreaterMolerat; break;
        case 6:	NPC1=NPC_PID_MutatedMolerat; break;
        case 7:	NPC1=NPC_PID_SmallSilverGecko; break;
        case 8:	NPC1=NPC_PID_GoldenGecko; break;
        case 9:	NPC1=NPC_PID_WildDog; break;
        case 10: NPC1=NPC_PID_SmallRadscorpion; break;
        case 11: NPC1=NPC_PID_LargeRadscorpion; break;
        case 12: NPC1=NPC_PID_WildBrahmin; break;
        case 13: NPC1=NPC_PID_Alien; break;
        case 14: NPC1=NPC_PID_SmToughDeathclaw; break;
        case 15: NPC1=NPC_PID_ToughDeathclaw; break;
        case 16: NPC1=NPC_PID_Centaur; break;
        case 17: NPC1=NPC_PID_Floater; break;
        case 18: NPC1=NPC_PID_FireGecko; break;
        case 19: NPC1=NPC_PID_MeanCentaur; break;
        case 20: NPC1=NPC_PID_MaleCannibal; break;
        case 21: NPC1=NPC_PID_FemaleCannibal; break;
        case 22: NPC1=NPC_PID_RaiderMale; break;
        case 23: NPC1=NPC_PID_RaiderFemale; break;
        case 24: NPC1=NPC_PID_MaleSlaver; break;
        case 25: NPC1=NPC_PID_FemaleSlaver; break;
        case 26: NPC1=NPC_PID_MauraderMale; break;
        case 27: NPC1=NPC_PID_MauraderFemale; break;
        case 28: NPC1=NPC_PID_ToughGhoul; break;
        case 29: NPC1=NPC_PID_ToughNightkin; break;
        case 30: NPC1=NPC_PID_HealthyMaleSlave; break;
        case 31: NPC1=NPC_PID_HealthyFemaleSlave; break;
        case 32: NPC1=NPC_PID_MaleOrphan; break;
        case 33: NPC1=NPC_PID_FemaleOrphan; break;
        case 34: NPC1=NPC_PID_HomesteaderMale; break;
        case 35: NPC1=NPC_PID_HomesteaderFemale; break;

                        case 0: weapon2 = 0; break;
                        case 1: weapon2 = PID_REVKNIFE1; break;
                        case 2: weapon2 = PID_REVFIST1; break;
                        case 3: weapon2 = PID_SPEAK_P; break;
                        case 4: weapon2 = PID_KNIFE; break;
                        case 5: weapon2 = PID_CHAIN; break;
                        case 6: weapon2 = PID_CROWBAR; break;
                        case 7: weapon2 = PID_SPEAR; break;
                        case 8: weapon2 = PID_SHIV; break;
                        case 9: weapon2 = PID_SWITCHBLADE; break;
                        case 10: weapon2 = PID_REVOLVER_LOW; break;
                        case 11: weapon2 = PID_PISTOL_LOW; break;
                        case 12: weapon2 = PID_SHOTPISTOL_LOW; break;
                        case 13: weapon2 = PID_REV_RIFLE_LOW; break;
                        case 14: weapon2 = PID_SPRINGER_RIFLE; break;
                        case 15: weapon2 = PID_ZIP_GUN; break;
                        case 16: weapon2 = PID_SNIPER_GUN_LOW; break;
                        case 17: weapon2 = PID_SMOKE_GUN_LOW; break;
                        case 18: weapon2 = PID_DRUM_GUN_LOW; break;
                        case 19: weapon2 = PID_BIGGUN_LOW; break;
                        case 20: weapon2 = PID_10MM_PISTOL; break;
                        case 21: weapon2 = PID_9MM_MAUSER; break;
                        case 22: weapon2 = PID_DESERT_EAGLE; break;
                        case 23: weapon2 = PID_HUNTING_RIFLE; break;

 */


import void GM_MobInit( Critter& npc ) from "mob";
import void GM_MobBossInit( Critter& npc ) from "mob";
import void GM_MobMinionInit( Critter& npc ) from "mob";
import void GM_InitCommonGuard( Critter& player, int param0, int param1, int param2, string@ param3, int[] @ param4 ) from "guards";
import bool AddAttackPlane( Critter& npc, uint priority, Critter& target, bool run ) from "npc_planes";

dictionary Presets;
TeleportPreset @global_DefaultTeleportPreset;

TeleportPreset@ get_DefaultTeleportPreset()
{
	if( @global_DefaultTeleportPreset is null )
		construct_DefaultTeleportPreset( global_DefaultTeleportPreset );
	return @global_DefaultTeleportPreset;
}

void construct_DefaultTeleportPreset( TeleportPreset@& outPreset )
{
	@outPreset = TeleportPreset( "Дефолтные позиции" );
	
	objectManager.ParseProtoTypes( "gm.teleport", outPreset, "./NextDay/" );
	
	TeleportPreset@ preset = TeleportPreset( "Саттер" );
	@preset.targets =  array<AnswerPreset@>( 0 );

	Location@ loc = GetLocationByPid( LOCATION_Sutter, 0 );
    if( @loc !is null )
    {
		Map@ map = loc.GetMapByIndex( 0 );
		if( @map !is null )
		{
			MapTeleport teleport( "Центр" );
			teleport.id = map.Id;
			teleport.hexX = 319;
			teleport.hexY = 301;
			preset.targets.insertLast( @teleport );
		}
	}
	// N, S, E, W, 
	// Север, Юг, Восток, Запад.
	{
		TeleportPreset @side = TeleportPreset( "Саттер север" );
		@side.targets =  array<AnswerPreset@>( 0 );
		@loc = GetLocationByPid( LOCATION_Sutter_1_1, 0 );
		if( @loc !is null )
		{
			Map@ map = loc.GetMapByIndex( 0 );
			if( @map !is null )
			{
				MapTeleport teleport( "NW Руины" );
				teleport.id = map.Id;
				teleport.hexX = 180;
				teleport.hexY = 186;
				side.targets.insertLast( @teleport );
			}
		}

		@loc = GetLocationByPid( LOCATION_Sutter_1_2, 0 );
		if( @loc !is null )
		{
			Map@ map = loc.GetMapByIndex( 0 );
			if( @map !is null )
			{
				MapTeleport teleport( "N Картер" );
				teleport.id = map.Id;
				teleport.hexX = 99;
				teleport.hexY = 123;
				side.targets.insertLast( @teleport );
			}
		}

		@loc = GetLocationByPid( LOCATION_Sutter_1_3, 0 );
		if( @loc !is null )
		{
			Map@ map = loc.GetMapByIndex( 0 );
			if( @map !is null )
			{
				MapTeleport teleport( "N Руины" );
				teleport.id = map.Id;
				teleport.hexX = 181;
				teleport.hexY = 183;
				side.targets.insertLast( @teleport );
			}
		}

		@loc = GetLocationByPid( LOCATION_Sutter_1_4, 0 );
		if( @loc !is null )
		{
			Map@ map = loc.GetMapByIndex( 0 );
			if( @map !is null )
			{
				MapTeleport teleport( "NE Магазин" );
				teleport.id = map.Id;
				teleport.hexX = 112;
				teleport.hexY = 242;
				side.targets.insertLast( @teleport );
			}
		}
		preset.targets.insertLast( side );
		
		@side = TeleportPreset( "Саттер юг" );
		@side.targets =  array<AnswerPreset@>( 0 );
		@loc = GetLocationByPid( LOCATION_Sutter_4_1, 0 );
		if( @loc !is null )
		{
			Map@ map = loc.GetMapByIndex( 0 );
			if( @map !is null )
			{
				MapTeleport teleport( "SW Станция" );
				teleport.id = map.Id;
				teleport.hexX = 218;
				teleport.hexY = 101;
				side.targets.insertLast( @teleport );
			}
		}

		@loc = GetLocationByPid( LOCATION_Sutter_4_2, 0 );
		if( @loc !is null )
		{
			Map@ map = loc.GetMapByIndex( 0 );
			if( @map !is null )
			{
				MapTeleport teleport( "S Руины" );
				teleport.id = map.Id;
				teleport.hexX = 234;
				teleport.hexY = 187;
				side.targets.insertLast( @teleport );
			}
		}

		@loc = GetLocationByPid( LOCATION_Sutter_4_3, 0 );
		if( @loc !is null )
		{
			Map@ map = loc.GetMapByIndex( 0 );
			if( @map !is null )
			{
				MapTeleport teleport( "S Парк" );
				teleport.id = map.Id;
				teleport.hexX = 237;
				teleport.hexY = 202;
				side.targets.insertLast( @teleport );
			}
		}

		@loc = GetLocationByPid( LOCATION_Sutter_4_4, 0 );
		if( @loc !is null )
		{
			Map@ map = loc.GetMapByIndex( 0 );
			if( @map !is null )
			{
				MapTeleport teleport( "SE Казино" );
				teleport.id = map.Id;
				teleport.hexX = 104;
				teleport.hexY = 111;
				side.targets.insertLast( @teleport );
			}
		}

		preset.targets.insertLast( side );
		
		@side = TeleportPreset( "Саттер восток" );
		@side.targets =  array<AnswerPreset@>( 0 );
		@loc = GetLocationByPid( LOCATION_Sutter_2_4, 0 );
		if( @loc !is null )
		{
			Map@ map = loc.GetMapByIndex( 0 );
			if( @map !is null )
			{
				MapTeleport teleport( "E Руины" );
				teleport.id = map.Id;
				teleport.hexX = 124;
				teleport.hexY = 237;
				side.targets.insertLast( @teleport );
			}
		}

		@loc = GetLocationByPid( LOCATION_Sutter_3_4, 0 );
		if( @loc !is null )
		{
			Map@ map = loc.GetMapByIndex( 0 );
			if( @map !is null )
			{
				MapTeleport teleport( "E Железка" );
				teleport.id = map.Id;
				teleport.hexX = 106;
				teleport.hexY = 253;
				side.targets.insertLast( @teleport );
			}
		}
		
		preset.targets.insertLast( side );
		
		@side = TeleportPreset( "Саттер запад" );
		@side.targets =  array<AnswerPreset@>( 0 );
		@loc = GetLocationByPid( LOCATION_Sutter_2_1, 0 );
		if( @loc !is null )
		{
			Map@ map = loc.GetMapByIndex( 0 );
			if( @map !is null )
			{
				MapTeleport teleport( "W Руины" );
				teleport.id = map.Id;
				teleport.hexX = 226;
				teleport.hexY = 93;
				side.targets.insertLast( @teleport );
			}
		}

		@loc = GetLocationByPid( LOCATION_Sutter_3_1, 0 );
		if( @loc !is null )
		{
			Map@ map = loc.GetMapByIndex( 0 );
			if( @map !is null )
			{
				MapTeleport teleport( "W Железка" );
				teleport.id = map.Id;
				teleport.hexX = 224;
				teleport.hexY = 94;
				side.targets.insertLast( @teleport );
			}
		}
		
		preset.targets.insertLast( side );
	}

	outPreset.targets.insertLast( preset );
	
	@preset = TeleportPreset( "Модок" );
	@preset.targets =  array<AnswerPreset@>( 0 );

	@loc = GetLocationByPid( LOCATION_Modoc_Rich, 0 );
    if( @loc !is null )
    {
		Map@ map = loc.GetMapByIndex( 0 );
		if( @map !is null )
		{
			MapTeleport teleport( "Город" );
			teleport.id = map.Id;
			teleport.hexX = 426;
			teleport.hexY = 436;
			preset.targets.insertLast( @teleport );
		}
	}
		
	@ loc = GetLocationByPid( LOCATION_Modoc_4_3, 0 );
    if( @loc !is null )
    {
		Map@ map = loc.GetMapByIndex( 0 );
		if( @map !is null )
		{
			MapTeleport teleport( "Заправка" );
			teleport.id = map.Id;
			teleport.hexX = 180;
			teleport.hexY = 155;
			preset.targets.insertLast( @teleport );
		}
	}
		
	@ loc = GetLocationByPid( LOCATION_Modoc_4_4, 0 );
    if( @loc !is null )
    {
		Map@ map = loc.GetMapByIndex( 0 );
		if( @map !is null )
		{
			MapTeleport teleport( "Оазис" );
			teleport.id = map.Id;
			teleport.hexX = 253;
			teleport.hexY = 172;
			preset.targets.insertLast( @teleport );
		}
	}
		
	@ loc = GetLocationByPid( LOCATION_Modoc_3_4, 0 );
    if( @loc !is null )
    {
		Map@ map = loc.GetMapByIndex( 0 );
		if( @map !is null )
		{
			MapTeleport teleport( "Кладбище" );
			teleport.id = map.Id;
			teleport.hexX = 169;
			teleport.hexY = 211;
			preset.targets.insertLast( @teleport );
		}
	}
		
	@ loc = GetLocationByPid( LOCATION_Modoc_4_2, 0 );
    if( @loc !is null )
    {
		Map@ map = loc.GetMapByIndex( 0 );
		if( @map !is null )
		{
			MapTeleport teleport( "Лагерь караванщиков" );
			teleport.id = map.Id;
			teleport.hexX = 166;
			teleport.hexY = 245;
			preset.targets.insertLast( @teleport );
		}
	}
		
	@ loc = GetLocationByPid( LOCATION_Modoc_4_1, 0 );
    if( @loc !is null )
    {
		Map@ map = loc.GetMapByIndex( 0 );
		if( @map !is null )
		{
			MapTeleport teleport( "Мост" );
			teleport.id = map.Id;
			teleport.hexX = 124;
			teleport.hexY = 185;
			preset.targets.insertLast( @teleport );
		}
	}
		
	outPreset.targets.insertLast( preset );
	
	@ loc = GetLocationByPid( LOCATION_Lakecity, 0 );
    if( @loc !is null )
    {
		Map@ map = loc.GetMapByIndex( 0 );
		if( @map !is null )
		{
			MapTeleport teleport( "Пирс" );
			teleport.id = map.Id;
			teleport.hexX = 100;
			teleport.hexY = 233;
			outPreset.targets.insertLast( @teleport );
		}
	}
	
	@preset = TeleportPreset( "Феникс" );
	@preset.targets =  array<AnswerPreset@>( 0 );
	
	@ loc = GetLocationByPid( LOCATION_Phoenix, 0 );
    if( @loc !is null )
    {
		Map@ map = loc.GetMap( 130 );
		if( @map !is null )
		{
			MapTeleport teleport( "Феникс" );
			teleport.id = map.Id;
			teleport.hexX = 162;
			teleport.hexY = 196;
			preset.targets.insertLast( @teleport );
		}
		
		@ map = loc.GetMap( 131 );
		if( @map !is null )
		{
			MapTeleport teleport( "Подземка" );
			teleport.id = map.Id;
			teleport.hexX = 146;
			teleport.hexY = 180;
			preset.targets.insertLast( @teleport );
		}
	}
	
	outPreset.targets.insertLast( @preset );
	
	@preset = TeleportPreset( "Свалка" );
	@preset.targets =  array<AnswerPreset@>( 0 );
	
	@ loc = GetLocationByPid( LOCATION_Junkyard, 0 );
    if( @loc !is null )
    {
		Map@ map = loc.GetMap( 135 );
		if( @map !is null )
		{
			MapTeleport teleport( "Свалка" );
			teleport.id = map.Id;
			teleport.hexX = 265;
			teleport.hexY = 146;
			preset.targets.insertLast( @teleport );
		}
		
		@ map = loc.GetMap( 136 );
		if( @map !is null )
		{
			MapTeleport teleport( "Подземка" );
			teleport.id = map.Id;
			teleport.hexX = 195;
			teleport.hexY = 142;
			preset.targets.insertLast( @teleport );
		}
	}
	
	outPreset.targets.insertLast( @preset );
	
	@ loc = GetLocationByPid( LOCATION_StartMap, 0 );
    if( @loc !is null )
    {
		Map@ map = loc.GetMapByIndex( 0 );
		if( @map !is null )
		{
			MapTeleport teleport( "Стартовая карта" );
			teleport.id = map.Id;
			teleport.hexX = 298;
			teleport.hexY = 185;
			outPreset.targets.insertLast( @teleport );
		}
	}
	
	@ loc = GetLocationByPid( LOCATION_Bridge, 0 );
    if( @loc !is null )
    {
		Map@ map = loc.GetMapByIndex( 0 );
		if( @map !is null )
		{
			MapTeleport teleport( "Обучающая карта" );
			teleport.id = map.Id;
			teleport.hexX = 140;
			teleport.hexY = 227;
			outPreset.targets.insertLast( @teleport );
		}
	}
}

class SpawnPreset
{
	SpawnPreset( )
	{
		@script = null;
		TeamId = 0;
		ProtoId = 0;
	}
	
	int[]@ get_params()
	{
		int[] params = 
		{
			ST_TEAM_ID, TeamId
		};
		return @params;
	}

	uint ProtoId;
	string@ script;	
	int TeamId;
}

class MapTeleport : AnswerPreset
{
	MapTeleport( string _name = "unnamed" )
	{
		property_name = _name;
	}
	
	string@ name
	{
		get override
		{
			return "Map: " + property_name;
		}
		
		set override
		{
			if( @value !is null )
				property_name = value;
			else property_name = "unnamed";
		}
	}
	
	void answer( Critter& player, uint index, string& text ) override
	{
		player.TransitToMap( id, hexX, hexY, 0 );
	}
	
	private string property_name;
	uint id;
	
	uint16 hexX;
	uint16 hexY;
}

interface AnswerController
{
	void clear();
	void show( Critter& gmaster );
	uint get_param();
	uint get_screen();
	void answer( Critter& player, uint index, string& text );
}

interface AnswerPreset
{
	string@ name{ get; set; }
	void answer( Critter& player, uint index, string& text );
}

class CreateTPPreset : AnswerPreset, AnswerController
{
	string@ name
	{
		get override{ return "Создать группу"; }
		set override{ } 
	}
	
	void answer( Critter& player, uint index, string& text ) override
	{
		if( text != "" )
		{
			TeleportPreset new_preset( text );
			AnswerPreset@ remember = @parent.targets[parent.targets.length() - 2];
			
			@parent.targets[parent.targets.length() - 2] = new_preset;
			@parent.targets[parent.targets.length() - 1] = remember;
			
			CreateTPPreset new_custom_group( );
			RememberTP custom_tp;
			new_preset.targets.insertLast( custom_tp );
			new_preset.targets.insertLast( new_custom_group );
			
			@custom_tp.parent = @new_preset;
			@new_custom_group.parent = @new_preset;
			
			parent.targets.insertLast( this );
		}
		else if( index == uint( -1 ) )
		{
			GMPreset@ preset = GetPreset( player );
			if( @preset !is null ) @preset.answer = @this;
		}
	}
	
	uint get_param() override
	{
		return 0;
	}
	
	void clear() override { }
	void show( Critter& gmaster ) override { }
	uint get_screen() override { return SCREEN_SAY; }
	TeleportPreset@ parent;
}

class RememberTP : AnswerPreset, AnswerController
{
	string@ name
	{
		get override{ return "Запомнить место"; }
		set override{ } 
	}
	
	void answer( Critter& player, uint index, string& text ) override
	{
		
		Map@ map = player.GetMap();
		if( @map is null )
		{
			player.Say( SAY_NETMSG, "No found position" );
			return;
		}
	
		if( text != "" )
		{
			MapTeleport new_preset( text );
			
			new_preset.id = map.Id;
			new_preset.hexX = player.HexX;
			new_preset.hexY = player.HexY;
			
			AnswerPreset@ new_group = @parent.targets[parent.targets.length() - 1];
			
			@parent.targets[parent.targets.length() - 2] = new_preset;
			@parent.targets[parent.targets.length() - 1] = this;
			
			parent.targets.insertLast( new_group );
		}
		else if( index == uint( -1 ) )
		{
			GMPreset@ preset = GetPreset( player );
			if( @preset !is null ) @preset.answer = @this;
		}
	}
	
	uint get_param() override
	{
		return 0;
	}
	
	void clear() override { }
	void show( Critter& gmaster ) override { }
	uint get_screen() override { return SCREEN_SAY; }
	TeleportPreset@ parent;
}

class TeleportPreset : AnswerController, AnswerPreset, FileObject
{
	TeleportPreset( string@ arg_name )
	{
		property_name = arg_name;		
		master_id = 0;
		master_map = true;
		@targets = array<AnswerPreset@>(0);
		GlobalDataList.resize( 0 );
	}
	
	void set_GlobalData( string@ name, string@ value ) override
	// Дефолтная обработка
	{
		const uint hash = GetStrHash( name );
		for( uint i = 0, iEnd = GlobalDataList.length(); i < iEnd; i++ )
			if( GlobalDataList[i].Hash == hash )
			{
				GlobalDataList[i].Value = value;
				return;
			}
	}
	
	string@ get_GlobalData( string@ name ) override
	// Дефолтная обработка
	{
		const uint hash = GetStrHash( name );
		for( uint i = 0, iEnd = GlobalDataList.length(); i < iEnd; i++ )
			if( GlobalDataList[i].Hash == hash )
				return GlobalDataList[i].Value;
		return null;
	}
	
	private GlobalData@[] GlobalDataList;
	
	string@ get_ObjectName( ) const override
	{
		return "TeleportPreset";
	}
	
	string@ get_DictKey( ) override
	{
		return name;
	}
	
	void FormatStringData( string& nameData, string& data ) override
	{
		if( nameData == "GlobalData" )
		{
			string@[] globals = splitEx( data, " " );
			for( uint i = 0, iEnd = globals.length(); i < iEnd; i++ )
				GlobalDataList.insertLast( GlobalData( globals[ i ] ) );
		}
	}
	
	FileObject@ get_Pattern( string& arg_name ) const override
	{
		return TeleportPreset( arg_name );
	}
	
	FileObject @get_Copy( string& arg_name ) override
	{
		TeleportPreset @object = copy;
		@object.name = arg_name;
		return @object;
	}
	
	TeleportPreset@ get_copy()
	{
		TeleportPreset@ _copy = TeleportPreset( property_name );
		@_copy.targets = @targets;
		return _copy;
	}
	
	uint get_param() override
	{
		if( @targets is null )
			return 0;
		return targets.length();
	}
	
	string get_description()
	{				
		Critter@ gmaster = GetCritter( master_id );
		Map@ map = GetMap();
		if( @map is null ) return name;
		Location@ loc = map.GetLocation( );
		
		string text = name + "\nВаши координаты, х=" + loc.WorldX * 0.1 + ", y=" + loc.WorldY * 0.1;
				 text += " , игроков на карте = " + map.CountPlayers();
		return text;
	}
	
	void clear() override
	{
	
	}
	
	void show( Critter& gmaster ) override 
	{ 
		gmaster.Say( SAY_DIALOGBOX_TEXT, description );
		uint count = targets.length();
		if( count > 20 ) count = 20;
		for( uint i = 0, iEnd = targets.length(); i < iEnd; i++ )
			gmaster.Say( SAY_DIALOGBOX_BUTTON( i ), targets[i].name );
	} 
	
	uint get_screen() override 
	{ 
		return SCREEN_DIALOGBOX; 
	} 
	
	string@ name
	{
		get override
		{
			return property_name;
		}
		
		set override
		{
			if( @value !is null )
				property_name = value;
			else property_name = "unnamed";
		}
	}
	
	Map@ GetMap()
	{
		if( master_map )
		{
			if( master_id != 0 )
				return ::GetMap( master_id );
		}
		else
		{
			Critter@ master = GetCritter( master_id );
			if( @master !is null )
				return master.GetMap();
		}
		return null;
	}
	
	void answer( Critter& player, uint index, string& text ) override
	{
		if( index == uint( -1 ) )
		{
			GMPreset@ preset = GetPreset( player );
			if( @preset !is null ) @preset.answer = @this;
		}
		else targets[index].answer( player, uint( -1 ), text );
	}

	bool master_map;
	uint master_id;
	string property_name;
	array<AnswerPreset@>@ targets;
}

void answer_preset( Critter& player, uint index, string& text )
{
	GetPreset( player ).current_answer.answer( player, index, text );	
}

class GMPreset
{
	GMPreset( Critter& gmaster )
	{
		name = GetPlayerName( gmaster.Id );
		master_id = gmaster.Id;
		@spawn = SpawnPreset( );
		
		TeleportPreset@ copy_default = DefaultTeleportPreset.copy;
		@teleport = TeleportPreset( "Телепорт" );
		
		RememberTP custom_tp;
		@custom_tp.parent = teleport;
		
		CreateTPPreset custom_group( );
		@custom_group.parent = teleport;
		
		teleport.targets.insertLast( copy_default );
		teleport.targets.insertLast( custom_tp );
		teleport.targets.insertLast( custom_group );
		teleport.master_id = master_id;
		teleport.master_map = false;
		
		copy_default.master_id = master_id;
		copy_default.master_map = false;
		
		@current_answer = null;
		
	}
	
	void set_answer( AnswerController@ _answer )
	{
		if( @current_answer !is null )
		{
			current_answer.clear();
			@last_answer = current_answer;
		}
		
		@current_answer = @_answer;
		call_answer( );
	}
	
	void call_answer( )
	{
		if( @current_answer !is null )
		{
			Critter@ gmaster = GetCritter( master_id );
			if( @gmaster !is null )
			{
				gmaster.ShowScreen( current_answer.screen, current_answer.param, "answer_preset" );
				current_answer.show( gmaster );
			}
		}
	}
	
	uint master_id;
	string name;
	SpawnPreset @spawn;
	TeleportPreset @teleport;
	
	AnswerController @current_answer;
	AnswerController @last_answer;
}

GMPreset @GetPreset( Critter& cr )
{
	GMPreset @preset = null;
	string gm = GetPlayerName( cr.Id );
	if( Presets.exists( gm ) )
		Presets.get( gm, @preset );
	else
	{
		@preset = GMPreset( cr );
		Presets.set( gm, @preset );
	}
	return @preset;
}

void GM_SPAWN( Critter& player, Map& map, int weapon, int AI_type, uint16 hexX, uint16 hexY, int bonus_hp, int bonus_dmg, int bonus_skill )
{
	GMPreset @preset = @GetPreset( player );
	int[]@ params = @preset.spawn.params;
	string@ script = null;
	if( @preset.spawn.script !is null )
		@script = "Ai@" + preset.spawn.script;
	Critter@ cr = map.AddNpc( preset.spawn.ProtoId, hexX, hexY, Random( 0, 5 ), @params, null, @script );
    if( valid( cr ) )
    {
        cr.SetEvent( CRITTER_EVENT_DEAD, "_OnDeadEvent" );
        cr.StatBase[ ST_AI_ID ] = 207;
        cr.MercBase[ MERC_TYPE ] = 10;
        cr.MercBase[ MERC_MASTER_ID ] = player.Id;
        cr.StatBase[ ST_REPLICATION_TIME ] = 0;
        cr.ModeBase[ MODE_NO_HOME ] = 1;
        cr.ModeBase[ MODE_UNLIMITED_AMMO ] = 1;

        cr.StatBase[ ST_MAX_LIFE ] += bonus_hp;
        cr.StatBase[ ST_MELEE_DAMAGE ] += bonus_dmg;
        cr.SkillBase[ SK_SMALL_GUNS ] += bonus_skill;
        cr.SkillBase[ SK_BIG_GUNS ] += bonus_skill;
        cr.SkillBase[ SK_ENERGY_WEAPONS ] += bonus_skill;
        cr.SkillBase[ SK_UNARMED ] += bonus_skill;
        cr.SkillBase[ SK_MELEE_WEAPONS ] += bonus_skill;
        cr.SkillBase[ SK_THROWING ] += bonus_skill;

        if( weapon > 0 )
            cr.AddItem( weapon, 1 );
		if( @script is null )
		{
			if( AI_type == 0 )
				gmcontrolMob( player, cr.Id, 0, 0, null, null );
			else if( AI_type == 1 )
				GM_MobInit( cr );
			else if( AI_type == 2 )
			{
				Critter@[] players, guards;
				Map@ map = player.GetMap();
				if( valid( player ) && valid( cr ) && map.GetCritters( 0, FIND_LIFE_AND_KO | FIND_ONLY_PLAYERS, players ) > 0 )
				{
					for( uint j = 0, jj = players.length(); j < jj; j++ )
					{
						if( players[ j ].Id != uint( cr.Merc[ MERC_MASTER_ID ] ) )
						{
							AddAttackPlane( cr, 0, players[ j ], __RunOnCombat );
							cr.AddEnemyInStack( players[ j ].Id );
						}
					}
				}
			}
			else if( AI_type == 3 )
				GM_InitCommonGuard( player, cr.Id, 0, 0, null, null );
			else if( AI_type == 4 )
				GM_MobBossInit( cr );
			else if( AI_type == 5 )
				GM_MobMinionInit( cr );
		}
    }
}

GMCommand( gmcontrolMob )
{
    player.RunClientScript( "client_gui@_SetControlCritters", param0, 0, 0, null, null );
}

void _OnDeadEvent( Critter& dead, Critter@ killer )
{
    dead.AddTimeEvent( "cte_deleteCorpse", 60 * 30, 0 );
}

uint cte_deleteCorpse( Critter& dead, int identifier, uint& rate )
{
    DeleteNpc( dead );
    return 0;
}

string TimeToString( Critter& player )
{
    uint16 year = 0;
    uint16 month = 0;
    uint16 dayOfWeek = 0;
    uint16 day = 0;
    uint16 hour = 0;
    uint16 minute = 0;
    uint16 second = 0;
    uint16 milliseconds = 0;
    GetTime( year, month, day, dayOfWeek, hour, minute, second, milliseconds );
    return "" + ( day > 9 ? ( "" + day ) : ( "0" + day ) ) + "." + ( month > 9 ? ( "" + month ) : ( "0" + month ) ) + "." + year + " " + ( hour > 9 ? ( "" + hour ) : ( "0" + hour ) ) + ":" + ( minute > 9 ? ( "" + minute ) : ( "0" + minute ) );
}


import void arcadehiveinsert( Critter& cr, uint16 x, uint16 y, uint8 type ) from "arcade_menu";
import void arcadehivelist( Critter& cr ) from "arcade_menu";
import void arcadehiveclear( Critter& cr ) from "arcade_menu";
import void arcadehivedelone( Critter& cr, uint8 index ) from "arcade_menu";

GMCommand( hiveadd )
{
    arcadehiveinsert( player, param0, param1, param2 );
}

GMCommand( hivedel )
{
    arcadehivedelone( player, param0 );  // , param1, param2);
}

GMCommand( hivelist )
{
    arcadehivelist( player );  // param0, param1, param2);
}

import int CellLocationCreate( int pid, int x, int y, int force ) from "world";
import int CellLocationCreate( int pid, int x, int y, int wild, int livetime, int force ) from "world";
import bool CellLocationDelete( int x, int y ) from "world";
import int CellLocationSize( int x, int y, int sizeX, int sizeY ) from "world";


GMCommand( cell_create_wild )
{
	if( @param4 !is null && param4.length() == 5 )
		CellLocationCreate( param4[ 0 ], param4[ 1 ], param4[ 2 ], param4[ 3 ], param4[ 4 ], param4[ 5 ] );
}

GMCommand( cell_create )
{
	if( @param4 !is null && param4.length() == 4 )
		CellLocationCreate( param4[ 0 ], param4[ 1 ], param4[ 2 ], param4[ 3 ] );
}

GMCommand( cell_del )
{
	if( @param4 !is null && param4.length() == 2 )
		player.Say( SAY_NETMSG, "code : " + CellLocationDelete( param4[ 0 ], param4[ 1 ] ) );
}

GMCommand( cell_size )
{
	if( @param4 !is null && param4.length() == 4 )
		player.Say( SAY_NETMSG, "code : " + CellLocationSize( param4[ 0 ], param4[ 1 ], param4[ 2 ], param4[ 3 ] ) );
}

import void AccountDataBaseCheck(string accountPass) from "accessdb";
import void AcconuntDataBaseAuth(Critter& cr, string accountPass) from "accessdb";

GMCommand( unsafe_getaccess )
{
	//player.Say(SAY_NORM, ""+accountPass);
	//AccountDataBaseCheck(accountPass);
	if( @param3 !is null )
		AcconuntDataBaseAuth(player, param3);
}

import bool CellGetCellSize(uint mapId, uint8& sizeX, uint8& sizeY) from "world";

import string CheckAll( uint CheckType ) from "handcuffs";
AdminCommand( list )
{
	player.Say( SAY_NETMSG, CheckAll( param0 ) );
}

bool StickOn = false;

GMCommand( Stick )
{
	StickOn = param0 == 1;
}

GMCommand( unsafe_Stick )
{
	if( !StickOn )
		return;
		
	Map @ map = player.GetMap();
	if(map is null) return;

	uint8 sizeX = 1, sizeY = 1;

	CellGetCellSize(map.Id, sizeX, sizeY);

	uint16 hexX = 0, hexY = 0;
	map.GetEntireCoords(255, 0, hexX, hexY);

	bool isOutX = true, isOutY = true;

	if(hexX > player.HexX)
		hexX += 1;
	else if(hexX + 150 * sizeX < player.HexX)
		hexX += 148 * sizeX;
	else
	{
		hexX = player.HexX;
		isOutX = false;
	}

	if(hexY > player.HexY)
		hexY += 1;
	else if(hexY + 150 * sizeY < player.HexY)
		hexY += 148 * sizeY;
	else
	{
		hexY = player.HexY;
		isOutY = false;
	}

	if(isOutX || isOutY)
		player.TransitToHex (hexX, hexY, player.Dir);
		//player.TransitToGlobal( true );
	else
		unsafe_help(player, 0, 0, 0, "STICK FLOOD", null);
}
